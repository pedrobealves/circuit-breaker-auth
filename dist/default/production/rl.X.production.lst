

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 13 14:27:54 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    89                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    90  0000                     
    91                           ; Version 2.32
    92                           ; Generated 02/02/2021 GMT
    93                           ; 
    94                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F4550 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataCOMRAM
   128  00483E                     __pidataCOMRAM:
   129                           	callstack 0
   130                           
   131                           ;initializer for _row
   132  00483E  FFFF               	dw	65535
   133                           
   134                           	psect	idataBANK0
   135  004810                     __pidataBANK0:
   136                           	callstack 0
   137                           
   138                           ;initializer for assign_default_passwords@F4305
   139  004810  39                 	db	57
   140  004811  38                 	db	56
   141  004812  37                 	db	55
   142  004813  36                 	db	54
   143  004814  00                 	db	0
   144  004815  33                 	db	51
   145                           
   146                           ;initializer for assign_default_passwords@F4303
   147  004816  35                 	db	53
   148  004817  36                 	db	54
   149  004818  37                 	db	55
   150  004819  38                 	db	56
   151  00481A  00                 	db	0
   152  00481B  32                 	db	50
   153                           
   154                           ;initializer for assign_default_passwords@F4301
   155  00481C  31                 	db	49
   156  00481D  32                 	db	50
   157  00481E  33                 	db	51
   158  00481F  34                 	db	52
   159  004820  00                 	db	0
   160  004821  31                 	db	49
   161                           
   162                           	psect	smallconst
   163  000800                     __psmallconst:
   164                           	callstack 0
   165  000800  00                 	db	0
   166  000801                     read_keypad@F4312:
   167                           	callstack 0
   168  000801  41                 	db	65
   169  000802  42                 	db	66
   170  000803  43                 	db	67
   171  000804  44                 	db	68
   172  000805  33                 	db	51
   173  000806  36                 	db	54
   174  000807  39                 	db	57
   175  000808  23                 	db	35
   176  000809  32                 	db	50
   177  00080A  35                 	db	53
   178  00080B  38                 	db	56
   179  00080C  30                 	db	48
   180  00080D  31                 	db	49
   181  00080E  34                 	db	52
   182  00080F  37                 	db	55
   183  000810  2A                 	db	42
   184  000811                     __end_ofread_keypad@F4312:
   185                           	callstack 0
   186  000811  0000               	dw	0
   187  000813  4B00               	dw	19200
   188  000815                     __end_of_toint:
   189                           	callstack 0
   190  0000                     _LATEbits	set	3981
   191  0000                     _TRISEbits	set	3990
   192  0000                     _TRISD	set	3989
   193  0000                     _PORTD	set	3971
   194  0000                     _PIR2bits	set	4001
   195  0000                     _EECON2	set	4007
   196  0000                     _EECON1bits	set	4006
   197  0000                     _EEDATA	set	4008
   198  0000                     _EEADR	set	4009
   199  0000                     _IPR1bits	set	3999
   200  0000                     _PIE1bits	set	3997
   201  0000                     _RCONbits	set	4048
   202  0000                     _ADCON2	set	4032
   203  0000                     _ADCON0	set	4034
   204  0000                     _ADCON1	set	4033
   205  0000                     _TRISAbits	set	3986
   206  0000                     _TRISB	set	3987
   207  0000                     _TRISCbits	set	3988
   208  0000                     _ADRESL	set	4035
   209  0000                     _ADRESH	set	4036
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _PORTBbits	set	3969
   212  0000                     _INTCONbits	set	4082
   213  0000                     _PORTCbits	set	3970
   214  0000                     _PIR1bits	set	3998
   215  0000                     _RBPU	set	32655
   216  000815                     STR_1:
   217  000815  44                 	db	68	;'D'
   218  000816  49                 	db	73	;'I'
   219  000817  47                 	db	71	;'G'
   220  000818  49                 	db	73	;'I'
   221  000819  54                 	db	84	;'T'
   222  00081A  45                 	db	69	;'E'
   223  00081B  20                 	db	32
   224  00081C  41                 	db	65	;'A'
   225  00081D  20                 	db	32
   226  00081E  53                 	db	83	;'S'
   227  00081F  45                 	db	69	;'E'
   228  000820  4E                 	db	78	;'N'
   229  000821  48                 	db	72	;'H'
   230  000822  41                 	db	65	;'A'
   231  000823  3A                 	db	58	;':'
   232  000824  20                 	db	32
   233  000825  00                 	db	0
   234  000826                     STR_5:
   235  000826  4E                 	db	78	;'N'
   236  000827  41                 	db	65	;'A'
   237  000828  4F                 	db	79	;'O'
   238  000829  20                 	db	32
   239  00082A  45                 	db	69	;'E'
   240  00082B  4E                 	db	78	;'N'
   241  00082C  43                 	db	67	;'C'
   242  00082D  4F                 	db	79	;'O'
   243  00082E  4E                 	db	78	;'N'
   244  00082F  54                 	db	84	;'T'
   245  000830  52                 	db	82	;'R'
   246  000831  41                 	db	65	;'A'
   247  000832  44                 	db	68	;'D'
   248  000833  41                 	db	65	;'A'
   249  000834  00                 	db	0
   250  000835                     STR_14:
   251  000835  53                 	db	83	;'S'
   252  000836  45                 	db	69	;'E'
   253  000837  4E                 	db	78	;'N'
   254  000838  48                 	db	72	;'H'
   255  000839  41                 	db	65	;'A'
   256  00083A  20                 	db	32
   257  00083B  41                 	db	65	;'A'
   258  00083C  54                 	db	84	;'T'
   259  00083D  55                 	db	85	;'U'
   260  00083E  41                 	db	65	;'A'
   261  00083F  4C                 	db	76	;'L'
   262  000840  3A                 	db	58	;':'
   263  000841  20                 	db	32
   264  000842  00                 	db	0
   265  000843                     STR_15:
   266  000843  4E                 	db	78	;'N'
   267  000844  4F                 	db	79	;'O'
   268  000845  56                 	db	86	;'V'
   269  000846  41                 	db	65	;'A'
   270  000847  20                 	db	32
   271  000848  53                 	db	83	;'S'
   272  000849  45                 	db	69	;'E'
   273  00084A  4E                 	db	78	;'N'
   274  00084B  48                 	db	72	;'H'
   275  00084C  41                 	db	65	;'A'
   276  00084D  3A                 	db	58	;':'
   277  00084E  20                 	db	32
   278  00084F  00                 	db	0
   279  000850                     STR_20:
   280  000850  54                 	db	84	;'T'
   281  000851  45                 	db	69	;'E'
   282  000852  4D                 	db	77	;'M'
   283  000853  50                 	db	80	;'P'
   284  000854  3A                 	db	58	;':'
   285  000855  20                 	db	32
   286  000856  25                 	db	37
   287  000857  64                 	db	100	;'d'
   288  000858  DF                 	db	-33
   289  000859  43                 	db	67	;'C'
   290  00085A  00                 	db	0
   291  00085B                     STR_6:
   292  00085B  53                 	db	83	;'S'
   293  00085C  45                 	db	69	;'E'
   294  00085D  4D                 	db	77	;'M'
   295  00085E  20                 	db	32
   296  00085F  41                 	db	65	;'A'
   297  000860  43                 	db	67	;'C'
   298  000861  45                 	db	69	;'E'
   299  000862  53                 	db	83	;'S'
   300  000863  53                 	db	83	;'S'
   301  000864  4F                 	db	79	;'O'
   302  000865  00                 	db	0
   303  000866                     STR_3:
   304  000866  43                 	db	67	;'C'
   305  000867  4F                 	db	79	;'O'
   306  000868  4E                 	db	78	;'N'
   307  000869  43                 	db	67	;'C'
   308  00086A  45                 	db	69	;'E'
   309  00086B  44                 	db	68	;'D'
   310  00086C  49                 	db	73	;'I'
   311  00086D  44                 	db	68	;'D'
   312  00086E  4F                 	db	79	;'O'
   313  00086F  00                 	db	0
   314  000870                     STR_17:
   315  000870  41                 	db	65	;'A'
   316  000871  4C                 	db	76	;'L'
   317  000872  54                 	db	84	;'T'
   318  000873  45                 	db	69	;'E'
   319  000874  52                 	db	82	;'R'
   320  000875  41                 	db	65	;'A'
   321  000876  44                 	db	68	;'D'
   322  000877  41                 	db	65	;'A'
   323  000878  00                 	db	0
   324  000879                     STR_9:
   325  000879  52                 	db	82	;'R'
   326  00087A  4C                 	db	76	;'L'
   327  00087B  31                 	db	49	;'1'
   328  00087C  20                 	db	32
   329  00087D  2D                 	db	45
   330  00087E  20                 	db	32
   331  00087F  00                 	db	0
   332  000880                     STR_12:
   333  000880  52                 	db	82	;'R'
   334  000881  4C                 	db	76	;'L'
   335  000882  32                 	db	50	;'2'
   336  000883  20                 	db	32
   337  000884  2D                 	db	45
   338  000885  20                 	db	32
   339  000886  00                 	db	0
   340  000887                     STR_4:
   341  000887  53                 	db	83	;'S'
   342  000888  45                 	db	69	;'E'
   343  000889  4E                 	db	78	;'N'
   344  00088A  48                 	db	72	;'H'
   345  00088B  41                 	db	65	;'A'
   346  00088C  00                 	db	0
   347  00088D                     STR_21:
   348  00088D  7F                 	db	127
   349  00088E  28                 	db	40
   350  00088F  2A                 	db	42
   351  000890  29                 	db	41
   352  000891  00                 	db	0
   353  000892                     STR_13:
   354  000892  28                 	db	40
   355  000893  23                 	db	35
   356  000894  29                 	db	41
   357  000895  7E                 	db	126
   358  000896  00                 	db	0
   359  000897                     STR_8:
   360  000897  4F                 	db	79	;'O'
   361  000898  46                 	db	70	;'F'
   362  000899  46                 	db	70	;'F'
   363  00089A  00                 	db	0
   364  00089B                     STR_7:
   365  00089B  4F                 	db	79	;'O'
   366  00089C  4E                 	db	78	;'N'
   367  00089D  00                 	db	0
   368  00089E  00                 	db	0	; dummy byte at the end
   369  0000                     
   370                           ; #config settings
   371                           
   372                           	psect	cinit
   373  0040E8                     __pcinit:
   374                           	callstack 0
   375  0040E8                     start_initialization:
   376                           	callstack 0
   377  0040E8                     __initialization:
   378                           	callstack 0
   379                           
   380                           ; Initialize objects allocated to BANK0 (18 bytes)
   381                           ; load TBLPTR registers with __pidataBANK0
   382  0040E8  0E10               	movlw	low __pidataBANK0
   383  0040EA  6EF6               	movwf	tblptrl,c
   384  0040EC  0E48               	movlw	high __pidataBANK0
   385  0040EE  6EF7               	movwf	tblptrh,c
   386  0040F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   387  0040F2  6EF8               	movwf	tblptru,c
   388  0040F4  EE00  F0DE         	lfsr	0,__pdataBANK0
   389  0040F8  EE10 F012          	lfsr	1,18
   390  0040FC                     copy_data0:
   391  0040FC  0009               	tblrd		*+
   392  0040FE  CFF5 FFEE          	movff	tablat,postinc0
   393  004102  50E5               	movf	postdec1,w,c
   394  004104  50E1               	movf	fsr1l,w,c
   395  004106  E1FA               	bnz	copy_data0
   396                           
   397                           ; Initialize objects allocated to COMRAM (2 bytes)
   398                           ; load TBLPTR registers with __pidataCOMRAM
   399  004108  0E3E               	movlw	low __pidataCOMRAM
   400  00410A  6EF6               	movwf	tblptrl,c
   401  00410C  0E48               	movlw	high __pidataCOMRAM
   402  00410E  6EF7               	movwf	tblptrh,c
   403  004110  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   404  004112  6EF8               	movwf	tblptru,c
   405  004114  0009               	tblrd		*+	;fetch initializer
   406  004116  CFF5 F051          	movff	tablat,__pdataCOMRAM
   407  00411A  0009               	tblrd		*+	;fetch initializer
   408  00411C  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   409                           
   410                           ; Clear objects allocated to BANK1 (32 bytes)
   411  004120  EE01  F000         	lfsr	0,__pbssBANK1
   412  004124  0E20               	movlw	32
   413  004126                     clear_0:
   414  004126  6AEE               	clrf	postinc0,c
   415  004128  06E8               	decf	wreg,f,c
   416  00412A  E1FD               	bnz	clear_0
   417                           
   418                           ; Clear objects allocated to BANK0 (16 bytes)
   419  00412C  EE00  F0F0         	lfsr	0,__pbssBANK0
   420  004130  0E10               	movlw	16
   421  004132                     clear_1:
   422  004132  6AEE               	clrf	postinc0,c
   423  004134  06E8               	decf	wreg,f,c
   424  004136  E1FD               	bnz	clear_1
   425  004138                     end_of_initialization:
   426                           	callstack 0
   427  004138                     __end_of__initialization:
   428                           	callstack 0
   429  004138  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   430  00413A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   431  00413C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   432  00413E  6EF8               	movwf	tblptru,c
   433  004140  0100               	movlb	0
   434  004142  EFF2  F01E         	goto	_main	;jump to C main() function
   435                           
   436                           	psect	dataCOMRAM
   437  000051                     __pdataCOMRAM:
   438                           	callstack 0
   439  000051                     _row:
   440                           	callstack 0
   441  000051                     	ds	2
   442                           
   443                           	psect	bssBANK0
   444  0000F0                     __pbssBANK0:
   445                           	callstack 0
   446  0000F0                     roundf@F528:
   447                           	callstack 0
   448  0000F0                     	ds	4
   449  0000F4                     _nout:
   450                           	callstack 0
   451  0000F4                     	ds	2
   452  0000F6                     _width:
   453                           	callstack 0
   454  0000F6                     	ds	2
   455  0000F8                     _prec:
   456                           	callstack 0
   457  0000F8                     	ds	2
   458  0000FA                     _flags:
   459                           	callstack 0
   460  0000FA                     	ds	2
   461  0000FC                     _flag_status_relay:
   462                           	callstack 0
   463  0000FC                     	ds	2
   464  0000FE                     _access_level:
   465                           	callstack 0
   466  0000FE                     	ds	2
   467                           
   468                           	psect	dataBANK0
   469  0000DE                     __pdataBANK0:
   470                           	callstack 0
   471  0000DE                     assign_default_passwords@F4305:
   472                           	callstack 0
   473  0000DE                     	ds	6
   474  0000E4                     assign_default_passwords@F4303:
   475                           	callstack 0
   476  0000E4                     	ds	6
   477  0000EA                     assign_default_passwords@F4301:
   478                           	callstack 0
   479  0000EA                     	ds	6
   480                           
   481                           	psect	bssBANK1
   482  000100                     __pbssBANK1:
   483                           	callstack 0
   484  000100                     _dbuf:
   485                           	callstack 0
   486  000100                     	ds	32
   487                           
   488                           	psect	cstackBANK0
   489  000060                     __pcstackBANK0:
   490                           	callstack 0
   491  000060                     ??_delay_show_lcd:
   492  000060                     ??_DelayPORXLCD:
   493  000060                     ??_DelayXLCD:
   494  000060                     ?_isdigit:
   495                           	callstack 0
   496  000060                     ?_strcmp:
   497                           	callstack 0
   498  000060                     ?_strlen:
   499                           	callstack 0
   500  000060                     ?___awdiv:
   501                           	callstack 0
   502  000060                     ?___fladd:
   503                           	callstack 0
   504  000060                     ?___flneg:
   505                           	callstack 0
   506  000060                     ?___xxtofl:
   507                           	callstack 0
   508  000060                     ?___aodiv:
   509                           	callstack 0
   510  000060                     ?___aomod:
   511                           	callstack 0
   512  000060                     EEPROM_write@address:
   513                           	callstack 0
   514  000060                     EEPROM_read@address:
   515                           	callstack 0
   516  000060                     SetDDRamAddr@DDaddr:
   517                           	callstack 0
   518  000060                     WriteCmdXLCD@cmd:
   519                           	callstack 0
   520  000060                     WriteDataXLCD@data:
   521                           	callstack 0
   522  000060                     delay_ms@ms:
   523                           	callstack 0
   524  000060                     ___awdiv@dividend:
   525                           	callstack 0
   526  000060                     isdigit@c:
   527                           	callstack 0
   528  000060                     fputc@c:
   529                           	callstack 0
   530  000060                     strcmp@l:
   531                           	callstack 0
   532  000060                     strcpy@dest:
   533                           	callstack 0
   534  000060                     strlen@s:
   535                           	callstack 0
   536  000060                     ___flge@ff1:
   537                           	callstack 0
   538  000060                     ___flneg@f1:
   539                           	callstack 0
   540  000060                     ___fladd@b:
   541                           	callstack 0
   542  000060                     ___xxtofl@val:
   543                           	callstack 0
   544  000060                     ___aodiv@dividend:
   545                           	callstack 0
   546  000060                     ___aomod@dividend:
   547                           	callstack 0
   548                           
   549                           ; 8 bytes @ 0x0
   550  000060                     	ds	1
   551  000061                     ??_clean_lcd:
   552  000061                     ?_has_status_relay:
   553                           	callstack 0
   554  000061                     ?_has_passwords:
   555                           	callstack 0
   556  000061                     EEPROM_write@data:
   557                           	callstack 0
   558  000061                     OpenXLCD@lcdtype:
   559                           	callstack 0
   560  000061                     EEPROM_read_user@user:
   561                           	callstack 0
   562  000061                     putsXLCD@buffer:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x1
   566  000061                     	ds	1
   567  000062                     ??_update_status_relay:
   568  000062                     ??_isdigit:
   569  000062                     ??_delay_ms:
   570  000062                     toggle_relay@relay_number:
   571                           	callstack 0
   572  000062                     EEPROM_write_user@user:
   573                           	callstack 0
   574  000062                     ___awdiv@divisor:
   575                           	callstack 0
   576  000062                     fputc@fp:
   577                           	callstack 0
   578  000062                     strcmp@r:
   579                           	callstack 0
   580  000062                     strcpy@src:
   581                           	callstack 0
   582  000062                     strlen@a:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x2
   586  000062                     	ds	1
   587  000063                     EEPROM_read_user@start_address:
   588                           	callstack 0
   589  000063                     has_status_relay@address:
   590                           	callstack 0
   591  000063                     has_passwords@address:
   592                           	callstack 0
   593  000063                     delay_ms@i:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x3
   597  000063                     	ds	1
   598  000064                     ??_toggle_relay:
   599  000064                     ??_strcmp:
   600  000064                     ??_fputc:
   601  000064                     ??___xxtofl:
   602  000064                     EEPROM_write_user@start_address:
   603                           	callstack 0
   604  000064                     EEPROM_read_user@address:
   605                           	callstack 0
   606  000064                     ___awdiv@counter:
   607                           	callstack 0
   608  000064                     strcpy@s:
   609                           	callstack 0
   610  000064                     ___flge@ff2:
   611                           	callstack 0
   612  000064                     ___fladd@a:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x4
   616  000064                     	ds	1
   617  000065                     ??_read_keypad:
   618  000065                     EEPROM_write_user@address:
   619                           	callstack 0
   620  000065                     EEPROM_read_user@i:
   621                           	callstack 0
   622  000065                     ___awdiv@sign:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x5
   626  000065                     	ds	1
   627  000066                     EEPROM_write_user@i:
   628                           	callstack 0
   629  000066                     grant_access@input_password:
   630                           	callstack 0
   631  000066                     ___awdiv@quotient:
   632                           	callstack 0
   633  000066                     strcpy@d:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x6
   637  000066                     	ds	1
   638  000067                     assign_default_passwords@user1:
   639                           	callstack 0
   640  000067                     read_keypad@keys:
   641                           	callstack 0
   642                           
   643                           ; 16 bytes @ 0x7
   644  000067                     	ds	1
   645  000068                     ??___fladd:
   646  000068                     ??___flge:
   647  000068                     grant_access@address:
   648                           	callstack 0
   649  000068                     ___xxtofl@sign:
   650                           	callstack 0
   651  000068                     toggle_relay@status:
   652                           	callstack 0
   653  000068                     update_password@current_password:
   654                           	callstack 0
   655  000068                     ___aodiv@divisor:
   656                           	callstack 0
   657  000068                     ___aomod@divisor:
   658                           	callstack 0
   659                           
   660                           ; 8 bytes @ 0x8
   661  000068                     	ds	1
   662  000069                     ___xxtofl@exp:
   663                           	callstack 0
   664  000069                     fputs@s:
   665                           	callstack 0
   666  000069                     grant_access@user:
   667                           	callstack 0
   668                           
   669                           ; 6 bytes @ 0x9
   670  000069                     	ds	1
   671  00006A                     ?_option_relay:
   672                           	callstack 0
   673  00006A                     option_relay@relay_number:
   674                           	callstack 0
   675  00006A                     update_password@new_password:
   676                           	callstack 0
   677  00006A                     ___xxtofl@arg:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0xA
   681  00006A                     	ds	1
   682  00006B                     fputs@fp:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0xB
   686  00006B                     	ds	1
   687  00006C                     ??_option_relay:
   688  00006C                     update_password@address:
   689                           	callstack 0
   690  00006C                     ___fladd@signs:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0xC
   694  00006C                     	ds	1
   695  00006D                     ___fladd@aexp:
   696                           	callstack 0
   697  00006D                     fputs@c:
   698                           	callstack 0
   699  00006D                     update_password@user:
   700                           	callstack 0
   701  00006D                     assign_default_passwords@user2:
   702                           	callstack 0
   703                           
   704                           ; 6 bytes @ 0xD
   705  00006D                     	ds	1
   706  00006E                     ?___flmul:
   707                           	callstack 0
   708  00006E                     ___fladd@bexp:
   709                           	callstack 0
   710  00006E                     fputs@i:
   711                           	callstack 0
   712  00006E                     ___flmul@b:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0xE
   716  00006E                     	ds	1
   717  00006F                     ___fladd@grs:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0xF
   721  00006F                     	ds	1
   722  000070                     ?_pad:
   723                           	callstack 0
   724  000070                     ?___flsub:
   725                           	callstack 0
   726  000070                     ___aodiv@counter:
   727                           	callstack 0
   728  000070                     ___aomod@counter:
   729                           	callstack 0
   730  000070                     pad@fp:
   731                           	callstack 0
   732  000070                     ___flsub@b:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x10
   736  000070                     	ds	1
   737  000071                     ___aodiv@sign:
   738                           	callstack 0
   739  000071                     ___aomod@sign:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x11
   743  000071                     	ds	1
   744  000072                     ?_abs:
   745                           	callstack 0
   746  000072                     pad@buf:
   747                           	callstack 0
   748  000072                     abs@a:
   749                           	callstack 0
   750  000072                     ___flmul@a:
   751                           	callstack 0
   752  000072                     ___aodiv@quotient:
   753                           	callstack 0
   754                           
   755                           ; 8 bytes @ 0x12
   756  000072                     	ds	1
   757  000073                     assign_default_passwords@user3:
   758                           	callstack 0
   759                           
   760                           ; 6 bytes @ 0x13
   761  000073                     	ds	1
   762  000074                     ??_abs:
   763  000074                     pad@p:
   764                           	callstack 0
   765  000074                     ___flsub@a:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x14
   769  000074                     	ds	2
   770  000076                     ??___flmul:
   771  000076                     ??_pad:
   772                           
   773                           ; 1 bytes @ 0x16
   774  000076                     	ds	1
   775  000077                     read_keypad@col:
   776                           	callstack 0
   777  000077                     pad@i:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x17
   781  000077                     	ds	1
   782  000078                     
   783                           ; 1 bytes @ 0x18
   784  000078                     	ds	1
   785  000079                     ??_show_status_relay:
   786  000079                     get_password@password:
   787                           	callstack 0
   788  000079                     pad@w:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x19
   792  000079                     	ds	1
   793  00007A                     ___flmul@sign:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x1A
   797  00007A                     	ds	1
   798  00007B                     ??_get_password:
   799  00007B                     ?_dtoa:
   800                           	callstack 0
   801  00007B                     dtoa@fp:
   802                           	callstack 0
   803  00007B                     ___flmul@grs:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x1B
   807  00007B                     	ds	2
   808  00007D                     _show_status_relay$776:
   809                           	callstack 0
   810  00007D                     get_password@entered_password:
   811                           	callstack 0
   812  00007D                     dtoa@d:
   813                           	callstack 0
   814                           
   815                           ; 8 bytes @ 0x1D
   816  00007D                     	ds	2
   817  00007F                     ___flmul@aexp:
   818                           	callstack 0
   819  00007F                     show_status_relay@rl1:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x1F
   823  00007F                     	ds	1
   824  000080                     ___flmul@bexp:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x20
   828  000080                     	ds	1
   829  000081                     show_status_relay@rl2:
   830                           	callstack 0
   831  000081                     ___flmul@prod:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x21
   835  000081                     	ds	1
   836  000082                     get_password@key:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x22
   840  000082                     	ds	1
   841  000083                     show_status_relay@key:
   842                           	callstack 0
   843  000083                     get_password@i:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x23
   847  000083                     	ds	2
   848  000085                     ??_start:
   849  000085                     ??_change_password:
   850  000085                     ??_dtoa:
   851  000085                     ___flmul@temp:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x25
   855  000085                     	ds	2
   856  000087                     ?_roundf:
   857                           	callstack 0
   858  000087                     roundf@x:
   859                           	callstack 0
   860  000087                     start@current_password:
   861                           	callstack 0
   862                           
   863                           ; 5 bytes @ 0x27
   864  000087                     	ds	2
   865  000089                     change_password@new_password:
   866                           	callstack 0
   867                           
   868                           ; 5 bytes @ 0x29
   869  000089                     	ds	2
   870  00008B                     ??_roundf:
   871                           
   872                           ; 1 bytes @ 0x2B
   873  00008B                     	ds	2
   874  00008D                     _dtoa$1559:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x2D
   878  00008D                     	ds	1
   879  00008E                     change_password@current_password:
   880                           	callstack 0
   881                           
   882                           ; 5 bytes @ 0x2E
   883  00008E                     	ds	1
   884  00008F                     dtoa@p:
   885                           	callstack 0
   886  00008F                     _roundf$1849:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x2F
   890  00008F                     	ds	2
   891  000091                     dtoa@w:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x31
   895  000091                     	ds	2
   896  000093                     dtoa@s:
   897                           	callstack 0
   898  000093                     roundf@e:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x33
   902  000093                     	ds	2
   903  000095                     _roundf$1848:
   904                           	callstack 0
   905  000095                     dtoa@n:
   906                           	callstack 0
   907                           
   908                           ; 8 bytes @ 0x35
   909  000095                     	ds	4
   910  000099                     roundf@u:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x39
   914  000099                     	ds	4
   915  00009D                     dtoa@i:
   916                           	callstack 0
   917  00009D                     roundf@y:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x3D
   921  00009D                     	ds	2
   922  00009F                     ?_vfpfcnvrt:
   923                           	callstack 0
   924  00009F                     vfpfcnvrt@fp:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x3F
   928  00009F                     	ds	2
   929  0000A1                     ?___fltol:
   930                           	callstack 0
   931  0000A1                     vfpfcnvrt@fmt:
   932                           	callstack 0
   933  0000A1                     ___fltol@f1:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x41
   937  0000A1                     	ds	2
   938  0000A3                     vfpfcnvrt@ap:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x43
   942  0000A3                     	ds	2
   943  0000A5                     ??___fltol:
   944  0000A5                     ??_vfpfcnvrt:
   945                           
   946                           ; 1 bytes @ 0x45
   947  0000A5                     	ds	2
   948  0000A7                     vfpfcnvrt@ll:
   949                           	callstack 0
   950                           
   951                           ; 8 bytes @ 0x47
   952  0000A7                     	ds	2
   953  0000A9                     ___fltol@sign1:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x49
   957  0000A9                     	ds	1
   958  0000AA                     ___fltol@exp1:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x4A
   962  0000AA                     	ds	1
   963  0000AB                     ?_convert_temp:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x4B
   967  0000AB                     	ds	2
   968  0000AD                     ??_convert_temp:
   969                           
   970                           ; 1 bytes @ 0x4D
   971  0000AD                     	ds	2
   972  0000AF                     ?_vfprintf:
   973                           	callstack 0
   974  0000AF                     vfprintf@fp:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x4F
   978  0000AF                     	ds	2
   979  0000B1                     vfprintf@fmt:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x51
   983  0000B1                     	ds	2
   984  0000B3                     vfprintf@ap:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x53
   988  0000B3                     	ds	2
   989  0000B5                     vfprintf@cfmt:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x55
   993  0000B5                     	ds	2
   994  0000B7                     ?_sprintf:
   995                           	callstack 0
   996  0000B7                     sprintf@s:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x57
  1000  0000B7                     	ds	2
  1001  0000B9                     sprintf@fmt:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x59
  1005  0000B9                     	ds	4
  1006  0000BD                     sprintf@ap:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x5D
  1010  0000BD                     	ds	2
  1011  0000BF                     sprintf@f:
  1012                           	callstack 0
  1013                           
  1014                           ; 6 bytes @ 0x5F
  1015  0000BF                     	ds	6
  1016  0000C5                     show_temp@int_str:
  1017                           	callstack 0
  1018                           
  1019                           ; 20 bytes @ 0x65
  1020  0000C5                     	ds	20
  1021  0000D9                     show_temp@adc:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x79
  1025  0000D9                     	ds	2
  1026  0000DB                     ??_main:
  1027                           
  1028                           ; 1 bytes @ 0x7B
  1029  0000DB                     	ds	2
  1030  0000DD                     main@key:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x7D
  1034  0000DD                     	ds	1
  1035                           
  1036                           	psect	cstackCOMRAM
  1037  000001                     __pcstackCOMRAM:
  1038                           	callstack 0
  1039  000001                     ?i2___awdiv:
  1040                           	callstack 0
  1041  000001                     ?i2___flneg:
  1042                           	callstack 0
  1043  000001                     ?i2___fladd:
  1044                           	callstack 0
  1045  000001                     ?i2___xxtofl:
  1046                           	callstack 0
  1047  000001                     i2___awdiv@dividend:
  1048                           	callstack 0
  1049  000001                     i2___flge@ff1:
  1050                           	callstack 0
  1051  000001                     i2___flneg@f1:
  1052                           	callstack 0
  1053  000001                     i2___fladd@b:
  1054                           	callstack 0
  1055  000001                     i2___xxtofl@val:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x0
  1059  000001                     	ds	2
  1060  000003                     i2___awdiv@divisor:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x2
  1064  000003                     	ds	2
  1065  000005                     ??i2___xxtofl:
  1066  000005                     i2___awdiv@counter:
  1067                           	callstack 0
  1068  000005                     i2___flge@ff2:
  1069                           	callstack 0
  1070  000005                     i2___fladd@a:
  1071                           	callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x4
  1074  000005                     	ds	1
  1075  000006                     i2___awdiv@sign:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x5
  1079  000006                     	ds	1
  1080  000007                     i2___awdiv@quotient:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x6
  1084  000007                     	ds	2
  1085  000009                     ??i2___flge:
  1086  000009                     ??i2___fladd:
  1087  000009                     i2___xxtofl@sign:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x8
  1091  000009                     	ds	1
  1092  00000A                     i2___xxtofl@exp:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x9
  1096  00000A                     	ds	1
  1097  00000B                     i2___xxtofl@arg:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0xA
  1101  00000B                     	ds	2
  1102  00000D                     i2___fladd@signs:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0xC
  1106  00000D                     	ds	1
  1107  00000E                     i2___fladd@aexp:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0xD
  1111  00000E                     	ds	1
  1112  00000F                     ?i2___flmul:
  1113                           	callstack 0
  1114  00000F                     i2___fladd@bexp:
  1115                           	callstack 0
  1116  00000F                     i2___flmul@b:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0xE
  1120  00000F                     	ds	1
  1121  000010                     i2___fladd@grs:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0xF
  1125  000010                     	ds	1
  1126  000011                     ?i2___flsub:
  1127                           	callstack 0
  1128  000011                     i2___flsub@b:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x10
  1132  000011                     	ds	2
  1133  000013                     i2___flmul@a:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x12
  1137  000013                     	ds	2
  1138  000015                     i2___flsub@a:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x14
  1142  000015                     	ds	2
  1143  000017                     ??i2___flmul:
  1144                           
  1145                           ; 1 bytes @ 0x16
  1146  000017                     	ds	2
  1147  000019                     
  1148                           ; 1 bytes @ 0x18
  1149  000019                     	ds	2
  1150  00001B                     i2___flmul@sign:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x1A
  1154  00001B                     	ds	1
  1155  00001C                     i2___flmul@grs:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x1B
  1159  00001C                     	ds	4
  1160  000020                     i2___flmul@aexp:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x1F
  1164  000020                     	ds	1
  1165  000021                     i2___flmul@bexp:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x20
  1169  000021                     	ds	1
  1170  000022                     i2___flmul@prod:
  1171                           	callstack 0
  1172                           
  1173                           ; 4 bytes @ 0x21
  1174  000022                     	ds	4
  1175  000026                     i2___flmul@temp:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x25
  1179  000026                     	ds	2
  1180  000028                     ?i2_roundf:
  1181                           	callstack 0
  1182  000028                     i2roundf@x:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x27
  1186  000028                     	ds	4
  1187  00002C                     ??i2_roundf:
  1188                           
  1189                           ; 1 bytes @ 0x2B
  1190  00002C                     	ds	4
  1191  000030                     i2_roundf$1961:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x2F
  1195  000030                     	ds	4
  1196  000034                     i2roundf@e:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x33
  1200  000034                     	ds	2
  1201  000036                     i2_roundf$1960:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x35
  1205  000036                     	ds	4
  1206  00003A                     i2roundf@u:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x39
  1210  00003A                     	ds	4
  1211  00003E                     i2roundf@y:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x3D
  1215  00003E                     	ds	4
  1216  000042                     ?i2___fltol:
  1217                           	callstack 0
  1218  000042                     i2___fltol@f1:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x41
  1222  000042                     	ds	4
  1223  000046                     ??i2___fltol:
  1224                           
  1225                           ; 1 bytes @ 0x45
  1226  000046                     	ds	4
  1227  00004A                     i2___fltol@sign1:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x49
  1231  00004A                     	ds	1
  1232  00004B                     i2___fltol@exp1:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x4A
  1236  00004B                     	ds	1
  1237  00004C                     ?i2_convert_temp:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x4B
  1241  00004C                     	ds	2
  1242  00004E                     ??i2_convert_temp:
  1243                           
  1244                           ; 1 bytes @ 0x4D
  1245  00004E                     	ds	2
  1246  000050                     ??_high_isr:
  1247                           
  1248                           ; 1 bytes @ 0x4F
  1249  000050                     	ds	1
  1250                           
  1251 ;;
  1252 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1253 ;;
  1254 ;; *************** function _main *****************
  1255 ;; Defined at:
  1256 ;;		line 164 in file "main.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  key             1  125[BANK0 ] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0
  1271 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1272 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1273 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1274 ;;Total ram usage:        3 bytes
  1275 ;; Hardware stack levels required when called: 14
  1276 ;; This function calls:
  1277 ;;		_assign_default_passwords
  1278 ;;		_assign_default_status_relay
  1279 ;;		_change_password
  1280 ;;		_clean_lcd
  1281 ;;		_config
  1282 ;;		_read_keypad
  1283 ;;		_show_temp
  1284 ;;		_start
  1285 ;;		_update_status_relay
  1286 ;; This function is called by:
  1287 ;;		Startup code after reset
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text0
  1292  003DE4                     __ptext0:
  1293                           	callstack 0
  1294  003DE4                     _main:
  1295                           	callstack 17
  1296  003DE4                     
  1297                           ;main.c: 165:     config();
  1298  003DE4  ECBF  F023         	call	_config	;wreg free
  1299  003DE8                     
  1300                           ;main.c: 167:     assign_default_passwords();
  1301  003DE8  ECB0  F01E         	call	_assign_default_passwords	;wreg free
  1302  003DEC                     
  1303                           ;main.c: 168:     assign_default_status_relay();
  1304  003DEC  ECA7  F023         	call	_assign_default_status_relay	;wreg free
  1305  003DF0                     l5449:
  1306                           
  1307                           ;main.c: 173:         _delay((unsigned long)((100)*(20000000/4000.0)));
  1308  003DF0  0E03               	movlw	3
  1309  003DF2  0100               	movlb	0	; () banked
  1310  003DF4  6FDC               	movwf	(??_main+1)& (0+255),b
  1311  003DF6  0E8A               	movlw	138
  1312  003DF8  6FDB               	movwf	??_main& (0+255),b
  1313  003DFA  0E55               	movlw	85
  1314  003DFC                     u6297:
  1315  003DFC  2EE8               	decfsz	wreg,f,c
  1316  003DFE  D7FE               	bra	u6297
  1317  003E00  2FDB               	decfsz	??_main& (0+255),f,b
  1318  003E02  D7FC               	bra	u6297
  1319  003E04  2FDC               	decfsz	(??_main+1)& (0+255),f,b
  1320  003E06  D7FA               	bra	u6297
  1321  003E08  D000               	nop2	
  1322  003E0A                     
  1323                           ;main.c: 174:         update_status_relay();
  1324  003E0A  ECA5  F01F         	call	_update_status_relay	;wreg free
  1325  003E0E                     
  1326                           ;main.c: 175:         key = read_keypad();
  1327  003E0E  EC65  F012         	call	_read_keypad	;wreg free
  1328  003E12  0100               	movlb	0	; () banked
  1329  003E14  6FDD               	movwf	main@key& (0+255),b
  1330  003E16                     
  1331                           ; BSR set to: 0
  1332                           ;main.c: 176:         clean_lcd();
  1333  003E16  ECD6  F023         	call	_clean_lcd	;wreg free
  1334  003E1A                     
  1335                           ;main.c: 177:         show_temp();
  1336  003E1A  ECDC  F01F         	call	_show_temp	;wreg free
  1337  003E1E                     
  1338                           ;main.c: 178:         if (key != '\0') {
  1339  003E1E  0100               	movlb	0	; () banked
  1340  003E20  51DD               	movf	main@key& (0+255),w,b
  1341  003E22  B4D8               	btfsc	status,2,c
  1342  003E24  EF16  F01F         	goto	u6231
  1343  003E28  EF18  F01F         	goto	u6230
  1344  003E2C                     u6231:
  1345  003E2C  EFF8  F01E         	goto	l5449
  1346  003E30                     u6230:
  1347  003E30                     
  1348                           ; BSR set to: 0
  1349                           ;main.c: 179:             if (key == '#') start();
  1350  003E30  0E23               	movlw	35
  1351  003E32  19DD               	xorwf	main@key& (0+255),w,b
  1352  003E34  A4D8               	btfss	status,2,c
  1353  003E36  EF1F  F01F         	goto	u6241
  1354  003E3A  EF21  F01F         	goto	u6240
  1355  003E3E                     u6241:
  1356  003E3E  EF23  F01F         	goto	l5465
  1357  003E42                     u6240:
  1358  003E42                     
  1359                           ; BSR set to: 0
  1360  003E42  ECD2  F01A         	call	_start	;wreg free
  1361  003E46                     l5465:
  1362                           
  1363                           ;main.c: 180:             if (key == '*') change_password();
  1364  003E46  0E2A               	movlw	42
  1365  003E48  0100               	movlb	0	; () banked
  1366  003E4A  19DD               	xorwf	main@key& (0+255),w,b
  1367  003E4C  A4D8               	btfss	status,2,c
  1368  003E4E  EF2B  F01F         	goto	u6251
  1369  003E52  EF2D  F01F         	goto	u6250
  1370  003E56                     u6251:
  1371  003E56  EFF8  F01E         	goto	l5449
  1372  003E5A                     u6250:
  1373  003E5A                     
  1374                           ; BSR set to: 0
  1375  003E5A  EC30  F018         	call	_change_password	;wreg free
  1376  003E5E  EFF8  F01E         	goto	l5449
  1377  003E62  EF07  F000         	goto	start
  1378  003E66                     __end_of_main:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _start *****************
  1382 ;; Defined at:
  1383 ;;		line 185 in file "main.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  current_pass    5   39[BANK0 ] unsigned char [5]
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1399 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1400 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        7 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 9
  1404 ;; This function calls:
  1405 ;;		_WriteCmdXLCD
  1406 ;;		_clean_lcd
  1407 ;;		_delay_show_lcd
  1408 ;;		_get_password
  1409 ;;		_grant_access
  1410 ;;		_putsXLCD
  1411 ;;		_show_status_relay
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text1
  1418  0035A4                     __ptext1:
  1419                           	callstack 0
  1420  0035A4                     _start:
  1421                           	callstack 21
  1422  0035A4                     l135:
  1423                           
  1424                           ;main.c: 187:         ADCON0bits.GO_DONE = 1;
  1425  0035A4  82C2               	bsf	194,1,c	;volatile
  1426  0035A6                     
  1427                           ;main.c: 188:         clean_lcd();
  1428  0035A6  ECD6  F023         	call	_clean_lcd	;wreg free
  1429                           
  1430                           ;main.c: 189:         WriteCmdXLCD(0x81);
  1431  0035AA  0E81               	movlw	129
  1432  0035AC  EC7E  F022         	call	_WriteCmdXLCD
  1433  0035B0                     
  1434                           ;main.c: 190:         putsXLCD ("DIGITE A SENHA: ");
  1435  0035B0  0E15               	movlw	low STR_1
  1436  0035B2  0100               	movlb	0	; () banked
  1437  0035B4  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1438  0035B6  0E08               	movlw	high STR_1
  1439  0035B8  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1440  0035BA  EC33  F01F         	call	_putsXLCD	;wreg free
  1441  0035BE                     
  1442                           ;main.c: 191:         char current_password[5];;main.c: 192:         _delay((unsigned lo
      +                          ng)((100)*(20000000/4000.0)));
  1443  0035BE  0E03               	movlw	3
  1444  0035C0  0100               	movlb	0	; () banked
  1445  0035C2  6F86               	movwf	(??_start+1)& (0+255),b
  1446  0035C4  0E8A               	movlw	138
  1447  0035C6  6F85               	movwf	??_start& (0+255),b
  1448  0035C8  0E55               	movlw	85
  1449  0035CA                     u6307:
  1450  0035CA  2EE8               	decfsz	wreg,f,c
  1451  0035CC  D7FE               	bra	u6307
  1452  0035CE  2F85               	decfsz	??_start& (0+255),f,b
  1453  0035D0  D7FC               	bra	u6307
  1454  0035D2  2F86               	decfsz	(??_start+1)& (0+255),f,b
  1455  0035D4  D7FA               	bra	u6307
  1456  0035D6  D000               	nop2	
  1457  0035D8                     
  1458                           ;main.c: 193:         get_password(current_password);
  1459  0035D8  0E87               	movlw	low start@current_password
  1460  0035DA  0100               	movlb	0	; () banked
  1461  0035DC  6F79               	movwf	get_password@password& (0+255),b
  1462  0035DE  0E00               	movlw	high start@current_password
  1463  0035E0  6F7A               	movwf	(get_password@password+1)& (0+255),b
  1464  0035E2  ECC4  F01D         	call	_get_password	;wreg free
  1465  0035E6                     
  1466                           ;main.c: 194:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1467  0035E6  0E0D               	movlw	13
  1468  0035E8  0100               	movlb	0	; () banked
  1469  0035EA  6F86               	movwf	(??_start+1)& (0+255),b
  1470  0035EC  0EAF               	movlw	175
  1471  0035EE  6F85               	movwf	??_start& (0+255),b
  1472  0035F0  0EB6               	movlw	182
  1473  0035F2                     u6317:
  1474  0035F2  2EE8               	decfsz	wreg,f,c
  1475  0035F4  D7FE               	bra	u6317
  1476  0035F6  2F85               	decfsz	??_start& (0+255),f,b
  1477  0035F8  D7FC               	bra	u6317
  1478  0035FA  2F86               	decfsz	(??_start+1)& (0+255),f,b
  1479  0035FC  D7FA               	bra	u6317
  1480  0035FE  F000               	nop	
  1481  003600                     
  1482                           ;main.c: 195:         access_level = (grant_access(current_password) - '0');
  1483  003600  0E87               	movlw	low start@current_password
  1484  003602  0100               	movlb	0	; () banked
  1485  003604  6F66               	movwf	grant_access@input_password& (0+255),b
  1486  003606  0E00               	movlw	high start@current_password
  1487  003608  6F67               	movwf	(grant_access@input_password+1)& (0+255),b
  1488  00360A  EC43  F020         	call	_grant_access	;wreg free
  1489  00360E  0100               	movlb	0	; () banked
  1490  003610  6F85               	movwf	??_start& (0+255),b
  1491  003612  0ED0               	movlw	208
  1492  003614  2585               	addwf	??_start& (0+255),w,b
  1493  003616  6FFE               	movwf	_access_level& (0+255),b
  1494  003618  6BFF               	clrf	(_access_level+1)& (0+255),b
  1495  00361A  0EFF               	movlw	255
  1496  00361C  23FF               	addwfc	(_access_level+1)& (0+255),f,b
  1497  00361E                     
  1498                           ; BSR set to: 0
  1499                           ;main.c: 196:         if (access_level > 0) {
  1500  00361E  BFFF               	btfsc	(_access_level+1)& (0+255),7,b
  1501  003620  EF1A  F01B         	goto	u6101
  1502  003624  51FF               	movf	(_access_level+1)& (0+255),w,b
  1503  003626  E108               	bnz	u6100
  1504  003628  05FE               	decf	_access_level& (0+255),w,b
  1505  00362A  A0D8               	btfss	status,0,c
  1506  00362C  EF1A  F01B         	goto	u6101
  1507  003630  EF1C  F01B         	goto	u6100
  1508  003634                     u6101:
  1509  003634  EF35  F01B         	goto	l5357
  1510  003638                     u6100:
  1511  003638                     
  1512                           ; BSR set to: 0
  1513                           ;main.c: 197:             clean_lcd();
  1514  003638  ECD6  F023         	call	_clean_lcd	;wreg free
  1515  00363C                     
  1516                           ;main.c: 198:             putsXLCD ("ACESSO");
  1517  00363C  0E5F               	movlw	low (STR_6+4)
  1518  00363E  0100               	movlb	0	; () banked
  1519  003640  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1520  003642  0E08               	movlw	high (STR_6+4)
  1521  003644  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1522  003646  EC33  F01F         	call	_putsXLCD	;wreg free
  1523  00364A                     
  1524                           ;main.c: 199:             WriteCmdXLCD(0xC0);
  1525  00364A  0EC0               	movlw	192
  1526  00364C  EC7E  F022         	call	_WriteCmdXLCD
  1527                           
  1528                           ;main.c: 200:             putsXLCD ("CONCEDIDO");
  1529  003650  0E66               	movlw	low STR_3
  1530  003652  0100               	movlb	0	; () banked
  1531  003654  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1532  003656  0E08               	movlw	high STR_3
  1533  003658  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1534  00365A  EC33  F01F         	call	_putsXLCD	;wreg free
  1535  00365E                     
  1536                           ;main.c: 201:             delay_show_lcd();
  1537  00365E  ECE6  F023         	call	_delay_show_lcd	;wreg free
  1538  003662                     
  1539                           ;main.c: 202:             show_status_relay();
  1540  003662  ECE2  F015         	call	_show_status_relay	;wreg free
  1541                           
  1542                           ;main.c: 203:             break;
  1543  003666  EF4C  F01B         	goto	l140
  1544  00366A                     l5357:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 205:             clean_lcd();
  1548  00366A  ECD6  F023         	call	_clean_lcd	;wreg free
  1549  00366E                     
  1550                           ;main.c: 206:             putsXLCD ("SENHA");
  1551  00366E  0E87               	movlw	low STR_4
  1552  003670  0100               	movlb	0	; () banked
  1553  003672  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1554  003674  0E08               	movlw	high STR_4
  1555  003676  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1556  003678  EC33  F01F         	call	_putsXLCD	;wreg free
  1557  00367C                     
  1558                           ;main.c: 207:             WriteCmdXLCD(0xC0);
  1559  00367C  0EC0               	movlw	192
  1560  00367E  EC7E  F022         	call	_WriteCmdXLCD
  1561                           
  1562                           ;main.c: 208:             putsXLCD ("NAO ENCONTRADA");
  1563  003682  0E26               	movlw	low STR_5
  1564  003684  0100               	movlb	0	; () banked
  1565  003686  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1566  003688  0E08               	movlw	high STR_5
  1567  00368A  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1568  00368C  EC33  F01F         	call	_putsXLCD	;wreg free
  1569  003690                     
  1570                           ;main.c: 209:             delay_show_lcd();
  1571  003690  ECE6  F023         	call	_delay_show_lcd	;wreg free
  1572  003694  EFD2  F01A         	goto	l135
  1573  003698                     l140:
  1574  003698  0012               	return		;funcret
  1575  00369A                     __end_of_start:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _show_status_relay *****************
  1579 ;; Defined at:
  1580 ;;		line 214 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  rl2             2   33[BANK0 ] PTR unsigned char 
  1585 ;;		 -> STR_11(4), STR_10(3), 
  1586 ;;  rl1             2   31[BANK0 ] PTR unsigned char 
  1587 ;;		 -> STR_8(4), STR_7(3), 
  1588 ;;  key             1   35[BANK0 ] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0
  1599 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1600 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1601 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1602 ;;Total ram usage:       11 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 8
  1605 ;; This function calls:
  1606 ;;		_EEPROM_read
  1607 ;;		_WriteCmdXLCD
  1608 ;;		_clean_lcd
  1609 ;;		_delay_show_lcd
  1610 ;;		_isdigit
  1611 ;;		_option_relay
  1612 ;;		_putsXLCD
  1613 ;;		_read_keypad
  1614 ;;		_update_status_relay
  1615 ;; This function is called by:
  1616 ;;		_start
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text2
  1621  002BC4                     __ptext2:
  1622                           	callstack 0
  1623  002BC4                     _show_status_relay:
  1624                           	callstack 21
  1625  002BC4                     
  1626                           ;main.c: 215:     char key = '0';
  1627  002BC4  0E30               	movlw	48
  1628  002BC6  0100               	movlb	0	; () banked
  1629  002BC8  6F83               	movwf	show_status_relay@key& (0+255),b
  1630  002BCA                     l4941:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;main.c: 218:         if ((0 ? isdigit(key) : ((unsigned)(key)-'0') < 10) || flag_status
      +                          _relay){
  1634  002BCA  82C2               	bsf	194,1,c	;volatile
  1635  002BCC                     
  1636                           ; BSR set to: 0
  1637  002BCC  0ED0               	movlw	208
  1638  002BCE  6F79               	movwf	??_show_status_relay& (0+255),b
  1639  002BD0  0EFF               	movlw	255
  1640  002BD2  6F7A               	movwf	(??_show_status_relay+1)& (0+255),b
  1641  002BD4  5183               	movf	show_status_relay@key& (0+255),w,b
  1642  002BD6  6F7B               	movwf	(??_show_status_relay+2)& (0+255),b
  1643  002BD8  6B7C               	clrf	(??_show_status_relay+3)& (0+255),b
  1644  002BDA  5179               	movf	??_show_status_relay& (0+255),w,b
  1645  002BDC  277B               	addwf	(??_show_status_relay+2)& (0+255),f,b
  1646  002BDE  517A               	movf	(??_show_status_relay+1)& (0+255),w,b
  1647  002BE0  237C               	addwfc	(??_show_status_relay+3)& (0+255),f,b
  1648  002BE2  517C               	movf	(??_show_status_relay+3)& (0+255),w,b
  1649  002BE4  E10A               	bnz	u5500
  1650  002BE6  0E0A               	movlw	10
  1651  002BE8  5D7B               	subwf	(??_show_status_relay+2)& (0+255),w,b
  1652  002BEA  A0D8               	btfss	status,0,c
  1653  002BEC  EFFA  F015         	goto	u5501
  1654  002BF0  EFFD  F015         	goto	u5500
  1655  002BF4                     u5501:
  1656  002BF4  0E01               	movlw	1
  1657  002BF6  EFFE  F015         	goto	u5510
  1658  002BFA                     u5500:
  1659  002BFA  0E00               	movlw	0
  1660  002BFC                     u5510:
  1661  002BFC  6F7D               	movwf	_show_status_relay$776& (0+255),b
  1662  002BFE  6B7E               	clrf	(_show_status_relay$776+1)& (0+255),b
  1663  002C00                     
  1664                           ; BSR set to: 0
  1665  002C00  517D               	movf	_show_status_relay$776& (0+255),w,b
  1666  002C02  117E               	iorwf	(_show_status_relay$776+1)& (0+255),w,b
  1667  002C04  A4D8               	btfss	status,2,c
  1668  002C06  EF07  F016         	goto	u5521
  1669  002C0A  EF09  F016         	goto	u5520
  1670  002C0E                     u5521:
  1671  002C0E  EF12  F016         	goto	l4951
  1672  002C12                     u5520:
  1673  002C12                     
  1674                           ; BSR set to: 0
  1675  002C12  51FC               	movf	_flag_status_relay& (0+255),w,b
  1676  002C14  11FD               	iorwf	(_flag_status_relay+1)& (0+255),w,b
  1677  002C16  B4D8               	btfsc	status,2,c
  1678  002C18  EF10  F016         	goto	u5531
  1679  002C1C  EF12  F016         	goto	u5530
  1680  002C20                     u5531:
  1681  002C20  EFAA  F016         	goto	l4997
  1682  002C24                     u5530:
  1683  002C24                     l4951:
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;main.c: 219:             if (option_relay((key - '0')) == 0 && key != '0' && !flag_stat
      +                          us_relay){
  1687  002C24  0ED0               	movlw	208
  1688  002C26  2583               	addwf	show_status_relay@key& (0+255),w,b
  1689  002C28  6F6A               	movwf	option_relay@relay_number& (0+255),b
  1690  002C2A  6B6B               	clrf	(option_relay@relay_number+1)& (0+255),b
  1691  002C2C  0EFF               	movlw	255
  1692  002C2E  236B               	addwfc	(option_relay@relay_number+1)& (0+255),f,b
  1693  002C30  EC24  F01E         	call	_option_relay	;wreg free
  1694  002C34  0100               	movlb	0	; () banked
  1695  002C36  516A               	movf	?_option_relay& (0+255),w,b
  1696  002C38  116B               	iorwf	(?_option_relay+1)& (0+255),w,b
  1697  002C3A  A4D8               	btfss	status,2,c
  1698  002C3C  EF22  F016         	goto	u5541
  1699  002C40  EF24  F016         	goto	u5540
  1700  002C44                     u5541:
  1701  002C44  EF41  F016         	goto	l4963
  1702  002C48                     u5540:
  1703  002C48                     
  1704                           ; BSR set to: 0
  1705  002C48  0E30               	movlw	48
  1706  002C4A  1983               	xorwf	show_status_relay@key& (0+255),w,b
  1707  002C4C  B4D8               	btfsc	status,2,c
  1708  002C4E  EF2B  F016         	goto	u5551
  1709  002C52  EF2D  F016         	goto	u5550
  1710  002C56                     u5551:
  1711  002C56  EF41  F016         	goto	l4963
  1712  002C5A                     u5550:
  1713  002C5A                     
  1714                           ; BSR set to: 0
  1715  002C5A  51FC               	movf	_flag_status_relay& (0+255),w,b
  1716  002C5C  11FD               	iorwf	(_flag_status_relay+1)& (0+255),w,b
  1717  002C5E  A4D8               	btfss	status,2,c
  1718  002C60  EF34  F016         	goto	u5561
  1719  002C64  EF36  F016         	goto	u5560
  1720  002C68                     u5561:
  1721  002C68  EF41  F016         	goto	l4963
  1722  002C6C                     u5560:
  1723  002C6C                     
  1724                           ; BSR set to: 0
  1725                           ;main.c: 220:                 clean_lcd();
  1726  002C6C  ECD6  F023         	call	_clean_lcd	;wreg free
  1727  002C70                     
  1728                           ;main.c: 221:                 putsXLCD("SEM ACESSO");
  1729  002C70  0E5B               	movlw	low STR_6
  1730  002C72  0100               	movlb	0	; () banked
  1731  002C74  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1732  002C76  0E08               	movlw	high STR_6
  1733  002C78  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1734  002C7A  EC33  F01F         	call	_putsXLCD	;wreg free
  1735  002C7E                     
  1736                           ;main.c: 222:                 delay_show_lcd();
  1737  002C7E  ECE6  F023         	call	_delay_show_lcd	;wreg free
  1738  002C82                     l4963:
  1739                           
  1740                           ;main.c: 224:             update_status_relay();
  1741  002C82  ECA5  F01F         	call	_update_status_relay	;wreg free
  1742  002C86                     
  1743                           ;main.c: 225:             clean_lcd();
  1744  002C86  ECD6  F023         	call	_clean_lcd	;wreg free
  1745  002C8A                     
  1746                           ;main.c: 226:             char* rl1 = (EEPROM_read(200) == '1') ? "ON" : "OFF";
  1747  002C8A  0EC8               	movlw	200
  1748  002C8C  EC11  F024         	call	_EEPROM_read
  1749  002C90  0A31               	xorlw	49
  1750  002C92  B4D8               	btfsc	status,2,c
  1751  002C94  EF4E  F016         	goto	u5571
  1752  002C98  EF50  F016         	goto	u5570
  1753  002C9C                     u5571:
  1754  002C9C  EF57  F016         	goto	l4971
  1755  002CA0                     u5570:
  1756  002CA0  0E97               	movlw	low STR_8
  1757  002CA2  0100               	movlb	0	; () banked
  1758  002CA4  6F7F               	movwf	show_status_relay@rl1& (0+255),b
  1759  002CA6  0E08               	movlw	high STR_8
  1760  002CA8  6F80               	movwf	(show_status_relay@rl1+1)& (0+255),b
  1761  002CAA  EF5C  F016         	goto	l4973
  1762  002CAE                     l4971:
  1763  002CAE  0E9B               	movlw	low STR_7
  1764  002CB0  0100               	movlb	0	; () banked
  1765  002CB2  6F7F               	movwf	show_status_relay@rl1& (0+255),b
  1766  002CB4  0E08               	movlw	high STR_7
  1767  002CB6  6F80               	movwf	(show_status_relay@rl1+1)& (0+255),b
  1768  002CB8                     l4973:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;main.c: 227:             putsXLCD("RL1 - ");
  1772  002CB8  0E79               	movlw	low STR_9
  1773  002CBA  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1774  002CBC  0E08               	movlw	high STR_9
  1775  002CBE  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1776  002CC0  EC33  F01F         	call	_putsXLCD	;wreg free
  1777  002CC4                     
  1778                           ;main.c: 228:             putsXLCD(rl1);
  1779  002CC4  C07F  F061         	movff	show_status_relay@rl1,putsXLCD@buffer
  1780  002CC8  C080  F062         	movff	show_status_relay@rl1+1,putsXLCD@buffer+1
  1781  002CCC  EC33  F01F         	call	_putsXLCD	;wreg free
  1782  002CD0                     
  1783                           ;main.c: 229:             WriteCmdXLCD(0xC0);
  1784  002CD0  0EC0               	movlw	192
  1785  002CD2  EC7E  F022         	call	_WriteCmdXLCD
  1786  002CD6                     
  1787                           ;main.c: 230:             char* rl2 = (EEPROM_read(201) == '1') ? "ON" : "OFF";
  1788  002CD6  0EC9               	movlw	201
  1789  002CD8  EC11  F024         	call	_EEPROM_read
  1790  002CDC  0A31               	xorlw	49
  1791  002CDE  B4D8               	btfsc	status,2,c
  1792  002CE0  EF74  F016         	goto	u5581
  1793  002CE4  EF76  F016         	goto	u5580
  1794  002CE8                     u5581:
  1795  002CE8  EF7D  F016         	goto	l4983
  1796  002CEC                     u5580:
  1797  002CEC  0E97               	movlw	low STR_8
  1798  002CEE  0100               	movlb	0	; () banked
  1799  002CF0  6F81               	movwf	show_status_relay@rl2& (0+255),b
  1800  002CF2  0E08               	movlw	high STR_8
  1801  002CF4  6F82               	movwf	(show_status_relay@rl2+1)& (0+255),b
  1802  002CF6  EF82  F016         	goto	l4985
  1803  002CFA                     l4983:
  1804  002CFA  0E9B               	movlw	low STR_7
  1805  002CFC  0100               	movlb	0	; () banked
  1806  002CFE  6F81               	movwf	show_status_relay@rl2& (0+255),b
  1807  002D00  0E08               	movlw	high STR_7
  1808  002D02  6F82               	movwf	(show_status_relay@rl2+1)& (0+255),b
  1809  002D04                     l4985:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;main.c: 231:             putsXLCD("RL2 - ");
  1813  002D04  0E80               	movlw	low STR_12
  1814  002D06  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1815  002D08  0E08               	movlw	high STR_12
  1816  002D0A  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1817  002D0C  EC33  F01F         	call	_putsXLCD	;wreg free
  1818  002D10                     
  1819                           ;main.c: 232:             putsXLCD(rl2);
  1820  002D10  C081  F061         	movff	show_status_relay@rl2,putsXLCD@buffer
  1821  002D14  C082  F062         	movff	show_status_relay@rl2+1,putsXLCD@buffer+1
  1822  002D18  EC33  F01F         	call	_putsXLCD	;wreg free
  1823  002D1C                     
  1824                           ;main.c: 233:             WriteCmdXLCD(0xCC);
  1825  002D1C  0ECC               	movlw	204
  1826  002D1E  EC7E  F022         	call	_WriteCmdXLCD
  1827  002D22                     
  1828                           ;main.c: 234:             putsXLCD("(#)\x7E");
  1829  002D22  0E92               	movlw	low STR_13
  1830  002D24  0100               	movlb	0	; () banked
  1831  002D26  6F61               	movwf	putsXLCD@buffer& (0+255),b
  1832  002D28  0E08               	movlw	high STR_13
  1833  002D2A  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1834  002D2C  EC33  F01F         	call	_putsXLCD	;wreg free
  1835  002D30                     
  1836                           ;main.c: 235:             flag_status_relay = 0;
  1837  002D30  0E00               	movlw	0
  1838  002D32  0100               	movlb	0	; () banked
  1839  002D34  6FFD               	movwf	(_flag_status_relay+1)& (0+255),b
  1840  002D36  0E00               	movlw	0
  1841  002D38  6FFC               	movwf	_flag_status_relay& (0+255),b
  1842  002D3A                     
  1843                           ; BSR set to: 0
  1844                           ;main.c: 236:             _delay((unsigned long)((500)*(20000000/4000.0)));
  1845  002D3A  0E0D               	movlw	13
  1846  002D3C  0100               	movlb	0	; () banked
  1847  002D3E  6F7A               	movwf	(??_show_status_relay+1)& (0+255),b
  1848  002D40  0EAF               	movlw	175
  1849  002D42  6F79               	movwf	??_show_status_relay& (0+255),b
  1850  002D44  0EB6               	movlw	182
  1851  002D46                     u6327:
  1852  002D46  2EE8               	decfsz	wreg,f,c
  1853  002D48  D7FE               	bra	u6327
  1854  002D4A  2F79               	decfsz	??_show_status_relay& (0+255),f,b
  1855  002D4C  D7FC               	bra	u6327
  1856  002D4E  2F7A               	decfsz	(??_show_status_relay+1)& (0+255),f,b
  1857  002D50  D7FA               	bra	u6327
  1858  002D52  F000               	nop	
  1859  002D54                     l4997:
  1860                           
  1861                           ;main.c: 238:         key = read_keypad();
  1862  002D54  EC65  F012         	call	_read_keypad	;wreg free
  1863  002D58  0100               	movlb	0	; () banked
  1864  002D5A  6F83               	movwf	show_status_relay@key& (0+255),b
  1865  002D5C                     
  1866                           ; BSR set to: 0
  1867                           ;main.c: 239:     } while(key != '#');
  1868  002D5C  0E23               	movlw	35
  1869  002D5E  1983               	xorwf	show_status_relay@key& (0+255),w,b
  1870  002D60  A4D8               	btfss	status,2,c
  1871  002D62  EFB5  F016         	goto	u5591
  1872  002D66  EFB7  F016         	goto	u5590
  1873  002D6A                     u5591:
  1874  002D6A  EFE5  F015         	goto	l4941
  1875  002D6E                     u5590:
  1876  002D6E                     
  1877                           ; BSR set to: 0
  1878  002D6E  0012               	return		;funcret
  1879  002D70                     __end_of_show_status_relay:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _update_status_relay *****************
  1883 ;; Defined at:
  1884 ;;		line 312 in file "main.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1900 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1901 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1902 ;;Total ram usage:        1 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 6
  1905 ;; This function calls:
  1906 ;;		_EEPROM_read
  1907 ;;		_EEPROM_write
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;;		_show_status_relay
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text3
  1915  003F4A                     __ptext3:
  1916                           	callstack 0
  1917  003F4A                     _update_status_relay:
  1918                           	callstack 24
  1919  003F4A                     
  1920                           ;main.c: 313:     if(flag_status_relay) {
  1921  003F4A  0100               	movlb	0	; () banked
  1922  003F4C  51FC               	movf	_flag_status_relay& (0+255),w,b
  1923  003F4E  11FD               	iorwf	(_flag_status_relay+1)& (0+255),w,b
  1924  003F50  B4D8               	btfsc	status,2,c
  1925  003F52  EFAD  F01F         	goto	u4661
  1926  003F56  EFAF  F01F         	goto	u4660
  1927  003F5A                     u4661:
  1928  003F5A  EFBA  F01F         	goto	l4363
  1929  003F5E                     u4660:
  1930  003F5E                     
  1931                           ; BSR set to: 0
  1932                           ;main.c: 314:         EEPROM_write('0', 200);
  1933  003F5E  0EC8               	movlw	200
  1934  003F60  6F60               	movwf	EEPROM_write@address& (0+255),b
  1935  003F62  0E30               	movlw	48
  1936  003F64  EC8D  F023         	call	_EEPROM_write
  1937                           
  1938                           ;main.c: 315:         EEPROM_write('0', 201);
  1939  003F68  0EC9               	movlw	201
  1940  003F6A  0100               	movlb	0	; () banked
  1941  003F6C  6F60               	movwf	EEPROM_write@address& (0+255),b
  1942  003F6E  0E30               	movlw	48
  1943  003F70  EC8D  F023         	call	_EEPROM_write
  1944  003F74                     l4363:
  1945                           
  1946                           ;main.c: 317:     PORTCbits.RC6=(EEPROM_read(200) - '0');
  1947  003F74  0EC8               	movlw	200
  1948  003F76  EC11  F024         	call	_EEPROM_read
  1949  003F7A  0100               	movlb	0	; () banked
  1950  003F7C  6F62               	movwf	??_update_status_relay& (0+255),b
  1951  003F7E  0ED0               	movlw	208
  1952  003F80  2762               	addwf	??_update_status_relay& (0+255),f,b
  1953  003F82  3B62               	swapf	??_update_status_relay& (0+255),f,b
  1954  003F84  4762               	rlncf	??_update_status_relay& (0+255),f,b
  1955  003F86  4762               	rlncf	??_update_status_relay& (0+255),f,b
  1956  003F88  5082               	movf	130,w,c	;volatile
  1957  003F8A  1962               	xorwf	??_update_status_relay& (0+255),w,b
  1958  003F8C  0BBF               	andlw	-65
  1959  003F8E  1962               	xorwf	??_update_status_relay& (0+255),w,b
  1960  003F90  6E82               	movwf	130,c	;volatile
  1961  003F92                     
  1962                           ; BSR set to: 0
  1963                           ;main.c: 318:     PORTCbits.RC7=(EEPROM_read(201) - '0');
  1964  003F92  0EC9               	movlw	201
  1965  003F94  EC11  F024         	call	_EEPROM_read
  1966  003F98  0100               	movlb	0	; () banked
  1967  003F9A  6F62               	movwf	??_update_status_relay& (0+255),b
  1968  003F9C  0ED0               	movlw	208
  1969  003F9E  2762               	addwf	??_update_status_relay& (0+255),f,b
  1970  003FA0  3362               	rrcf	??_update_status_relay& (0+255),f,b
  1971  003FA2  3362               	rrcf	??_update_status_relay& (0+255),f,b
  1972  003FA4  5082               	movf	130,w,c	;volatile
  1973  003FA6  1962               	xorwf	??_update_status_relay& (0+255),w,b
  1974  003FA8  0B7F               	andlw	-129
  1975  003FAA  1962               	xorwf	??_update_status_relay& (0+255),w,b
  1976  003FAC  6E82               	movwf	130,c	;volatile
  1977  003FAE                     
  1978                           ; BSR set to: 0
  1979                           ;main.c: 319:     flag_status_relay = 0;
  1980  003FAE  0E00               	movlw	0
  1981  003FB0  6FFD               	movwf	(_flag_status_relay+1)& (0+255),b
  1982  003FB2  0E00               	movlw	0
  1983  003FB4  6FFC               	movwf	_flag_status_relay& (0+255),b
  1984  003FB6                     
  1985                           ; BSR set to: 0
  1986  003FB6  0012               	return		;funcret
  1987  003FB8                     __end_of_update_status_relay:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _option_relay *****************
  1991 ;; Defined at:
  1992 ;;		line 242 in file "main.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  relay_number    2   10[BANK0 ] int 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  2   10[BANK0 ] int 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2006 ;;      Params:         0       2       0       0       0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2008 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2009 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2010 ;;Total ram usage:        4 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 7
  2013 ;; This function calls:
  2014 ;;		_toggle_relay
  2015 ;; This function is called by:
  2016 ;;		_show_status_relay
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text4
  2021  003C48                     __ptext4:
  2022                           	callstack 0
  2023  003C48                     _option_relay:
  2024                           	callstack 21
  2025  003C48                     
  2026                           ;main.c: 244:     switch (relay_number) {
  2027  003C48  EF52  F01E         	goto	l4457
  2028  003C4C                     l4439:
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;main.c: 246:             if (access_level > 0) {
  2032  003C4C  BFFF               	btfsc	(_access_level+1)& (0+255),7,b
  2033  003C4E  EF31  F01E         	goto	u4791
  2034  003C52  51FF               	movf	(_access_level+1)& (0+255),w,b
  2035  003C54  E108               	bnz	u4790
  2036  003C56  05FE               	decf	_access_level& (0+255),w,b
  2037  003C58  A0D8               	btfss	status,0,c
  2038  003C5A  EF31  F01E         	goto	u4791
  2039  003C5E  EF33  F01E         	goto	u4790
  2040  003C62                     u4791:
  2041  003C62  EF69  F01E         	goto	l4459
  2042  003C66                     u4790:
  2043  003C66                     l4441:
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;main.c: 248:                 toggle_relay(relay_number - 1);
  2047  003C66  0EFF               	movlw	255
  2048  003C68  256A               	addwf	option_relay@relay_number& (0+255),w,b
  2049  003C6A  6F62               	movwf	toggle_relay@relay_number& (0+255),b
  2050  003C6C  0EFF               	movlw	255
  2051  003C6E  216B               	addwfc	(option_relay@relay_number+1)& (0+255),w,b
  2052  003C70  6F63               	movwf	(toggle_relay@relay_number+1)& (0+255),b
  2053  003C72  EC3F  F021         	call	_toggle_relay	;wreg free
  2054  003C76                     
  2055                           ;main.c: 249:                 return 1;
  2056  003C76  0E00               	movlw	0
  2057  003C78  0100               	movlb	0	; () banked
  2058  003C7A  6F6B               	movwf	(?_option_relay+1)& (0+255),b
  2059  003C7C  0E01               	movlw	1
  2060  003C7E  6F6A               	movwf	?_option_relay& (0+255),b
  2061  003C80  EF6D  F01E         	goto	l167
  2062  003C84                     l4447:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;main.c: 253:             if (access_level > 1) {
  2066  003C84  BFFF               	btfsc	(_access_level+1)& (0+255),7,b
  2067  003C86  EF4E  F01E         	goto	u4801
  2068  003C8A  51FF               	movf	(_access_level+1)& (0+255),w,b
  2069  003C8C  E109               	bnz	u4800
  2070  003C8E  0E02               	movlw	2
  2071  003C90  5DFE               	subwf	_access_level& (0+255),w,b
  2072  003C92  A0D8               	btfss	status,0,c
  2073  003C94  EF4E  F01E         	goto	u4801
  2074  003C98  EF50  F01E         	goto	u4800
  2075  003C9C                     u4801:
  2076  003C9C  EF69  F01E         	goto	l4459
  2077  003CA0                     u4800:
  2078  003CA0  EF33  F01E         	goto	l4441
  2079  003CA4                     l4457:
  2080  003CA4  C06A  F06C         	movff	option_relay@relay_number,??_option_relay
  2081  003CA8  C06B  F06D         	movff	option_relay@relay_number+1,??_option_relay+1
  2082                           
  2083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2084                           ; Switch size 1, requested type "simple"
  2085                           ; Number of cases is 1, Range of values is 0 to 0
  2086                           ; switch strategies available:
  2087                           ; Name         Instructions Cycles
  2088                           ; simple_byte            4     3 (average)
  2089                           ;	Chosen strategy is simple_byte
  2090  003CAC  0100               	movlb	0	; () banked
  2091  003CAE  516D               	movf	(??_option_relay+1)& (0+255),w,b
  2092  003CB0  0A00               	xorlw	0	; case 0
  2093  003CB2  B4D8               	btfsc	status,2,c
  2094  003CB4  EF5E  F01E         	goto	l5617
  2095  003CB8  EF69  F01E         	goto	l4459
  2096  003CBC                     l5617:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ; Switch size 1, requested type "simple"
  2100                           ; Number of cases is 2, Range of values is 1 to 2
  2101                           ; switch strategies available:
  2102                           ; Name         Instructions Cycles
  2103                           ; simple_byte            7     4 (average)
  2104                           ;	Chosen strategy is simple_byte
  2105  003CBC  516C               	movf	??_option_relay& (0+255),w,b
  2106  003CBE  0A01               	xorlw	1	; case 1
  2107  003CC0  B4D8               	btfsc	status,2,c
  2108  003CC2  EF26  F01E         	goto	l4439
  2109  003CC6  0A03               	xorlw	3	; case 2
  2110  003CC8  B4D8               	btfsc	status,2,c
  2111  003CCA  EF42  F01E         	goto	l4447
  2112  003CCE  EF69  F01E         	goto	l4459
  2113  003CD2                     l4459:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;main.c: 261:     return 0;
  2117  003CD2  0E00               	movlw	0
  2118  003CD4  6F6B               	movwf	(?_option_relay+1)& (0+255),b
  2119  003CD6  0E00               	movlw	0
  2120  003CD8  6F6A               	movwf	?_option_relay& (0+255),b
  2121  003CDA                     l167:
  2122                           
  2123                           ; BSR set to: 0
  2124  003CDA  0012               	return		;funcret
  2125  003CDC                     __end_of_option_relay:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _toggle_relay *****************
  2129 ;; Defined at:
  2130 ;;		line 264 in file "main.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  relay_number    2    2[BANK0 ] int 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  status          2    8[BANK0 ] int 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2144 ;;      Params:         0       2       0       0       0       0       0       0       0
  2145 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2146 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2147 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2148 ;;Total ram usage:        8 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 6
  2151 ;; This function calls:
  2152 ;;		_EEPROM_read
  2153 ;;		_EEPROM_write
  2154 ;; This function is called by:
  2155 ;;		_option_relay
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text5
  2160  00427E                     __ptext5:
  2161                           	callstack 0
  2162  00427E                     _toggle_relay:
  2163                           	callstack 21
  2164  00427E                     
  2165                           ;main.c: 265:     int status = !(EEPROM_read(200 + relay_number) - '0');
  2166  00427E  0ED0               	movlw	208
  2167  004280  0100               	movlb	0	; () banked
  2168  004282  6F64               	movwf	??_toggle_relay& (0+255),b
  2169  004284  0EFF               	movlw	255
  2170  004286  6F65               	movwf	(??_toggle_relay+1)& (0+255),b
  2171  004288  5162               	movf	toggle_relay@relay_number& (0+255),w,b
  2172  00428A  0FC8               	addlw	200
  2173  00428C  EC11  F024         	call	_EEPROM_read
  2174  004290  0100               	movlb	0	; () banked
  2175  004292  6F66               	movwf	(??_toggle_relay+2)& (0+255),b
  2176  004294  6B67               	clrf	(??_toggle_relay+3)& (0+255),b
  2177  004296  5164               	movf	??_toggle_relay& (0+255),w,b
  2178  004298  2766               	addwf	(??_toggle_relay+2)& (0+255),f,b
  2179  00429A  5165               	movf	(??_toggle_relay+1)& (0+255),w,b
  2180  00429C  2367               	addwfc	(??_toggle_relay+3)& (0+255),f,b
  2181  00429E  5166               	movf	(??_toggle_relay+2)& (0+255),w,b
  2182  0042A0  1167               	iorwf	(??_toggle_relay+3)& (0+255),w,b
  2183  0042A2  B4D8               	btfsc	status,2,c
  2184  0042A4  EF56  F021         	goto	u3941
  2185  0042A8  EF59  F021         	goto	u3940
  2186  0042AC                     u3941:
  2187  0042AC  0E01               	movlw	1
  2188  0042AE  EF5A  F021         	goto	u3950
  2189  0042B2                     u3940:
  2190  0042B2  0E00               	movlw	0
  2191  0042B4                     u3950:
  2192  0042B4  6F68               	movwf	toggle_relay@status& (0+255),b
  2193  0042B6  6B69               	clrf	(toggle_relay@status+1)& (0+255),b
  2194                           
  2195                           ;main.c: 266:     EEPROM_write((status + '0'), 200 + relay_number);
  2196  0042B8  5162               	movf	toggle_relay@relay_number& (0+255),w,b
  2197  0042BA  0FC8               	addlw	200
  2198  0042BC  6F60               	movwf	EEPROM_write@address& (0+255),b
  2199  0042BE  5168               	movf	toggle_relay@status& (0+255),w,b
  2200  0042C0  0F30               	addlw	48
  2201  0042C2  EC8D  F023         	call	_EEPROM_write
  2202  0042C6  0012               	return		;funcret
  2203  0042C8                     __end_of_toggle_relay:
  2204                           	callstack 0
  2205                           
  2206 ;; *************** function _isdigit *****************
  2207 ;; Defined at:
  2208 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  c               2    0[BANK0 ] int 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2    0[BANK0 ] int 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:         0       2       0       0       0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2225 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2226 ;;Total ram usage:        6 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 5
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_show_status_relay
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text6
  2237  0045C2                     __ptext6:
  2238                           	callstack 0
  2239  0045C2                     _isdigit:
  2240                           	callstack 23
  2241  0045C2  0ED0               	movlw	208
  2242  0045C4  0100               	movlb	0	; () banked
  2243  0045C6  6F62               	movwf	??_isdigit& (0+255),b
  2244  0045C8  0EFF               	movlw	255
  2245  0045CA  6F63               	movwf	(??_isdigit+1)& (0+255),b
  2246  0045CC  C060  F064         	movff	isdigit@c,??_isdigit+2
  2247  0045D0  C061  F065         	movff	isdigit@c+1,??_isdigit+3
  2248  0045D4  5162               	movf	??_isdigit& (0+255),w,b
  2249  0045D6  2764               	addwf	(??_isdigit+2)& (0+255),f,b
  2250  0045D8  5163               	movf	(??_isdigit+1)& (0+255),w,b
  2251  0045DA  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
  2252  0045DC  5165               	movf	(??_isdigit+3)& (0+255),w,b
  2253  0045DE  E10A               	bnz	u4770
  2254  0045E0  0E0A               	movlw	10
  2255  0045E2  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
  2256  0045E4  A0D8               	btfss	status,0,c
  2257  0045E6  EFF7  F022         	goto	u4771
  2258  0045EA  EFFA  F022         	goto	u4770
  2259  0045EE                     u4771:
  2260  0045EE  0E01               	movlw	1
  2261  0045F0  EFFB  F022         	goto	u4780
  2262  0045F4                     u4770:
  2263  0045F4  0E00               	movlw	0
  2264  0045F6                     u4780:
  2265  0045F6  6F60               	movwf	?_isdigit& (0+255),b
  2266  0045F8  6B61               	clrf	(?_isdigit+1)& (0+255),b
  2267  0045FA                     
  2268                           ; BSR set to: 0
  2269  0045FA  0012               	return		;funcret
  2270  0045FC                     __end_of_isdigit:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _show_temp *****************
  2274 ;; Defined at:
  2275 ;;		line 345 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  int_str        20  101[BANK0 ] unsigned char [20]
  2280 ;;  adc             2  121[BANK0 ] int 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0
  2291 ;;      Locals:         0      22       0       0       0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2293 ;;      Totals:         0      22       0       0       0       0       0       0       0
  2294 ;;Total ram usage:       22 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 13
  2297 ;; This function calls:
  2298 ;;		_WriteCmdXLCD
  2299 ;;		_clean_lcd
  2300 ;;		_convert_temp
  2301 ;;		_putsXLCD
  2302 ;;		_sprintf
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text7
  2309  003FB8                     __ptext7:
  2310                           	callstack 0
  2311  003FB8                     _show_temp:
  2312                           	callstack 17
  2313  003FB8                     
  2314                           ;main.c: 346:     int adc = convert_temp();
  2315  003FB8  EC1B  F023         	call	_convert_temp	;wreg free
  2316  003FBC  C0AB  F0D9         	movff	?_convert_temp,show_temp@adc
  2317  003FC0  C0AC  F0DA         	movff	?_convert_temp+1,show_temp@adc+1
  2318                           
  2319                           ;main.c: 347:     char int_str[20];;main.c: 348:     clean_lcd();
  2320  003FC4  ECD6  F023         	call	_clean_lcd	;wreg free
  2321                           
  2322                           ;main.c: 349:     WriteCmdXLCD(0x83);
  2323  003FC8  0E83               	movlw	131
  2324  003FCA  EC7E  F022         	call	_WriteCmdXLCD
  2325  003FCE                     
  2326                           ;main.c: 350:     sprintf(int_str, "TEMP: %d\xDF\x43", adc);
  2327  003FCE  0EC5               	movlw	low show_temp@int_str
  2328  003FD0  0100               	movlb	0	; () banked
  2329  003FD2  6FB7               	movwf	sprintf@s& (0+255),b
  2330  003FD4  0E00               	movlw	high show_temp@int_str
  2331  003FD6  6FB8               	movwf	(sprintf@s+1)& (0+255),b
  2332  003FD8  0E50               	movlw	low STR_20
  2333  003FDA  6FB9               	movwf	sprintf@fmt& (0+255),b
  2334  003FDC  0E08               	movlw	high STR_20
  2335  003FDE  6FBA               	movwf	(sprintf@fmt+1)& (0+255),b
  2336  003FE0  C0D9  F0BB         	movff	show_temp@adc,?_sprintf+4
  2337  003FE4  C0DA  F0BC         	movff	show_temp@adc+1,?_sprintf+5
  2338  003FE8  ECA3  F020         	call	_sprintf	;wreg free
  2339  003FEC                     
  2340                           ;main.c: 351:     putsXLCD(int_str);
  2341  003FEC  0EC5               	movlw	low show_temp@int_str
  2342  003FEE  0100               	movlb	0	; () banked
  2343  003FF0  6F61               	movwf	putsXLCD@buffer& (0+255),b
  2344  003FF2  0E00               	movlw	high show_temp@int_str
  2345  003FF4  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  2346  003FF6  EC33  F01F         	call	_putsXLCD	;wreg free
  2347  003FFA                     
  2348                           ;main.c: 352:     WriteCmdXLCD(0xC0);
  2349  003FFA  0EC0               	movlw	192
  2350  003FFC  EC7E  F022         	call	_WriteCmdXLCD
  2351  004000                     
  2352                           ;main.c: 353:     putsXLCD("\x7F(*)");
  2353  004000  0E8D               	movlw	low STR_21
  2354  004002  0100               	movlb	0	; () banked
  2355  004004  6F61               	movwf	putsXLCD@buffer& (0+255),b
  2356  004006  0E08               	movlw	high STR_21
  2357  004008  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  2358  00400A  EC33  F01F         	call	_putsXLCD	;wreg free
  2359  00400E                     
  2360                           ;main.c: 354:     WriteCmdXLCD(0xCC);
  2361  00400E  0ECC               	movlw	204
  2362  004010  EC7E  F022         	call	_WriteCmdXLCD
  2363  004014                     
  2364                           ;main.c: 355:     putsXLCD("(#)\x7E");
  2365  004014  0E92               	movlw	low STR_13
  2366  004016  0100               	movlb	0	; () banked
  2367  004018  6F61               	movwf	putsXLCD@buffer& (0+255),b
  2368  00401A  0E08               	movlw	high STR_13
  2369  00401C  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  2370  00401E  EC33  F01F         	call	_putsXLCD	;wreg free
  2371  004022  0012               	return		;funcret
  2372  004024                     __end_of_show_temp:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _sprintf *****************
  2376 ;; Defined at:
  2377 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  s               2   87[BANK0 ] PTR unsigned char 
  2380 ;;		 -> show_temp@int_str(20), 
  2381 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  2382 ;;		 -> STR_20(11), 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  f               6   95[BANK0 ] struct _IO_FILE
  2385 ;;  ap              2   93[BANK0 ] PTR void [1]
  2386 ;;		 -> ?_sprintf(2), 
  2387 ;;  ret             2    0        int 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  2   87[BANK0 ] int 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2397 ;;      Params:         0       6       0       0       0       0       0       0       0
  2398 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2400 ;;      Totals:         0      14       0       0       0       0       0       0       0
  2401 ;;Total ram usage:       14 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 12
  2404 ;; This function calls:
  2405 ;;		_vfprintf
  2406 ;; This function is called by:
  2407 ;;		_show_temp
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text8
  2412  004146                     __ptext8:
  2413                           	callstack 0
  2414  004146                     _sprintf:
  2415                           	callstack 17
  2416  004146  0EBB               	movlw	low (?_sprintf+4)
  2417  004148  0100               	movlb	0	; () banked
  2418  00414A  6FBD               	movwf	sprintf@ap& (0+255),b
  2419  00414C  0E00               	movlw	high (?_sprintf+4)
  2420  00414E  6FBE               	movwf	(sprintf@ap+1)& (0+255),b
  2421  004150  C0B7  F0BF         	movff	sprintf@s,sprintf@f
  2422  004154  C0B8  F0C0         	movff	sprintf@s+1,sprintf@f+1
  2423  004158                     
  2424                           ; BSR set to: 0
  2425  004158  0E00               	movlw	0
  2426  00415A  6FC2               	movwf	(sprintf@f+3)& (0+255),b
  2427  00415C  0E00               	movlw	0
  2428  00415E  6FC1               	movwf	(sprintf@f+2)& (0+255),b
  2429  004160                     
  2430                           ; BSR set to: 0
  2431  004160  0E00               	movlw	0
  2432  004162  6FC4               	movwf	(sprintf@f+5)& (0+255),b
  2433  004164  0E00               	movlw	0
  2434  004166  6FC3               	movwf	(sprintf@f+4)& (0+255),b
  2435  004168                     
  2436                           ; BSR set to: 0
  2437  004168  0EBF               	movlw	low sprintf@f
  2438  00416A  6FAF               	movwf	vfprintf@fp& (0+255),b
  2439  00416C  0E00               	movlw	high sprintf@f
  2440  00416E  6FB0               	movwf	(vfprintf@fp+1)& (0+255),b
  2441  004170  C0B9  F0B1         	movff	sprintf@fmt,vfprintf@fmt
  2442  004174  C0BA  F0B2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2443  004178  0EBD               	movlw	low sprintf@ap
  2444  00417A  6FB3               	movwf	vfprintf@ap& (0+255),b
  2445  00417C  0E00               	movlw	high sprintf@ap
  2446  00417E  6FB4               	movwf	(vfprintf@ap+1)& (0+255),b
  2447  004180  EC12  F020         	call	_vfprintf	;wreg free
  2448  004184  0100               	movlb	0	; () banked
  2449  004186  51C1               	movf	(sprintf@f+2)& (0+255),w,b
  2450  004188  25B7               	addwf	sprintf@s& (0+255),w,b
  2451  00418A  6ED9               	movwf	fsr2l,c
  2452  00418C  51C2               	movf	(sprintf@f+3)& (0+255),w,b
  2453  00418E  21B8               	addwfc	(sprintf@s+1)& (0+255),w,b
  2454  004190  6EDA               	movwf	fsr2h,c
  2455  004192  0E00               	movlw	0
  2456  004194  6EDF               	movwf	indf2,c
  2457  004196                     
  2458                           ; BSR set to: 0
  2459  004196  0012               	return		;funcret
  2460  004198                     __end_of_sprintf:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _vfprintf *****************
  2464 ;; Defined at:
  2465 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  2468 ;;		 -> sprintf@f(6), 
  2469 ;;  fmt             2   81[BANK0 ] PTR const unsigned char 
  2470 ;;		 -> STR_20(11), 
  2471 ;;  ap              2   83[BANK0 ] PTR PTR void 
  2472 ;;		 -> sprintf@ap(2), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  cfmt            2   85[BANK0 ] PTR unsigned char 
  2475 ;;		 -> STR_20(11), 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  2   79[BANK0 ] int 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2485 ;;      Params:         0       6       0       0       0       0       0       0       0
  2486 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2488 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2489 ;;Total ram usage:        8 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 11
  2492 ;; This function calls:
  2493 ;;		_vfpfcnvrt
  2494 ;; This function is called by:
  2495 ;;		_sprintf
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text9
  2500  004024                     __ptext9:
  2501                           	callstack 0
  2502  004024                     _vfprintf:
  2503                           	callstack 17
  2504  004024                     
  2505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2506  004024  C0B1  F0B5         	movff	vfprintf@fmt,vfprintf@cfmt
  2507  004028  C0B2  F0B6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2508  00402C                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2510  00402C  0E00               	movlw	0
  2511  00402E  0100               	movlb	0	; () banked
  2512  004030  6FF5               	movwf	(_nout+1)& (0+255),b
  2513  004032  0E00               	movlw	0
  2514  004034  6FF4               	movwf	_nout& (0+255),b
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2517  004036  EF30  F020         	goto	l4721
  2518  00403A                     l4719:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2522  00403A  C0AF  F09F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2523  00403E  C0B0  F0A0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2524  004042  0EB5               	movlw	low vfprintf@cfmt
  2525  004044  6FA1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2526  004046  0E00               	movlw	high vfprintf@cfmt
  2527  004048  6FA2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2528  00404A  C0B3  F0A3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2529  00404E  C0B4  F0A4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2530  004052  EC50  F013         	call	_vfpfcnvrt	;wreg free
  2531  004056  0100               	movlb	0	; () banked
  2532  004058  519F               	movf	?_vfpfcnvrt& (0+255),w,b
  2533  00405A  27F4               	addwf	_nout& (0+255),f,b
  2534  00405C  51A0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2535  00405E  23F5               	addwfc	(_nout+1)& (0+255),f,b
  2536  004060                     l4721:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2540  004060  C0B5  FFF6         	movff	vfprintf@cfmt,tblptrl
  2541  004064  C0B6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2542  004068                     	if	0	;tblptru may be non-zero
  2543  004068                     	endif
  2544  004068                     	if	0	;tblptru may be non-zero
  2545  004068                     	endif
  2546  004068  0008               	tblrd		*
  2547  00406A  50F5               	movf	tablat,w,c
  2548  00406C  0900               	iorlw	0
  2549  00406E  A4D8               	btfss	status,2,c
  2550  004070  EF3C  F020         	goto	u5181
  2551  004074  EF3E  F020         	goto	u5180
  2552  004078                     u5181:
  2553  004078  EF1D  F020         	goto	l4719
  2554  00407C                     u5180:
  2555  00407C                     
  2556                           ; BSR set to: 0
  2557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2558  00407C  C0F4  F0AF         	movff	_nout,?_vfprintf
  2559  004080  C0F5  F0B0         	movff	_nout+1,?_vfprintf+1
  2560  004084                     
  2561                           ; BSR set to: 0
  2562  004084  0012               	return		;funcret
  2563  004086                     __end_of_vfprintf:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _vfpfcnvrt *****************
  2567 ;; Defined at:
  2568 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  2571 ;;		 -> sprintf@f(6), 
  2572 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  2573 ;;		 -> vfprintf@cfmt(2), 
  2574 ;;  ap              2   67[BANK0 ] PTR PTR void 
  2575 ;;		 -> sprintf@ap(2), 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  ll              8   71[BANK0 ] long long 
  2578 ;;  llu             8    0        unsigned long long 
  2579 ;;  f               4    0        unsigned long long 
  2580 ;;  vp              3    0        PTR void 
  2581 ;;  ct              3    0        unsigned char [3]
  2582 ;;  cp              3    0        PTR unsigned char 
  2583 ;;  i               2    0        int 
  2584 ;;  done            2    0        int 
  2585 ;;  c               1    0        unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2   63[BANK0 ] int 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2595 ;;      Params:         0       6       0       0       0       0       0       0       0
  2596 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2597 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2598 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2599 ;;Total ram usage:       16 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 10
  2602 ;; This function calls:
  2603 ;;		_dtoa
  2604 ;;		_fputc
  2605 ;; This function is called by:
  2606 ;;		_vfprintf
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text10
  2611  0026A0                     __ptext10:
  2612                           	callstack 0
  2613  0026A0                     _vfpfcnvrt:
  2614                           	callstack 17
  2615  0026A0                     
  2616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2617  0026A0  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2618  0026A4  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2619  0026A8  CFDE FFF6          	movff	postinc2,tblptrl
  2620  0026AC  CFDD FFF7          	movff	postdec2,tblptrh
  2621  0026B0                     	if	0	;tblptru may be non-zero
  2622  0026B0                     	endif
  2623  0026B0                     	if	0	;tblptru may be non-zero
  2624  0026B0                     	endif
  2625  0026B0  0008               	tblrd		*
  2626  0026B2  50F5               	movf	tablat,w,c
  2627  0026B4  0A25               	xorlw	37
  2628  0026B6  A4D8               	btfss	status,2,c
  2629  0026B8  EF60  F013         	goto	u4231
  2630  0026BC  EF62  F013         	goto	u4230
  2631  0026C0                     u4231:
  2632  0026C0  EF0F  F014         	goto	l4149
  2633  0026C4                     u4230:
  2634  0026C4                     
  2635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2636  0026C4  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2637  0026C8  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2638  0026CC  2ADE               	incf	postinc2,f,c
  2639  0026CE  0E00               	movlw	0
  2640  0026D0  22DD               	addwfc	postdec2,f,c
  2641  0026D2                     
  2642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2643  0026D2  0E00               	movlw	0
  2644  0026D4  0100               	movlb	0	; () banked
  2645  0026D6  6FF7               	movwf	(_width+1)& (0+255),b
  2646  0026D8  0E00               	movlw	0
  2647  0026DA  6FF6               	movwf	_width& (0+255),b
  2648  0026DC  C0F6  F0FA         	movff	_width,_flags
  2649  0026E0  C0F7  F0FB         	movff	_width+1,_flags+1
  2650  0026E4                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2653  0026E4  69F8               	setf	_prec& (0+255),b
  2654  0026E6  69F9               	setf	(_prec+1)& (0+255),b
  2655  0026E8                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2658  0026E8  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2659  0026EC  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2660  0026F0  CFDE FFF6          	movff	postinc2,tblptrl
  2661  0026F4  CFDD FFF7          	movff	postdec2,tblptrh
  2662  0026F8                     	if	0	;tblptru may be non-zero
  2663  0026F8                     	endif
  2664  0026F8                     	if	0	;tblptru may be non-zero
  2665  0026F8                     	endif
  2666  0026F8  0008               	tblrd		*
  2667  0026FA  50F5               	movf	tablat,w,c
  2668  0026FC  0A64               	xorlw	100
  2669  0026FE  B4D8               	btfsc	status,2,c
  2670  002700  EF84  F013         	goto	u4241
  2671  002704  EF86  F013         	goto	u4240
  2672  002708                     u4241:
  2673  002708  EF98  F013         	goto	l4127
  2674  00270C                     u4240:
  2675  00270C                     
  2676                           ; BSR set to: 0
  2677  00270C  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2678  002710  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2679  002714  CFDE FFF6          	movff	postinc2,tblptrl
  2680  002718  CFDD FFF7          	movff	postdec2,tblptrh
  2681  00271C                     	if	0	;tblptru may be non-zero
  2682  00271C                     	endif
  2683  00271C                     	if	0	;tblptru may be non-zero
  2684  00271C                     	endif
  2685  00271C  0008               	tblrd		*
  2686  00271E  50F5               	movf	tablat,w,c
  2687  002720  0A69               	xorlw	105
  2688  002722  A4D8               	btfss	status,2,c
  2689  002724  EF96  F013         	goto	u4251
  2690  002728  EF98  F013         	goto	u4250
  2691  00272C                     u4251:
  2692  00272C  EFD8  F013         	goto	l4133
  2693  002730                     u4250:
  2694  002730                     l4127:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2698  002730  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2699  002734  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2700  002738  2ADE               	incf	postinc2,f,c
  2701  00273A  0E00               	movlw	0
  2702  00273C  22DD               	addwfc	postdec2,f,c
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2705  00273E  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2706  002742  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2707  002746  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  2708  00274A  0E02               	movlw	2
  2709  00274C  26DE               	addwf	postinc2,f,c
  2710  00274E  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  2711  002752  0E00               	movlw	0
  2712  002754  22DD               	addwfc	postdec2,f,c
  2713  002756  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2714  00275A  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2715  00275E  CFDE F0A7          	movff	postinc2,vfpfcnvrt@ll
  2716  002762  CFDD F0A8          	movff	postdec2,vfpfcnvrt@ll+1
  2717  002766  0E00               	movlw	0
  2718  002768  BFA8               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2719  00276A  0EFF               	movlw	-1
  2720  00276C  6FA9               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2721  00276E  6FAA               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2722  002770  6FAB               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2723  002772  6FAC               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2724  002774  6FAD               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2725  002776  6FAE               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2726  002778                     
  2727                           ; BSR set to: 0
  2728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2729  002778  C09F  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  2730  00277C  C0A0  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2731  002780  C0A7  F07D         	movff	vfpfcnvrt@ll,dtoa@d
  2732  002784  C0A8  F07E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2733  002788  C0A9  F07F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2734  00278C  C0AA  F080         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2735  002790  C0AB  F081         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2736  002794  C0AC  F082         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2737  002798  C0AD  F083         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2738  00279C  C0AE  F084         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2739  0027A0  ECF3  F010         	call	_dtoa	;wreg free
  2740  0027A4  C07B  F09F         	movff	?_dtoa,?_vfpfcnvrt
  2741  0027A8  C07C  F0A0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2742  0027AC  EF2B  F014         	goto	l1143
  2743  0027B0                     l4133:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2747  0027B0  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2748  0027B4  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2749  0027B8  CFDE FFF6          	movff	postinc2,tblptrl
  2750  0027BC  CFDD FFF7          	movff	postdec2,tblptrh
  2751  0027C0                     	if	0	;tblptru may be non-zero
  2752  0027C0                     	endif
  2753  0027C0                     	if	0	;tblptru may be non-zero
  2754  0027C0                     	endif
  2755  0027C0  0008               	tblrd		*
  2756  0027C2  50F5               	movf	tablat,w,c
  2757  0027C4  0A25               	xorlw	37
  2758  0027C6  A4D8               	btfss	status,2,c
  2759  0027C8  EFE8  F013         	goto	u4261
  2760  0027CC  EFEA  F013         	goto	u4260
  2761  0027D0                     u4261:
  2762  0027D0  EF02  F014         	goto	l4143
  2763  0027D4                     u4260:
  2764  0027D4                     
  2765                           ; BSR set to: 0
  2766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2767  0027D4  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2768  0027D8  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2769  0027DC  2ADE               	incf	postinc2,f,c
  2770  0027DE  0E00               	movlw	0
  2771  0027E0  22DD               	addwfc	postdec2,f,c
  2772  0027E2                     
  2773                           ; BSR set to: 0
  2774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2775  0027E2  0E00               	movlw	0
  2776  0027E4  6F61               	movwf	(fputc@c+1)& (0+255),b
  2777  0027E6  0E25               	movlw	37
  2778  0027E8  6F60               	movwf	fputc@c& (0+255),b
  2779  0027EA  C09F  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2780  0027EE  C0A0  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2781  0027F2  EC34  F01C         	call	_fputc	;wreg free
  2782  0027F6                     l4139:
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2785  0027F6  0E00               	movlw	0
  2786  0027F8  0100               	movlb	0	; () banked
  2787  0027FA  6FA0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2788  0027FC  0E01               	movlw	1
  2789  0027FE  6F9F               	movwf	?_vfpfcnvrt& (0+255),b
  2790  002800  EF2B  F014         	goto	l1143
  2791  002804                     l4143:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2795  002804  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2796  002808  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2797  00280C  2ADE               	incf	postinc2,f,c
  2798  00280E  0E00               	movlw	0
  2799  002810  22DD               	addwfc	postdec2,f,c
  2800  002812                     
  2801                           ; BSR set to: 0
  2802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2803  002812  0E00               	movlw	0
  2804  002814  6FA0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2805  002816  0E00               	movlw	0
  2806  002818  6F9F               	movwf	?_vfpfcnvrt& (0+255),b
  2807  00281A  EF2B  F014         	goto	l1143
  2808  00281E                     l4149:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2811  00281E  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2812  002822  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2813  002826  CFDE FFF6          	movff	postinc2,tblptrl
  2814  00282A  CFDD FFF7          	movff	postdec2,tblptrh
  2815  00282E                     	if	0	;tblptru may be non-zero
  2816  00282E                     	endif
  2817  00282E                     	if	0	;tblptru may be non-zero
  2818  00282E                     	endif
  2819  00282E  0008               	tblrd		*
  2820  002830  50F5               	movf	tablat,w,c
  2821  002832  0100               	movlb	0	; () banked
  2822  002834  6F60               	movwf	fputc@c& (0+255),b
  2823  002836  6B61               	clrf	(fputc@c+1)& (0+255),b
  2824  002838  C09F  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2825  00283C  C0A0  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2826  002840  EC34  F01C         	call	_fputc	;wreg free
  2827  002844                     
  2828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2829  002844  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2830  002848  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2831  00284C  2ADE               	incf	postinc2,f,c
  2832  00284E  0E00               	movlw	0
  2833  002850  22DD               	addwfc	postdec2,f,c
  2834  002852  EFFB  F013         	goto	l4139
  2835  002856                     l1143:
  2836  002856  0012               	return		;funcret
  2837  002858                     __end_of_vfpfcnvrt:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _dtoa *****************
  2841 ;; Defined at:
  2842 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2845 ;;		 -> sprintf@f(6), 
  2846 ;;  d               8   29[BANK0 ] long long 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  n               8   53[BANK0 ] long long 
  2849 ;;  i               2   61[BANK0 ] int 
  2850 ;;  s               2   51[BANK0 ] int 
  2851 ;;  w               2   49[BANK0 ] int 
  2852 ;;  p               2   47[BANK0 ] int 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  2   27[BANK0 ] int 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2862 ;;      Params:         0      10       0       0       0       0       0       0       0
  2863 ;;      Locals:         0      18       0       0       0       0       0       0       0
  2864 ;;      Temps:          0       8       0       0       0       0       0       0       0
  2865 ;;      Totals:         0      36       0       0       0       0       0       0       0
  2866 ;;Total ram usage:       36 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 9
  2869 ;; This function calls:
  2870 ;;		___aodiv
  2871 ;;		___aomod
  2872 ;;		_abs
  2873 ;;		_pad
  2874 ;; This function is called by:
  2875 ;;		_vfpfcnvrt
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text11
  2880  0021E6                     __ptext11:
  2881                           	callstack 0
  2882  0021E6                     _dtoa:
  2883                           	callstack 17
  2884  0021E6                     
  2885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2886  0021E6  C07D  F095         	movff	dtoa@d,dtoa@n
  2887  0021EA  C07E  F096         	movff	dtoa@d+1,dtoa@n+1
  2888  0021EE  C07F  F097         	movff	dtoa@d+2,dtoa@n+2
  2889  0021F2  C080  F098         	movff	dtoa@d+3,dtoa@n+3
  2890  0021F6  C081  F099         	movff	dtoa@d+4,dtoa@n+4
  2891  0021FA  C082  F09A         	movff	dtoa@d+5,dtoa@n+5
  2892  0021FE  C083  F09B         	movff	dtoa@d+6,dtoa@n+6
  2893  002202  C084  F09C         	movff	dtoa@d+7,dtoa@n+7
  2894  002206                     
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2896  002206  0100               	movlb	0	; () banked
  2897  002208  BF9C               	btfsc	(dtoa@n+7)& (0+255),7,b
  2898  00220A  EF09  F011         	goto	u3791
  2899  00220E  EF0C  F011         	goto	u3790
  2900  002212                     u3791:
  2901  002212  0E01               	movlw	1
  2902  002214  EF0D  F011         	goto	u3800
  2903  002218                     u3790:
  2904  002218  0E00               	movlw	0
  2905  00221A                     u3800:
  2906  00221A  6F93               	movwf	dtoa@s& (0+255),b
  2907  00221C  6B94               	clrf	(dtoa@s+1)& (0+255),b
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2910  00221E  5193               	movf	dtoa@s& (0+255),w,b
  2911  002220  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  2912  002222  B4D8               	btfsc	status,2,c
  2913  002224  EF16  F011         	goto	u3811
  2914  002228  EF18  F011         	goto	u3810
  2915  00222C                     u3811:
  2916  00222C  EF28  F011         	goto	l3801
  2917  002230                     u3810:
  2918  002230                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2921  002230  1F9C               	comf	(dtoa@n+7)& (0+255),f,b
  2922  002232  1F9B               	comf	(dtoa@n+6)& (0+255),f,b
  2923  002234  1F9A               	comf	(dtoa@n+5)& (0+255),f,b
  2924  002236  1F99               	comf	(dtoa@n+4)& (0+255),f,b
  2925  002238  1F98               	comf	(dtoa@n+3)& (0+255),f,b
  2926  00223A  1F97               	comf	(dtoa@n+2)& (0+255),f,b
  2927  00223C  1F96               	comf	(dtoa@n+1)& (0+255),f,b
  2928  00223E  6D95               	negf	dtoa@n& (0+255),b
  2929  002240  0E00               	movlw	0
  2930  002242  2396               	addwfc	(dtoa@n+1)& (0+255),f,b
  2931  002244  2397               	addwfc	(dtoa@n+2)& (0+255),f,b
  2932  002246  2398               	addwfc	(dtoa@n+3)& (0+255),f,b
  2933  002248  2399               	addwfc	(dtoa@n+4)& (0+255),f,b
  2934  00224A  239A               	addwfc	(dtoa@n+5)& (0+255),f,b
  2935  00224C  239B               	addwfc	(dtoa@n+6)& (0+255),f,b
  2936  00224E  239C               	addwfc	(dtoa@n+7)& (0+255),f,b
  2937  002250                     l3801:
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2941  002250  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  2942  002252  EF2D  F011         	goto	u3821
  2943  002256  EF2F  F011         	goto	u3820
  2944  00225A                     u3821:
  2945  00225A  EF30  F011         	goto	l3805
  2946  00225E                     u3820:
  2947  00225E                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2950  00225E  93FA               	bcf	_flags& (0+255),1,b
  2951  002260                     l3805:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2955  002260  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  2956  002262  EF3D  F011         	goto	u3830
  2957  002266  51F9               	movf	(_prec+1)& (0+255),w,b
  2958  002268  E106               	bnz	u3831
  2959  00226A  05F8               	decf	_prec& (0+255),w,b
  2960  00226C  B0D8               	btfsc	status,0,c
  2961  00226E  EF3B  F011         	goto	u3831
  2962  002272  EF3D  F011         	goto	u3830
  2963  002276                     u3831:
  2964  002276  EF43  F011         	goto	l1116
  2965  00227A                     u3830:
  2966  00227A                     
  2967                           ; BSR set to: 0
  2968  00227A  0E00               	movlw	0
  2969  00227C  6F90               	movwf	(dtoa@p+1)& (0+255),b
  2970  00227E  0E01               	movlw	1
  2971  002280  6F8F               	movwf	dtoa@p& (0+255),b
  2972  002282  EF47  F011         	goto	l1118
  2973  002286                     l1116:
  2974                           
  2975                           ; BSR set to: 0
  2976  002286  C0F8  F08F         	movff	_prec,dtoa@p
  2977  00228A  C0F9  F090         	movff	_prec+1,dtoa@p+1
  2978  00228E                     l1118:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2982  00228E  C0F6  F091         	movff	_width,dtoa@w
  2983  002292  C0F7  F092         	movff	_width+1,dtoa@w+1
  2984  002296                     
  2985                           ; BSR set to: 0
  2986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2987  002296  5193               	movf	dtoa@s& (0+255),w,b
  2988  002298  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  2989  00229A  A4D8               	btfss	status,2,c
  2990  00229C  EF52  F011         	goto	u3841
  2991  0022A0  EF54  F011         	goto	u3840
  2992  0022A4                     u3841:
  2993  0022A4  EF5B  F011         	goto	l3813
  2994  0022A8                     u3840:
  2995  0022A8                     
  2996                           ; BSR set to: 0
  2997  0022A8  A5FA               	btfss	_flags& (0+255),2,b
  2998  0022AA  EF59  F011         	goto	u3851
  2999  0022AE  EF5B  F011         	goto	u3850
  3000  0022B2                     u3851:
  3001  0022B2  EF5E  F011         	goto	l3815
  3002  0022B6                     u3850:
  3003  0022B6                     l3813:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  3007  0022B6  0791               	decf	dtoa@w& (0+255),f,b
  3008  0022B8  A0D8               	btfss	status,0,c
  3009  0022BA  0792               	decf	(dtoa@w+1)& (0+255),f,b
  3010  0022BC                     l3815:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3014  0022BC  0E00               	movlw	0
  3015  0022BE  6F9E               	movwf	(dtoa@i+1)& (0+255),b
  3016  0022C0  0E1F               	movlw	31
  3017  0022C2  6F9D               	movwf	dtoa@i& (0+255),b
  3018  0022C4                     
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3021  0022C4  0E00               	movlw	0
  3022  0022C6  0101               	movlb	1	; () banked
  3023  0022C8  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3026  0022CA  EFE4  F011         	goto	l3829
  3027  0022CE                     l3819:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  3031  0022CE  079D               	decf	dtoa@i& (0+255),f,b
  3032  0022D0  A0D8               	btfss	status,0,c
  3033  0022D2  079E               	decf	(dtoa@i+1)& (0+255),f,b
  3034  0022D4                     
  3035                           ; BSR set to: 0
  3036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3037  0022D4  0E00               	movlw	low _dbuf
  3038  0022D6  259D               	addwf	dtoa@i& (0+255),w,b
  3039  0022D8  6ED9               	movwf	fsr2l,c
  3040  0022DA  0E01               	movlw	high _dbuf
  3041  0022DC  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  3042  0022DE  6EDA               	movwf	fsr2h,c
  3043  0022E0  C095  F060         	movff	dtoa@n,___aomod@dividend
  3044  0022E4  C096  F061         	movff	dtoa@n+1,___aomod@dividend+1
  3045  0022E8  C097  F062         	movff	dtoa@n+2,___aomod@dividend+2
  3046  0022EC  C098  F063         	movff	dtoa@n+3,___aomod@dividend+3
  3047  0022F0  C099  F064         	movff	dtoa@n+4,___aomod@dividend+4
  3048  0022F4  C09A  F065         	movff	dtoa@n+5,___aomod@dividend+5
  3049  0022F8  C09B  F066         	movff	dtoa@n+6,___aomod@dividend+6
  3050  0022FC  C09C  F067         	movff	dtoa@n+7,___aomod@dividend+7
  3051  002300  0E0A               	movlw	10
  3052  002302  6F68               	movwf	___aomod@divisor& (0+255),b
  3053  002304  0E00               	movlw	0
  3054  002306  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  3055  002308  0E00               	movlw	0
  3056  00230A  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  3057  00230C  0E00               	movlw	0
  3058  00230E  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  3059  002310  0E00               	movlw	0
  3060  002312  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  3061  002314  0E00               	movlw	0
  3062  002316  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  3063  002318  0E00               	movlw	0
  3064  00231A  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  3065  00231C  0E00               	movlw	0
  3066  00231E  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  3067  002320  EC7D  F017         	call	___aomod	;wreg free
  3068  002324  C060  F085         	movff	?___aomod,??_dtoa
  3069  002328  C061  F086         	movff	?___aomod+1,??_dtoa+1
  3070  00232C  C062  F087         	movff	?___aomod+2,??_dtoa+2
  3071  002330  C063  F088         	movff	?___aomod+3,??_dtoa+3
  3072  002334  C064  F089         	movff	?___aomod+4,??_dtoa+4
  3073  002338  C065  F08A         	movff	?___aomod+5,??_dtoa+5
  3074  00233C  C066  F08B         	movff	?___aomod+6,??_dtoa+6
  3075  002340  C067  F08C         	movff	?___aomod+7,??_dtoa+7
  3076  002344  C085  F072         	movff	??_dtoa,abs@a
  3077  002348  C087  F073         	movff	??_dtoa+2,abs@a+1
  3078  00234C  ECA0  F022         	call	_abs	;wreg free
  3079  002350  0100               	movlb	0	; () banked
  3080  002352  5172               	movf	?_abs& (0+255),w,b
  3081  002354  0F30               	addlw	48
  3082  002356  6EDF               	movwf	indf2,c
  3083  002358                     
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3086  002358  078F               	decf	dtoa@p& (0+255),f,b
  3087  00235A  A0D8               	btfss	status,0,c
  3088  00235C  0790               	decf	(dtoa@p+1)& (0+255),f,b
  3089  00235E                     
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3092  00235E  0791               	decf	dtoa@w& (0+255),f,b
  3093  002360  A0D8               	btfss	status,0,c
  3094  002362  0792               	decf	(dtoa@w+1)& (0+255),f,b
  3095  002364                     
  3096                           ; BSR set to: 0
  3097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3098  002364  C095  F060         	movff	dtoa@n,___aodiv@dividend
  3099  002368  C096  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  3100  00236C  C097  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  3101  002370  C098  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  3102  002374  C099  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  3103  002378  C09A  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  3104  00237C  C09B  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  3105  002380  C09C  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  3106  002384  0E0A               	movlw	10
  3107  002386  6F68               	movwf	___aodiv@divisor& (0+255),b
  3108  002388  0E00               	movlw	0
  3109  00238A  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  3110  00238C  0E00               	movlw	0
  3111  00238E  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3112  002390  0E00               	movlw	0
  3113  002392  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3114  002394  0E00               	movlw	0
  3115  002396  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3116  002398  0E00               	movlw	0
  3117  00239A  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3118  00239C  0E00               	movlw	0
  3119  00239E  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3120  0023A0  0E00               	movlw	0
  3121  0023A2  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3122  0023A4  ECB8  F016         	call	___aodiv	;wreg free
  3123  0023A8  C060  F095         	movff	?___aodiv,dtoa@n
  3124  0023AC  C061  F096         	movff	?___aodiv+1,dtoa@n+1
  3125  0023B0  C062  F097         	movff	?___aodiv+2,dtoa@n+2
  3126  0023B4  C063  F098         	movff	?___aodiv+3,dtoa@n+3
  3127  0023B8  C064  F099         	movff	?___aodiv+4,dtoa@n+4
  3128  0023BC  C065  F09A         	movff	?___aodiv+5,dtoa@n+5
  3129  0023C0  C066  F09B         	movff	?___aodiv+6,dtoa@n+6
  3130  0023C4  C067  F09C         	movff	?___aodiv+7,dtoa@n+7
  3131  0023C8                     l3829:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3134  0023C8  0100               	movlb	0	; () banked
  3135  0023CA  BF9E               	btfsc	(dtoa@i+1)& (0+255),7,b
  3136  0023CC  EFF0  F011         	goto	u3861
  3137  0023D0  519E               	movf	(dtoa@i+1)& (0+255),w,b
  3138  0023D2  E108               	bnz	u3860
  3139  0023D4  059D               	decf	dtoa@i& (0+255),w,b
  3140  0023D6  A0D8               	btfss	status,0,c
  3141  0023D8  EFF0  F011         	goto	u3861
  3142  0023DC  EFF2  F011         	goto	u3860
  3143  0023E0                     u3861:
  3144  0023E0  EF22  F012         	goto	l3839
  3145  0023E4                     u3860:
  3146  0023E4                     
  3147                           ; BSR set to: 0
  3148  0023E4  5195               	movf	dtoa@n& (0+255),w,b
  3149  0023E6  1196               	iorwf	(dtoa@n+1)& (0+255),w,b
  3150  0023E8  1197               	iorwf	(dtoa@n+2)& (0+255),w,b
  3151  0023EA  1198               	iorwf	(dtoa@n+3)& (0+255),w,b
  3152  0023EC  1199               	iorwf	(dtoa@n+4)& (0+255),w,b
  3153  0023EE  119A               	iorwf	(dtoa@n+5)& (0+255),w,b
  3154  0023F0  119B               	iorwf	(dtoa@n+6)& (0+255),w,b
  3155  0023F2  119C               	iorwf	(dtoa@n+7)& (0+255),w,b
  3156  0023F4  A4D8               	btfss	status,2,c
  3157  0023F6  EFFF  F011         	goto	u3871
  3158  0023FA  EF01  F012         	goto	u3870
  3159  0023FE                     u3871:
  3160  0023FE  EF67  F011         	goto	l3819
  3161  002402                     u3870:
  3162  002402                     
  3163                           ; BSR set to: 0
  3164  002402  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  3165  002404  EF0E  F012         	goto	u3880
  3166  002408  5190               	movf	(dtoa@p+1)& (0+255),w,b
  3167  00240A  E106               	bnz	u3881
  3168  00240C  058F               	decf	dtoa@p& (0+255),w,b
  3169  00240E  B0D8               	btfsc	status,0,c
  3170  002410  EF0C  F012         	goto	u3881
  3171  002414  EF0E  F012         	goto	u3880
  3172  002418                     u3881:
  3173  002418  EF67  F011         	goto	l3819
  3174  00241C                     u3880:
  3175  00241C                     
  3176                           ; BSR set to: 0
  3177  00241C  BF92               	btfsc	(dtoa@w+1)& (0+255),7,b
  3178  00241E  EF19  F012         	goto	u3891
  3179  002422  5192               	movf	(dtoa@w+1)& (0+255),w,b
  3180  002424  E108               	bnz	u3890
  3181  002426  0591               	decf	dtoa@w& (0+255),w,b
  3182  002428  A0D8               	btfss	status,0,c
  3183  00242A  EF19  F012         	goto	u3891
  3184  00242E  EF1B  F012         	goto	u3890
  3185  002432                     u3891:
  3186  002432  EF22  F012         	goto	l3839
  3187  002436                     u3890:
  3188  002436                     
  3189                           ; BSR set to: 0
  3190  002436  B3FA               	btfsc	_flags& (0+255),1,b
  3191  002438  EF20  F012         	goto	u3901
  3192  00243C  EF22  F012         	goto	u3900
  3193  002440                     u3901:
  3194  002440  EF67  F011         	goto	l3819
  3195  002444                     u3900:
  3196  002444                     l3839:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3200  002444  5193               	movf	dtoa@s& (0+255),w,b
  3201  002446  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  3202  002448  A4D8               	btfss	status,2,c
  3203  00244A  EF29  F012         	goto	u3911
  3204  00244E  EF2B  F012         	goto	u3910
  3205  002452                     u3911:
  3206  002452  EF32  F012         	goto	l3843
  3207  002456                     u3910:
  3208  002456                     
  3209                           ; BSR set to: 0
  3210  002456  A5FA               	btfss	_flags& (0+255),2,b
  3211  002458  EF30  F012         	goto	u3921
  3212  00245C  EF32  F012         	goto	u3920
  3213  002460                     u3921:
  3214  002460  EF50  F012         	goto	l3853
  3215  002464                     u3920:
  3216  002464                     l3843:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  3220  002464  079D               	decf	dtoa@i& (0+255),f,b
  3221  002466  A0D8               	btfss	status,0,c
  3222  002468  079E               	decf	(dtoa@i+1)& (0+255),f,b
  3223  00246A                     
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3226  00246A  5193               	movf	dtoa@s& (0+255),w,b
  3227  00246C  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  3228  00246E  A4D8               	btfss	status,2,c
  3229  002470  EF3C  F012         	goto	u3931
  3230  002474  EF3E  F012         	goto	u3930
  3231  002478                     u3931:
  3232  002478  EF44  F012         	goto	l3849
  3233  00247C                     u3930:
  3234  00247C                     
  3235                           ; BSR set to: 0
  3236  00247C  0E00               	movlw	0
  3237  00247E  6F8E               	movwf	(_dtoa$1559+1)& (0+255),b
  3238  002480  0E2B               	movlw	43
  3239  002482  6F8D               	movwf	_dtoa$1559& (0+255),b
  3240  002484  EF48  F012         	goto	l3851
  3241  002488                     l3849:
  3242                           
  3243                           ; BSR set to: 0
  3244  002488  0E00               	movlw	0
  3245  00248A  6F8E               	movwf	(_dtoa$1559+1)& (0+255),b
  3246  00248C  0E2D               	movlw	45
  3247  00248E  6F8D               	movwf	_dtoa$1559& (0+255),b
  3248  002490                     l3851:
  3249                           
  3250                           ; BSR set to: 0
  3251  002490  0E00               	movlw	low _dbuf
  3252  002492  259D               	addwf	dtoa@i& (0+255),w,b
  3253  002494  6ED9               	movwf	fsr2l,c
  3254  002496  0E01               	movlw	high _dbuf
  3255  002498  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  3256  00249A  6EDA               	movwf	fsr2h,c
  3257  00249C  C08D  FFDF         	movff	_dtoa$1559,indf2
  3258  0024A0                     l3853:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3262  0024A0  C07B  F070         	movff	dtoa@fp,pad@fp
  3263  0024A4  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  3264  0024A8  0E00               	movlw	low _dbuf
  3265  0024AA  259D               	addwf	dtoa@i& (0+255),w,b
  3266  0024AC  6F72               	movwf	pad@buf& (0+255),b
  3267  0024AE  0E01               	movlw	high _dbuf
  3268  0024B0  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  3269  0024B2  6F73               	movwf	(pad@buf+1)& (0+255),b
  3270  0024B4  C091  F074         	movff	dtoa@w,pad@p
  3271  0024B8  C092  F075         	movff	dtoa@w+1,pad@p+1
  3272  0024BC  EC9A  F01C         	call	_pad	;wreg free
  3273  0024C0  C070  F07B         	movff	?_pad,?_dtoa
  3274  0024C4  C071  F07C         	movff	?_pad+1,?_dtoa+1
  3275  0024C8  0012               	return		;funcret
  3276  0024CA                     __end_of_dtoa:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function _pad *****************
  3280 ;; Defined at:
  3281 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3284 ;;		 -> sprintf@f(6), 
  3285 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3286 ;;		 -> dbuf(32), 
  3287 ;;  p               2   20[BANK0 ] int 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  w               2   25[BANK0 ] int 
  3290 ;;  i               2   23[BANK0 ] int 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  2   16[BANK0 ] int 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         0       6       0       0       0       0       0       0       0
  3301 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3303 ;;      Totals:         0      11       0       0       0       0       0       0       0
  3304 ;;Total ram usage:       11 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 8
  3307 ;; This function calls:
  3308 ;;		_fputc
  3309 ;;		_fputs
  3310 ;;		_strlen
  3311 ;; This function is called by:
  3312 ;;		_dtoa
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text12
  3317  003934                     __ptext12:
  3318                           	callstack 0
  3319  003934                     _pad:
  3320                           	callstack 17
  3321  003934                     
  3322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3323  003934  0100               	movlb	0	; () banked
  3324  003936  A1FA               	btfss	_flags& (0+255),0,b
  3325  003938  EFA0  F01C         	goto	u3341
  3326  00393C  EFA2  F01C         	goto	u3340
  3327  003940                     u3341:
  3328  003940  EFAC  F01C         	goto	l3539
  3329  003944                     u3340:
  3330  003944                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3333  003944  C072  F069         	movff	pad@buf,fputs@s
  3334  003948  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3335  00394C  C070  F06B         	movff	pad@fp,fputs@fp
  3336  003950  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3337  003954  EC89  F021         	call	_fputs	;wreg free
  3338  003958                     l3539:
  3339                           
  3340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3341  003958  0100               	movlb	0	; () banked
  3342  00395A  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  3343  00395C  EFB2  F01C         	goto	u3351
  3344  003960  EFB4  F01C         	goto	u3350
  3345  003964                     u3351:
  3346  003964  EFBA  F01C         	goto	l3543
  3347  003968                     u3350:
  3348  003968                     
  3349                           ; BSR set to: 0
  3350  003968  C074  F079         	movff	pad@p,pad@w
  3351  00396C  C075  F07A         	movff	pad@p+1,pad@w+1
  3352  003970  EFBE  F01C         	goto	l1105
  3353  003974                     l3543:
  3354                           
  3355                           ; BSR set to: 0
  3356  003974  0E00               	movlw	0
  3357  003976  6F7A               	movwf	(pad@w+1)& (0+255),b
  3358  003978  0E00               	movlw	0
  3359  00397A  6F79               	movwf	pad@w& (0+255),b
  3360  00397C                     l1105:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3364  00397C  0E00               	movlw	0
  3365  00397E  6F78               	movwf	(pad@i+1)& (0+255),b
  3366  003980  0E00               	movlw	0
  3367  003982  6F77               	movwf	pad@i& (0+255),b
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3370  003984  EFD1  F01C         	goto	l3549
  3371  003988                     l3545:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3375  003988  0E00               	movlw	0
  3376  00398A  6F61               	movwf	(fputc@c+1)& (0+255),b
  3377  00398C  0E20               	movlw	32
  3378  00398E  6F60               	movwf	fputc@c& (0+255),b
  3379  003990  C070  F062         	movff	pad@fp,fputc@fp
  3380  003994  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3381  003998  EC34  F01C         	call	_fputc	;wreg free
  3382  00399C                     
  3383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3384  00399C  0100               	movlb	0	; () banked
  3385  00399E  4B77               	infsnz	pad@i& (0+255),f,b
  3386  0039A0  2B78               	incf	(pad@i+1)& (0+255),f,b
  3387  0039A2                     l3549:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3391  0039A2  5179               	movf	pad@w& (0+255),w,b
  3392  0039A4  5D77               	subwf	pad@i& (0+255),w,b
  3393  0039A6  5178               	movf	(pad@i+1)& (0+255),w,b
  3394  0039A8  0A80               	xorlw	128
  3395  0039AA  6F76               	movwf	??_pad& (0+255),b
  3396  0039AC  517A               	movf	(pad@w+1)& (0+255),w,b
  3397  0039AE  0A80               	xorlw	128
  3398  0039B0  5976               	subwfb	??_pad& (0+255),w,b
  3399  0039B2  A0D8               	btfss	status,0,c
  3400  0039B4  EFDE  F01C         	goto	u3361
  3401  0039B8  EFE0  F01C         	goto	u3360
  3402  0039BC                     u3361:
  3403  0039BC  EFC4  F01C         	goto	l3545
  3404  0039C0                     u3360:
  3405  0039C0                     
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3408  0039C0  B1FA               	btfsc	_flags& (0+255),0,b
  3409  0039C2  EFE5  F01C         	goto	u3371
  3410  0039C6  EFE7  F01C         	goto	u3370
  3411  0039CA                     u3371:
  3412  0039CA  EFF1  F01C         	goto	l3553
  3413  0039CE                     u3370:
  3414  0039CE                     
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3417  0039CE  C072  F069         	movff	pad@buf,fputs@s
  3418  0039D2  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3419  0039D6  C070  F06B         	movff	pad@fp,fputs@fp
  3420  0039DA  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3421  0039DE  EC89  F021         	call	_fputs	;wreg free
  3422  0039E2                     l3553:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3425  0039E2  C072  F060         	movff	pad@buf,strlen@s
  3426  0039E6  C073  F061         	movff	pad@buf+1,strlen@s+1
  3427  0039EA  ECFE  F022         	call	_strlen	;wreg free
  3428  0039EE  0100               	movlb	0	; () banked
  3429  0039F0  5179               	movf	pad@w& (0+255),w,b
  3430  0039F2  2560               	addwf	?_strlen& (0+255),w,b
  3431  0039F4  6F70               	movwf	?_pad& (0+255),b
  3432  0039F6  517A               	movf	(pad@w+1)& (0+255),w,b
  3433  0039F8  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  3434  0039FA  6F71               	movwf	(?_pad+1)& (0+255),b
  3435  0039FC                     
  3436                           ; BSR set to: 0
  3437  0039FC  0012               	return		;funcret
  3438  0039FE                     __end_of_pad:
  3439                           	callstack 0
  3440                           
  3441 ;; *************** function _strlen *****************
  3442 ;; Defined at:
  3443 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3446 ;;		 -> dbuf(32), 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  3449 ;;		 -> dbuf(32), 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  2    0[BANK0 ] unsigned int 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3459 ;;      Params:         0       2       0       0       0       0       0       0       0
  3460 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3462 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3463 ;;Total ram usage:        4 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 5
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_pad
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text13
  3474  0045FC                     __ptext13:
  3475                           	callstack 0
  3476  0045FC                     _strlen:
  3477                           	callstack 19
  3478  0045FC  C060  F062         	movff	strlen@s,strlen@a
  3479  004600  C061  F063         	movff	strlen@s+1,strlen@a+1
  3480  004604  EF07  F023         	goto	l3449
  3481  004608                     l3447:
  3482  004608  0100               	movlb	0	; () banked
  3483  00460A  4B60               	infsnz	strlen@s& (0+255),f,b
  3484  00460C  2B61               	incf	(strlen@s+1)& (0+255),f,b
  3485  00460E                     l3449:
  3486  00460E  C060  FFD9         	movff	strlen@s,fsr2l
  3487  004612  C061  FFDA         	movff	strlen@s+1,fsr2h
  3488  004616  50DF               	movf	indf2,w,c
  3489  004618  A4D8               	btfss	status,2,c
  3490  00461A  EF11  F023         	goto	u3201
  3491  00461E  EF13  F023         	goto	u3200
  3492  004622                     u3201:
  3493  004622  EF04  F023         	goto	l3447
  3494  004626                     u3200:
  3495  004626  0100               	movlb	0	; () banked
  3496  004628  5162               	movf	strlen@a& (0+255),w,b
  3497  00462A  5D60               	subwf	strlen@s& (0+255),w,b
  3498  00462C  6F60               	movwf	?_strlen& (0+255),b
  3499  00462E  5163               	movf	(strlen@a+1)& (0+255),w,b
  3500  004630  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  3501  004632  6F61               	movwf	(?_strlen+1)& (0+255),b
  3502  004634                     
  3503                           ; BSR set to: 0
  3504  004634  0012               	return		;funcret
  3505  004636                     __end_of_strlen:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _fputs *****************
  3509 ;; Defined at:
  3510 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3513 ;;		 -> dbuf(32), 
  3514 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3515 ;;		 -> sprintf@f(6), 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  i               2   14[BANK0 ] int 
  3518 ;;  c               1   13[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  2    9[BANK0 ] int 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3528 ;;      Params:         0       4       0       0       0       0       0       0       0
  3529 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3531 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3532 ;;Total ram usage:        7 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 7
  3535 ;; This function calls:
  3536 ;;		_fputc
  3537 ;; This function is called by:
  3538 ;;		_pad
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text14
  3543  004312                     __ptext14:
  3544                           	callstack 0
  3545  004312                     _fputs:
  3546                           	callstack 17
  3547  004312  0E00               	movlw	0
  3548  004314  0100               	movlb	0	; () banked
  3549  004316  6F6F               	movwf	(fputs@i+1)& (0+255),b
  3550  004318  0E00               	movlw	0
  3551  00431A  6F6E               	movwf	fputs@i& (0+255),b
  3552  00431C  EF9C  F021         	goto	l3443
  3553  004320                     l3439:
  3554                           
  3555                           ; BSR set to: 0
  3556  004320  C06D  F060         	movff	fputs@c,fputc@c
  3557  004324  6B61               	clrf	(fputc@c+1)& (0+255),b
  3558  004326  C06B  F062         	movff	fputs@fp,fputc@fp
  3559  00432A  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  3560  00432E  EC34  F01C         	call	_fputc	;wreg free
  3561  004332  0100               	movlb	0	; () banked
  3562  004334  4B6E               	infsnz	fputs@i& (0+255),f,b
  3563  004336  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  3564  004338                     l3443:
  3565                           
  3566                           ; BSR set to: 0
  3567  004338  516E               	movf	fputs@i& (0+255),w,b
  3568  00433A  2569               	addwf	fputs@s& (0+255),w,b
  3569  00433C  6ED9               	movwf	fsr2l,c
  3570  00433E  516F               	movf	(fputs@i+1)& (0+255),w,b
  3571  004340  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  3572  004342  6EDA               	movwf	fsr2h,c
  3573  004344  50DF               	movf	indf2,w,c
  3574  004346  6F6D               	movwf	fputs@c& (0+255),b
  3575  004348  516D               	movf	fputs@c& (0+255),w,b
  3576  00434A  A4D8               	btfss	status,2,c
  3577  00434C  EFAA  F021         	goto	u3191
  3578  004350  EFAC  F021         	goto	u3190
  3579  004354                     u3191:
  3580  004354  EF90  F021         	goto	l3439
  3581  004358                     u3190:
  3582  004358                     
  3583                           ; BSR set to: 0
  3584  004358  0012               	return		;funcret
  3585  00435A                     __end_of_fputs:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function _fputc *****************
  3589 ;; Defined at:
  3590 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  c               2    0[BANK0 ] int 
  3593 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3594 ;;		 -> sprintf@f(6), 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  2    0[BANK0 ] int 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3606 ;;      Params:         0       4       0       0       0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3608 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3609 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3610 ;;Total ram usage:        9 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 6
  3613 ;; This function calls:
  3614 ;;		_putch
  3615 ;; This function is called by:
  3616 ;;		_pad
  3617 ;;		_vfpfcnvrt
  3618 ;;		_fputs
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text15
  3623  003868                     __ptext15:
  3624                           	callstack 0
  3625  003868                     _fputc:
  3626                           	callstack 20
  3627  003868  0100               	movlb	0	; () banked
  3628  00386A  5162               	movf	fputc@fp& (0+255),w,b
  3629  00386C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3630  00386E  B4D8               	btfsc	status,2,c
  3631  003870  EF3C  F01C         	goto	u3151
  3632  003874  EF3E  F01C         	goto	u3150
  3633  003878                     u3151:
  3634  003878  EF47  F01C         	goto	l3427
  3635  00387C                     u3150:
  3636  00387C                     
  3637                           ; BSR set to: 0
  3638  00387C  5162               	movf	fputc@fp& (0+255),w,b
  3639  00387E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3640  003880  A4D8               	btfss	status,2,c
  3641  003882  EF45  F01C         	goto	u3161
  3642  003886  EF47  F01C         	goto	u3160
  3643  00388A                     u3161:
  3644  00388A  EF4C  F01C         	goto	l3429
  3645  00388E                     u3160:
  3646  00388E                     l3427:
  3647                           
  3648                           ; BSR set to: 0
  3649  00388E  5160               	movf	fputc@c& (0+255),w,b
  3650  003890  EC20  F024         	call	_putch
  3651  003894  EF99  F01C         	goto	l1169
  3652  003898                     l3429:
  3653                           
  3654                           ; BSR set to: 0
  3655  003898  EE20 F004          	lfsr	2,4
  3656  00389C  5162               	movf	fputc@fp& (0+255),w,b
  3657  00389E  26D9               	addwf	fsr2l,f,c
  3658  0038A0  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3659  0038A2  22DA               	addwfc	fsr2h,f,c
  3660  0038A4  50DE               	movf	postinc2,w,c
  3661  0038A6  10DE               	iorwf	postinc2,w,c
  3662  0038A8  B4D8               	btfsc	status,2,c
  3663  0038AA  EF59  F01C         	goto	u3171
  3664  0038AE  EF5B  F01C         	goto	u3170
  3665  0038B2                     u3171:
  3666  0038B2  EF76  F01C         	goto	l3433
  3667  0038B6                     u3170:
  3668  0038B6                     
  3669                           ; BSR set to: 0
  3670  0038B6  EE20 F004          	lfsr	2,4
  3671  0038BA  5162               	movf	fputc@fp& (0+255),w,b
  3672  0038BC  26D9               	addwf	fsr2l,f,c
  3673  0038BE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3674  0038C0  22DA               	addwfc	fsr2h,f,c
  3675  0038C2  EE10 F002          	lfsr	1,2
  3676  0038C6  5162               	movf	fputc@fp& (0+255),w,b
  3677  0038C8  26E1               	addwf	fsr1l,f,c
  3678  0038CA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3679  0038CC  22E2               	addwfc	fsr1h,f,c
  3680  0038CE  50DE               	movf	postinc2,w,c
  3681  0038D0  5CE6               	subwf	postinc1,w,c
  3682  0038D2  50E6               	movf	postinc1,w,c
  3683  0038D4  0A80               	xorlw	128
  3684  0038D6  6F68               	movwf	(??_fputc+4)& (0+255),b
  3685  0038D8  50DE               	movf	postinc2,w,c
  3686  0038DA  0A80               	xorlw	128
  3687  0038DC  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  3688  0038DE  B0D8               	btfsc	status,0,c
  3689  0038E0  EF74  F01C         	goto	u3181
  3690  0038E4  EF76  F01C         	goto	u3180
  3691  0038E8                     u3181:
  3692  0038E8  EF99  F01C         	goto	l1169
  3693  0038EC                     u3180:
  3694  0038EC                     l3433:
  3695                           
  3696                           ; BSR set to: 0
  3697  0038EC  EE20 F002          	lfsr	2,2
  3698  0038F0  5162               	movf	fputc@fp& (0+255),w,b
  3699  0038F2  26D9               	addwf	fsr2l,f,c
  3700  0038F4  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3701  0038F6  22DA               	addwfc	fsr2h,f,c
  3702  0038F8  CFDE F064          	movff	postinc2,??_fputc
  3703  0038FC  CFDD F065          	movff	postdec2,??_fputc+1
  3704  003900  C062  FFD9         	movff	fputc@fp,fsr2l
  3705  003904  C063  FFDA         	movff	fputc@fp+1,fsr2h
  3706  003908  CFDE F066          	movff	postinc2,??_fputc+2
  3707  00390C  CFDD F067          	movff	postdec2,??_fputc+3
  3708  003910  5164               	movf	??_fputc& (0+255),w,b
  3709  003912  2566               	addwf	(??_fputc+2)& (0+255),w,b
  3710  003914  6ED9               	movwf	fsr2l,c
  3711  003916  5165               	movf	(??_fputc+1)& (0+255),w,b
  3712  003918  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  3713  00391A  6EDA               	movwf	fsr2h,c
  3714  00391C  C060  FFDF         	movff	fputc@c,indf2
  3715  003920  EE20 F002          	lfsr	2,2
  3716  003924  5162               	movf	fputc@fp& (0+255),w,b
  3717  003926  26D9               	addwf	fsr2l,f,c
  3718  003928  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3719  00392A  22DA               	addwfc	fsr2h,f,c
  3720  00392C  2ADE               	incf	postinc2,f,c
  3721  00392E  0E00               	movlw	0
  3722  003930  22DD               	addwfc	postdec2,f,c
  3723  003932                     l1169:
  3724  003932  0012               	return		;funcret
  3725  003934                     __end_of_fputc:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _putch *****************
  3729 ;; Defined at:
  3730 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  c               1    wreg     unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  c               1    0[COMRAM] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 5
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_fputc
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text16
  3759  004840                     __ptext16:
  3760                           	callstack 0
  3761  004840                     _putch:
  3762                           	callstack 20
  3763  004840  0012               	return		;funcret
  3764  004842                     __end_of_putch:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _abs *****************
  3768 ;; Defined at:
  3769 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  a               2   18[BANK0 ] int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2   18[BANK0 ] int 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3783 ;;      Params:         0       2       0       0       0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3785 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3786 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3787 ;;Total ram usage:        4 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 5
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_dtoa
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text17
  3798  004540                     __ptext17:
  3799                           	callstack 0
  3800  004540                     _abs:
  3801                           	callstack 20
  3802  004540  0100               	movlb	0	; () banked
  3803  004542  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  3804  004544  EFAE  F022         	goto	u3380
  3805  004548  5173               	movf	(abs@a+1)& (0+255),w,b
  3806  00454A  E106               	bnz	u3381
  3807  00454C  0572               	decf	abs@a& (0+255),w,b
  3808  00454E  B0D8               	btfsc	status,0,c
  3809  004550  EFAC  F022         	goto	u3381
  3810  004554  EFAE  F022         	goto	u3380
  3811  004558                     u3381:
  3812  004558  EFBC  F022         	goto	l1154
  3813  00455C                     u3380:
  3814  00455C                     
  3815                           ; BSR set to: 0
  3816  00455C  C072  F074         	movff	abs@a,??_abs
  3817  004560  C073  F075         	movff	abs@a+1,??_abs+1
  3818  004564  1F74               	comf	??_abs& (0+255),f,b
  3819  004566  1F75               	comf	(??_abs+1)& (0+255),f,b
  3820  004568  4B74               	infsnz	??_abs& (0+255),f,b
  3821  00456A  2B75               	incf	(??_abs+1)& (0+255),f,b
  3822  00456C  C074  F072         	movff	??_abs,?_abs
  3823  004570  C075  F073         	movff	??_abs+1,?_abs+1
  3824  004574  EFC0  F022         	goto	l1157
  3825  004578                     l1154:
  3826                           
  3827                           ; BSR set to: 0
  3828  004578  C072  F072         	movff	abs@a,?_abs
  3829  00457C  C073  F073         	movff	abs@a+1,?_abs+1
  3830  004580                     l1157:
  3831                           
  3832                           ; BSR set to: 0
  3833  004580  0012               	return		;funcret
  3834  004582                     __end_of_abs:
  3835                           	callstack 0
  3836                           
  3837 ;; *************** function ___aomod *****************
  3838 ;; Defined at:
  3839 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  dividend        8    0[BANK0 ] long long 
  3842 ;;  divisor         8    8[BANK0 ] long long 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  sign            1   17[BANK0 ] unsigned char 
  3845 ;;  counter         1   16[BANK0 ] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  8    0[BANK0 ] long long 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3855 ;;      Params:         0      16       0       0       0       0       0       0       0
  3856 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3858 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3859 ;;Total ram usage:       18 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 5
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_dtoa
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text18
  3870  002EFA                     __ptext18:
  3871                           	callstack 0
  3872  002EFA                     ___aomod:
  3873                           	callstack 20
  3874  002EFA  0E00               	movlw	0
  3875  002EFC  0100               	movlb	0	; () banked
  3876  002EFE  6F71               	movwf	___aomod@sign& (0+255),b
  3877  002F00                     
  3878                           ; BSR set to: 0
  3879  002F00  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3880  002F02  EF87  F017         	goto	u3280
  3881  002F06  EF85  F017         	goto	u3281
  3882  002F0A                     u3281:
  3883  002F0A  EF99  F017         	goto	l3507
  3884  002F0E                     u3280:
  3885  002F0E                     
  3886                           ; BSR set to: 0
  3887  002F0E  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3888  002F10  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3889  002F12  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3890  002F14  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3891  002F16  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3892  002F18  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3893  002F1A  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3894  002F1C  6D60               	negf	___aomod@dividend& (0+255),b
  3895  002F1E  0E00               	movlw	0
  3896  002F20  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3897  002F22  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3898  002F24  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3899  002F26  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3900  002F28  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3901  002F2A  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3902  002F2C  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3903  002F2E                     
  3904                           ; BSR set to: 0
  3905  002F2E  0E01               	movlw	1
  3906  002F30  6F71               	movwf	___aomod@sign& (0+255),b
  3907  002F32                     l3507:
  3908                           
  3909                           ; BSR set to: 0
  3910  002F32  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3911  002F34  EFA0  F017         	goto	u3290
  3912  002F38  EF9E  F017         	goto	u3291
  3913  002F3C                     u3291:
  3914  002F3C  EFB0  F017         	goto	l3511
  3915  002F40                     u3290:
  3916  002F40                     
  3917                           ; BSR set to: 0
  3918  002F40  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3919  002F42  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3920  002F44  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3921  002F46  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3922  002F48  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3923  002F4A  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3924  002F4C  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  3925  002F4E  6D68               	negf	___aomod@divisor& (0+255),b
  3926  002F50  0E00               	movlw	0
  3927  002F52  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3928  002F54  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3929  002F56  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3930  002F58  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3931  002F5A  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3932  002F5C  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3933  002F5E  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3934  002F60                     l3511:
  3935                           
  3936                           ; BSR set to: 0
  3937  002F60  5168               	movf	___aomod@divisor& (0+255),w,b
  3938  002F62  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3939  002F64  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3940  002F66  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3941  002F68  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3942  002F6A  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3943  002F6C  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3944  002F6E  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3945  002F70  B4D8               	btfsc	status,2,c
  3946  002F72  EFBD  F017         	goto	u3301
  3947  002F76  EFBF  F017         	goto	u3300
  3948  002F7A                     u3301:
  3949  002F7A  EF07  F018         	goto	l3527
  3950  002F7E                     u3300:
  3951  002F7E                     
  3952                           ; BSR set to: 0
  3953  002F7E  0E01               	movlw	1
  3954  002F80  6F70               	movwf	___aomod@counter& (0+255),b
  3955  002F82  EFCD  F017         	goto	l3517
  3956  002F86                     l3515:
  3957                           
  3958                           ; BSR set to: 0
  3959  002F86  90D8               	bcf	status,0,c
  3960  002F88  3768               	rlcf	___aomod@divisor& (0+255),f,b
  3961  002F8A  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3962  002F8C  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3963  002F8E  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3964  002F90  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3965  002F92  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3966  002F94  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3967  002F96  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3968  002F98  2B70               	incf	___aomod@counter& (0+255),f,b
  3969  002F9A                     l3517:
  3970                           
  3971                           ; BSR set to: 0
  3972  002F9A  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3973  002F9C  EFD2  F017         	goto	u3311
  3974  002FA0  EFD4  F017         	goto	u3310
  3975  002FA4                     u3311:
  3976  002FA4  EFC3  F017         	goto	l3515
  3977  002FA8                     u3310:
  3978  002FA8                     l3519:
  3979                           
  3980                           ; BSR set to: 0
  3981  002FA8  5168               	movf	___aomod@divisor& (0+255),w,b
  3982  002FAA  5D60               	subwf	___aomod@dividend& (0+255),w,b
  3983  002FAC  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3984  002FAE  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3985  002FB0  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3986  002FB2  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3987  002FB4  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3988  002FB6  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3989  002FB8  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3990  002FBA  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3991  002FBC  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3992  002FBE  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3993  002FC0  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3994  002FC2  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3995  002FC4  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3996  002FC6  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3997  002FC8  A0D8               	btfss	status,0,c
  3998  002FCA  EFE9  F017         	goto	u3321
  3999  002FCE  EFEB  F017         	goto	u3320
  4000  002FD2                     u3321:
  4001  002FD2  EFFB  F017         	goto	l3523
  4002  002FD6                     u3320:
  4003  002FD6                     
  4004                           ; BSR set to: 0
  4005  002FD6  5168               	movf	___aomod@divisor& (0+255),w,b
  4006  002FD8  5F60               	subwf	___aomod@dividend& (0+255),f,b
  4007  002FDA  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  4008  002FDC  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4009  002FDE  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4010  002FE0  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4011  002FE2  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4012  002FE4  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4013  002FE6  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4014  002FE8  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4015  002FEA  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4016  002FEC  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4017  002FEE  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4018  002FF0  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4019  002FF2  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4020  002FF4  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4021  002FF6                     l3523:
  4022                           
  4023                           ; BSR set to: 0
  4024  002FF6  90D8               	bcf	status,0,c
  4025  002FF8  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4026  002FFA  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4027  002FFC  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4028  002FFE  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4029  003000  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4030  003002  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4031  003004  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4032  003006  3368               	rrcf	___aomod@divisor& (0+255),f,b
  4033  003008                     
  4034                           ; BSR set to: 0
  4035  003008  2F70               	decfsz	___aomod@counter& (0+255),f,b
  4036  00300A  EFD4  F017         	goto	l3519
  4037  00300E                     l3527:
  4038                           
  4039                           ; BSR set to: 0
  4040  00300E  5171               	movf	___aomod@sign& (0+255),w,b
  4041  003010  B4D8               	btfsc	status,2,c
  4042  003012  EF0D  F018         	goto	u3331
  4043  003016  EF0F  F018         	goto	u3330
  4044  00301A                     u3331:
  4045  00301A  EF1F  F018         	goto	l3531
  4046  00301E                     u3330:
  4047  00301E                     
  4048                           ; BSR set to: 0
  4049  00301E  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  4050  003020  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  4051  003022  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  4052  003024  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  4053  003026  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  4054  003028  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  4055  00302A  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  4056  00302C  6D60               	negf	___aomod@dividend& (0+255),b
  4057  00302E  0E00               	movlw	0
  4058  003030  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4059  003032  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4060  003034  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4061  003036  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4062  003038  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4063  00303A  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4064  00303C  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4065  00303E                     l3531:
  4066                           
  4067                           ; BSR set to: 0
  4068  00303E  C060  F060         	movff	___aomod@dividend,?___aomod
  4069  003042  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  4070  003046  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  4071  00304A  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  4072  00304E  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  4073  003052  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  4074  003056  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  4075  00305A  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  4076  00305E                     
  4077                           ; BSR set to: 0
  4078  00305E  0012               	return		;funcret
  4079  003060                     __end_of___aomod:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function ___aodiv *****************
  4083 ;; Defined at:
  4084 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  dividend        8    0[BANK0 ] long long 
  4087 ;;  divisor         8    8[BANK0 ] long long 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  quotient        8   18[BANK0 ] long long 
  4090 ;;  sign            1   17[BANK0 ] unsigned char 
  4091 ;;  counter         1   16[BANK0 ] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  8    0[BANK0 ] long long 
  4094 ;; Registers used:
  4095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4101 ;;      Params:         0      16       0       0       0       0       0       0       0
  4102 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4104 ;;      Totals:         0      26       0       0       0       0       0       0       0
  4105 ;;Total ram usage:       26 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; Hardware stack levels required when called: 5
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_dtoa
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text19
  4116  002D70                     __ptext19:
  4117                           	callstack 0
  4118  002D70                     ___aodiv:
  4119                           	callstack 20
  4120  002D70  0E00               	movlw	0
  4121  002D72  0100               	movlb	0	; () banked
  4122  002D74  6F71               	movwf	___aodiv@sign& (0+255),b
  4123  002D76                     
  4124                           ; BSR set to: 0
  4125  002D76  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  4126  002D78  EFC2  F016         	goto	u3210
  4127  002D7C  EFC0  F016         	goto	u3211
  4128  002D80                     u3211:
  4129  002D80  EFD4  F016         	goto	l3463
  4130  002D84                     u3210:
  4131  002D84                     
  4132                           ; BSR set to: 0
  4133  002D84  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4134  002D86  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4135  002D88  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4136  002D8A  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4137  002D8C  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4138  002D8E  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4139  002D90  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4140  002D92  6D68               	negf	___aodiv@divisor& (0+255),b
  4141  002D94  0E00               	movlw	0
  4142  002D96  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4143  002D98  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4144  002D9A  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4145  002D9C  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4146  002D9E  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4147  002DA0  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4148  002DA2  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4149  002DA4                     
  4150                           ; BSR set to: 0
  4151  002DA4  0E01               	movlw	1
  4152  002DA6  6F71               	movwf	___aodiv@sign& (0+255),b
  4153  002DA8                     l3463:
  4154                           
  4155                           ; BSR set to: 0
  4156  002DA8  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  4157  002DAA  EFDB  F016         	goto	u3220
  4158  002DAE  EFD9  F016         	goto	u3221
  4159  002DB2                     u3221:
  4160  002DB2  EFED  F016         	goto	l3469
  4161  002DB6                     u3220:
  4162  002DB6                     
  4163                           ; BSR set to: 0
  4164  002DB6  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4165  002DB8  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4166  002DBA  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4167  002DBC  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4168  002DBE  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4169  002DC0  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4170  002DC2  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4171  002DC4  6D60               	negf	___aodiv@dividend& (0+255),b
  4172  002DC6  0E00               	movlw	0
  4173  002DC8  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4174  002DCA  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4175  002DCC  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4176  002DCE  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4177  002DD0  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4178  002DD2  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4179  002DD4  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4180  002DD6                     
  4181                           ; BSR set to: 0
  4182  002DD6  0E01               	movlw	1
  4183  002DD8  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  4184  002DDA                     l3469:
  4185                           
  4186                           ; BSR set to: 0
  4187  002DDA  EE20  F072         	lfsr	2,___aodiv@quotient
  4188  002DDE  0E07               	movlw	7
  4189  002DE0                     u3231:
  4190  002DE0  6ADE               	clrf	postinc2,c
  4191  002DE2  06E8               	decf	wreg,f,c
  4192  002DE4  E2FD               	bc	u3231
  4193  002DE6                     
  4194                           ; BSR set to: 0
  4195  002DE6  5168               	movf	___aodiv@divisor& (0+255),w,b
  4196  002DE8  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4197  002DEA  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4198  002DEC  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4199  002DEE  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4200  002DF0  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4201  002DF2  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4202  002DF4  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4203  002DF6  B4D8               	btfsc	status,2,c
  4204  002DF8  EF00  F017         	goto	u3241
  4205  002DFC  EF02  F017         	goto	u3240
  4206  002E00                     u3241:
  4207  002E00  EF54  F017         	goto	l3491
  4208  002E04                     u3240:
  4209  002E04                     
  4210                           ; BSR set to: 0
  4211  002E04  0E01               	movlw	1
  4212  002E06  6F70               	movwf	___aodiv@counter& (0+255),b
  4213  002E08  EF10  F017         	goto	l3477
  4214  002E0C                     l3475:
  4215                           
  4216                           ; BSR set to: 0
  4217  002E0C  90D8               	bcf	status,0,c
  4218  002E0E  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  4219  002E10  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4220  002E12  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4221  002E14  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4222  002E16  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4223  002E18  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4224  002E1A  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4225  002E1C  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4226  002E1E  2B70               	incf	___aodiv@counter& (0+255),f,b
  4227  002E20                     l3477:
  4228                           
  4229                           ; BSR set to: 0
  4230  002E20  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4231  002E22  EF15  F017         	goto	u3251
  4232  002E26  EF17  F017         	goto	u3250
  4233  002E2A                     u3251:
  4234  002E2A  EF06  F017         	goto	l3475
  4235  002E2E                     u3250:
  4236  002E2E                     l3479:
  4237                           
  4238                           ; BSR set to: 0
  4239  002E2E  90D8               	bcf	status,0,c
  4240  002E30  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  4241  002E32  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4242  002E34  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4243  002E36  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4244  002E38  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4245  002E3A  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4246  002E3C  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4247  002E3E  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4248  002E40                     
  4249                           ; BSR set to: 0
  4250  002E40  5168               	movf	___aodiv@divisor& (0+255),w,b
  4251  002E42  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  4252  002E44  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4253  002E46  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4254  002E48  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4255  002E4A  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4256  002E4C  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4257  002E4E  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4258  002E50  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4259  002E52  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4260  002E54  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4261  002E56  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4262  002E58  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4263  002E5A  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4264  002E5C  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4265  002E5E  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4266  002E60  A0D8               	btfss	status,0,c
  4267  002E62  EF35  F017         	goto	u3261
  4268  002E66  EF37  F017         	goto	u3260
  4269  002E6A                     u3261:
  4270  002E6A  EF48  F017         	goto	l3487
  4271  002E6E                     u3260:
  4272  002E6E                     
  4273                           ; BSR set to: 0
  4274  002E6E  5168               	movf	___aodiv@divisor& (0+255),w,b
  4275  002E70  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  4276  002E72  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4277  002E74  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4278  002E76  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4279  002E78  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4280  002E7A  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4281  002E7C  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4282  002E7E  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4283  002E80  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4284  002E82  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4285  002E84  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4286  002E86  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4287  002E88  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4288  002E8A  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4289  002E8C  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4290  002E8E                     
  4291                           ; BSR set to: 0
  4292  002E8E  8172               	bsf	___aodiv@quotient& (0+255),0,b
  4293  002E90                     l3487:
  4294                           
  4295                           ; BSR set to: 0
  4296  002E90  90D8               	bcf	status,0,c
  4297  002E92  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4298  002E94  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4299  002E96  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4300  002E98  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4301  002E9A  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4302  002E9C  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4303  002E9E  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4304  002EA0  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  4305  002EA2                     
  4306                           ; BSR set to: 0
  4307  002EA2  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  4308  002EA4  EF17  F017         	goto	l3479
  4309  002EA8                     l3491:
  4310                           
  4311                           ; BSR set to: 0
  4312  002EA8  5171               	movf	___aodiv@sign& (0+255),w,b
  4313  002EAA  B4D8               	btfsc	status,2,c
  4314  002EAC  EF5A  F017         	goto	u3271
  4315  002EB0  EF5C  F017         	goto	u3270
  4316  002EB4                     u3271:
  4317  002EB4  EF6C  F017         	goto	l3495
  4318  002EB8                     u3270:
  4319  002EB8                     
  4320                           ; BSR set to: 0
  4321  002EB8  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4322  002EBA  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4323  002EBC  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4324  002EBE  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4325  002EC0  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4326  002EC2  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4327  002EC4  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4328  002EC6  6D72               	negf	___aodiv@quotient& (0+255),b
  4329  002EC8  0E00               	movlw	0
  4330  002ECA  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4331  002ECC  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4332  002ECE  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4333  002ED0  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4334  002ED2  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4335  002ED4  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4336  002ED6  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4337  002ED8                     l3495:
  4338                           
  4339                           ; BSR set to: 0
  4340  002ED8  C072  F060         	movff	___aodiv@quotient,?___aodiv
  4341  002EDC  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  4342  002EE0  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  4343  002EE4  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  4344  002EE8  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  4345  002EEC  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  4346  002EF0  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  4347  002EF4  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  4348  002EF8                     
  4349                           ; BSR set to: 0
  4350  002EF8  0012               	return		;funcret
  4351  002EFA                     __end_of___aodiv:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _convert_temp *****************
  4355 ;; Defined at:
  4356 ;;		line 358 in file "main.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  resultado       4    0        long long 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2   75[BANK0 ] int 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         0       2       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4373 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        4 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 8
  4377 ;; This function calls:
  4378 ;;		___awdiv
  4379 ;;		___flmul
  4380 ;;		___fltol
  4381 ;;		___xxtofl
  4382 ;;		_roundf
  4383 ;; This function is called by:
  4384 ;;		_show_temp
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text20
  4389  004636                     __ptext20:
  4390                           	callstack 0
  4391  004636                     _convert_temp:
  4392                           	callstack 21
  4393  004636                     
  4394                           ;main.c: 359:     ADCON0bits.GO_DONE = 1;
  4395  004636  82C2               	bsf	194,1,c	;volatile
  4396  004638                     l205:
  4397  004638  B2C2               	btfsc	194,1,c	;volatile
  4398  00463A  EF21  F023         	goto	u5441
  4399  00463E  EF23  F023         	goto	u5440
  4400  004642                     u5441:
  4401  004642  EF1C  F023         	goto	l205
  4402  004646                     u5440:
  4403  004646                     
  4404                           ;main.c: 362:         return (ADRESH * 256 + ADRESL)/10;
  4405  004646  50C4               	movf	196,w,c	;volatile
  4406  004648  0100               	movlb	0	; () banked
  4407  00464A  6FAE               	movwf	(??_convert_temp+1)& (0+255),b
  4408  00464C  6BAD               	clrf	??_convert_temp& (0+255),b
  4409  00464E  50C3               	movf	195,w,c	;volatile
  4410  004650  25AD               	addwf	??_convert_temp& (0+255),w,b
  4411  004652  6F60               	movwf	___awdiv@dividend& (0+255),b
  4412  004654  0E00               	movlw	0
  4413  004656  21AE               	addwfc	(??_convert_temp+1)& (0+255),w,b
  4414  004658  6F61               	movwf	(___awdiv@dividend+1)& (0+255),b
  4415  00465A  0E00               	movlw	0
  4416  00465C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4417  00465E  0E0A               	movlw	10
  4418  004660  6F62               	movwf	___awdiv@divisor& (0+255),b
  4419  004662  ECFF  F01C         	call	___awdiv	;wreg free
  4420  004666  C060  F0AB         	movff	?___awdiv,?_convert_temp
  4421  00466A  C061  F0AC         	movff	?___awdiv+1,?_convert_temp+1
  4422  00466E  0012               	return		;funcret
  4423  004670                     __end_of_convert_temp:
  4424                           	callstack 0
  4425                           
  4426 ;; *************** function _roundf *****************
  4427 ;; Defined at:
  4428 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\roundf.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  x               4   39[BANK0 ] float 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  y               4   61[BANK0 ] float 
  4433 ;;  u               4   57[BANK0 ] struct .
  4434 ;;  e               2   51[BANK0 ] int 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  4   39[BANK0 ] float 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4444 ;;      Params:         0       4       0       0       0       0       0       0       0
  4445 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4446 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4447 ;;      Totals:         0      26       0       0       0       0       0       0       0
  4448 ;;Total ram usage:       26 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 7
  4451 ;; This function calls:
  4452 ;;		___fladd
  4453 ;;		___flge
  4454 ;;		___flmul
  4455 ;;		___flneg
  4456 ;;		___flsub
  4457 ;; This function is called by:
  4458 ;;		_convert_temp
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text21
  4463  001A78                     __ptext21:
  4464                           	callstack 0
  4465  001A78                     _roundf:
  4466                           	callstack 21
  4467  001A78  C0F0  F099         	movff	roundf@F528,roundf@u
  4468  001A7C  C0F1  F09A         	movff	roundf@F528+1,roundf@u+1
  4469  001A80  C0F2  F09B         	movff	roundf@F528+2,roundf@u+2
  4470  001A84  C0F3  F09C         	movff	roundf@F528+3,roundf@u+3
  4471  001A88  C087  F099         	movff	roundf@x,roundf@u
  4472  001A8C  C088  F09A         	movff	roundf@x+1,roundf@u+1
  4473  001A90  C089  F09B         	movff	roundf@x+2,roundf@u+2
  4474  001A94  C08A  F09C         	movff	roundf@x+3,roundf@u+3
  4475  001A98  C099  F08B         	movff	roundf@u,??_roundf
  4476  001A9C  C09A  F08C         	movff	roundf@u+1,??_roundf+1
  4477  001AA0  C09B  F08D         	movff	roundf@u+2,??_roundf+2
  4478  001AA4  C09C  F08E         	movff	roundf@u+3,??_roundf+3
  4479  001AA8  0E18               	movlw	24
  4480  001AAA  EF5D  F00D         	goto	u4820
  4481  001AAE                     u4825:
  4482  001AAE  0100               	movlb	0	; () banked
  4483  001AB0  90D8               	bcf	status,0,c
  4484  001AB2  338E               	rrcf	(??_roundf+3)& (0+255),f,b
  4485  001AB4  338D               	rrcf	(??_roundf+2)& (0+255),f,b
  4486  001AB6  338C               	rrcf	(??_roundf+1)& (0+255),f,b
  4487  001AB8  338B               	rrcf	??_roundf& (0+255),f,b
  4488  001ABA                     u4820:
  4489  001ABA  2EE8               	decfsz	wreg,f,c
  4490  001ABC  EF57  F00D         	goto	u4825
  4491  001AC0  518B               	movf	??_roundf& (0+255),w,b
  4492  001AC2  6F93               	movwf	roundf@e& (0+255),b
  4493  001AC4  6B94               	clrf	(roundf@e+1)& (0+255),b
  4494  001AC6  BF94               	btfsc	(roundf@e+1)& (0+255),7,b
  4495  001AC8  EF6F  F00D         	goto	u4831
  4496  001ACC  5194               	movf	(roundf@e+1)& (0+255),w,b
  4497  001ACE  E109               	bnz	u4830
  4498  001AD0  0E96               	movlw	150
  4499  001AD2  5D93               	subwf	roundf@e& (0+255),w,b
  4500  001AD4  A0D8               	btfss	status,0,c
  4501  001AD6  EF6F  F00D         	goto	u4831
  4502  001ADA  EF71  F00D         	goto	u4830
  4503  001ADE                     u4831:
  4504  001ADE  EF7B  F00D         	goto	l4477
  4505  001AE2                     u4830:
  4506  001AE2                     
  4507                           ; BSR set to: 0
  4508  001AE2  C087  F087         	movff	roundf@x,?_roundf
  4509  001AE6  C088  F088         	movff	roundf@x+1,?_roundf+1
  4510  001AEA  C089  F089         	movff	roundf@x+2,?_roundf+2
  4511  001AEE  C08A  F08A         	movff	roundf@x+3,?_roundf+3
  4512  001AF2  EF1B  F00F         	goto	l1188
  4513  001AF6                     l4477:
  4514                           
  4515                           ; BSR set to: 0
  4516  001AF6  C099  F08B         	movff	roundf@u,??_roundf
  4517  001AFA  C09A  F08C         	movff	roundf@u+1,??_roundf+1
  4518  001AFE  C09B  F08D         	movff	roundf@u+2,??_roundf+2
  4519  001B02  C09C  F08E         	movff	roundf@u+3,??_roundf+3
  4520  001B06  0E20               	movlw	32
  4521  001B08  EF8B  F00D         	goto	u4840
  4522  001B0C                     u4845:
  4523  001B0C  90D8               	bcf	status,0,c
  4524  001B0E  338E               	rrcf	(??_roundf+3)& (0+255),f,b
  4525  001B10  338D               	rrcf	(??_roundf+2)& (0+255),f,b
  4526  001B12  338C               	rrcf	(??_roundf+1)& (0+255),f,b
  4527  001B14  338B               	rrcf	??_roundf& (0+255),f,b
  4528  001B16                     u4840:
  4529  001B16  2EE8               	decfsz	wreg,f,c
  4530  001B18  EF86  F00D         	goto	u4845
  4531  001B1C  518B               	movf	??_roundf& (0+255),w,b
  4532  001B1E  118C               	iorwf	(??_roundf+1)& (0+255),w,b
  4533  001B20  118D               	iorwf	(??_roundf+2)& (0+255),w,b
  4534  001B22  118E               	iorwf	(??_roundf+3)& (0+255),w,b
  4535  001B24  B4D8               	btfsc	status,2,c
  4536  001B26  EF97  F00D         	goto	u4851
  4537  001B2A  EF99  F00D         	goto	u4850
  4538  001B2E                     u4851:
  4539  001B2E  EFAB  F00D         	goto	l4481
  4540  001B32                     u4850:
  4541  001B32                     
  4542                           ; BSR set to: 0
  4543  001B32  C087  F060         	movff	roundf@x,___flneg@f1
  4544  001B36  C088  F061         	movff	roundf@x+1,___flneg@f1+1
  4545  001B3A  C089  F062         	movff	roundf@x+2,___flneg@f1+2
  4546  001B3E  C08A  F063         	movff	roundf@x+3,___flneg@f1+3
  4547  001B42  EC38  F023         	call	___flneg	;wreg free
  4548  001B46  C060  F087         	movff	?___flneg,roundf@x
  4549  001B4A  C061  F088         	movff	?___flneg+1,roundf@x+1
  4550  001B4E  C062  F089         	movff	?___flneg+2,roundf@x+2
  4551  001B52  C063  F08A         	movff	?___flneg+3,roundf@x+3
  4552  001B56                     l4481:
  4553  001B56  0100               	movlb	0	; () banked
  4554  001B58  BF94               	btfsc	(roundf@e+1)& (0+255),7,b
  4555  001B5A  EFBA  F00D         	goto	u4860
  4556  001B5E  5194               	movf	(roundf@e+1)& (0+255),w,b
  4557  001B60  E107               	bnz	u4861
  4558  001B62  0E7E               	movlw	126
  4559  001B64  5D93               	subwf	roundf@e& (0+255),w,b
  4560  001B66  B0D8               	btfsc	status,0,c
  4561  001B68  EFB8  F00D         	goto	u4861
  4562  001B6C  EFBA  F00D         	goto	u4860
  4563  001B70                     u4861:
  4564  001B70  EFD6  F00D         	goto	l4487
  4565  001B74                     u4860:
  4566  001B74                     
  4567                           ; BSR set to: 0
  4568  001B74  C099  F06E         	movff	roundf@u,___flmul@b
  4569  001B78  C09A  F06F         	movff	roundf@u+1,___flmul@b+1
  4570  001B7C  C09B  F070         	movff	roundf@u+2,___flmul@b+2
  4571  001B80  C09C  F071         	movff	roundf@u+3,___flmul@b+3
  4572  001B84  0E00               	movlw	0
  4573  001B86  6F72               	movwf	___flmul@a& (0+255),b
  4574  001B88  0E00               	movlw	0
  4575  001B8A  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4576  001B8C  0E00               	movlw	0
  4577  001B8E  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4578  001B90  0E00               	movlw	0
  4579  001B92  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4580  001B94  EC11  F009         	call	___flmul	;wreg free
  4581  001B98  C06E  F087         	movff	?___flmul,?_roundf
  4582  001B9C  C06F  F088         	movff	?___flmul+1,?_roundf+1
  4583  001BA0  C070  F089         	movff	?___flmul+2,?_roundf+2
  4584  001BA4  C071  F08A         	movff	?___flmul+3,?_roundf+3
  4585  001BA8  EF1B  F00F         	goto	l1188
  4586  001BAC                     l4487:
  4587                           
  4588                           ; BSR set to: 0
  4589  001BAC  0E00               	movlw	0
  4590  001BAE  6F64               	movwf	___fladd@a& (0+255),b
  4591  001BB0  0E00               	movlw	0
  4592  001BB2  6F65               	movwf	(___fladd@a+1)& (0+255),b
  4593  001BB4  0E00               	movlw	0
  4594  001BB6  6F66               	movwf	(___fladd@a+2)& (0+255),b
  4595  001BB8  0E4B               	movlw	75
  4596  001BBA  6F67               	movwf	(___fladd@a+3)& (0+255),b
  4597  001BBC  C087  F060         	movff	roundf@x,___fladd@b
  4598  001BC0  C088  F061         	movff	roundf@x+1,___fladd@b+1
  4599  001BC4  C089  F062         	movff	roundf@x+2,___fladd@b+2
  4600  001BC8  C08A  F063         	movff	roundf@x+3,___fladd@b+3
  4601  001BCC  EC50  F004         	call	___fladd	;wreg free
  4602  001BD0  C060  F095         	movff	?___fladd,_roundf$1848
  4603  001BD4  C061  F096         	movff	?___fladd+1,_roundf$1848+1
  4604  001BD8  C062  F097         	movff	?___fladd+2,_roundf$1848+2
  4605  001BDC  C063  F098         	movff	?___fladd+3,_roundf$1848+3
  4606  001BE0  0E00               	movlw	0
  4607  001BE2  0100               	movlb	0	; () banked
  4608  001BE4  6F64               	movwf	___fladd@a& (0+255),b
  4609  001BE6  0E00               	movlw	0
  4610  001BE8  6F65               	movwf	(___fladd@a+1)& (0+255),b
  4611  001BEA  0E00               	movlw	0
  4612  001BEC  6F66               	movwf	(___fladd@a+2)& (0+255),b
  4613  001BEE  0ECB               	movlw	203
  4614  001BF0  6F67               	movwf	(___fladd@a+3)& (0+255),b
  4615  001BF2  C095  F060         	movff	_roundf$1848,___fladd@b
  4616  001BF6  C096  F061         	movff	_roundf$1848+1,___fladd@b+1
  4617  001BFA  C097  F062         	movff	_roundf$1848+2,___fladd@b+2
  4618  001BFE  C098  F063         	movff	_roundf$1848+3,___fladd@b+3
  4619  001C02  EC50  F004         	call	___fladd	;wreg free
  4620  001C06  C060  F08F         	movff	?___fladd,_roundf$1849
  4621  001C0A  C061  F090         	movff	?___fladd+1,_roundf$1849+1
  4622  001C0E  C062  F091         	movff	?___fladd+2,_roundf$1849+2
  4623  001C12  C063  F092         	movff	?___fladd+3,_roundf$1849+3
  4624  001C16  C08F  F070         	movff	_roundf$1849,___flsub@b
  4625  001C1A  C090  F071         	movff	_roundf$1849+1,___flsub@b+1
  4626  001C1E  C091  F072         	movff	_roundf$1849+2,___flsub@b+2
  4627  001C22  C092  F073         	movff	_roundf$1849+3,___flsub@b+3
  4628  001C26  C087  F074         	movff	roundf@x,___flsub@a
  4629  001C2A  C088  F075         	movff	roundf@x+1,___flsub@a+1
  4630  001C2E  C089  F076         	movff	roundf@x+2,___flsub@a+2
  4631  001C32  C08A  F077         	movff	roundf@x+3,___flsub@a+3
  4632  001C36  ECAD  F021         	call	___flsub	;wreg free
  4633  001C3A  C070  F09D         	movff	?___flsub,roundf@y
  4634  001C3E  C071  F09E         	movff	?___flsub+1,roundf@y+1
  4635  001C42  C072  F09F         	movff	?___flsub+2,roundf@y+2
  4636  001C46  C073  F0A0         	movff	?___flsub+3,roundf@y+3
  4637  001C4A  0E00               	movlw	0
  4638  001C4C  0100               	movlb	0	; () banked
  4639  001C4E  6F60               	movwf	___flge@ff1& (0+255),b
  4640  001C50  0E00               	movlw	0
  4641  001C52  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  4642  001C54  0E00               	movlw	0
  4643  001C56  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  4644  001C58  0E3F               	movlw	63
  4645  001C5A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  4646  001C5C  C09D  F064         	movff	roundf@y,___flge@ff2
  4647  001C60  C09E  F065         	movff	roundf@y+1,___flge@ff2+1
  4648  001C64  C09F  F066         	movff	roundf@y+2,___flge@ff2+2
  4649  001C68  C0A0  F067         	movff	roundf@y+3,___flge@ff2+3
  4650  001C6C  EC4A  F019         	call	___flge	;wreg free
  4651  001C70  0100               	movlb	0	; () banked
  4652  001C72  B0D8               	btfsc	status,0,c
  4653  001C74  EF3E  F00E         	goto	u4871
  4654  001C78  EF40  F00E         	goto	u4870
  4655  001C7C                     u4871:
  4656  001C7C  EF77  F00E         	goto	l4491
  4657  001C80                     u4870:
  4658  001C80                     
  4659                           ; BSR set to: 0
  4660  001C80  C087  F064         	movff	roundf@x,___fladd@a
  4661  001C84  C088  F065         	movff	roundf@x+1,___fladd@a+1
  4662  001C88  C089  F066         	movff	roundf@x+2,___fladd@a+2
  4663  001C8C  C08A  F067         	movff	roundf@x+3,___fladd@a+3
  4664  001C90  C09D  F060         	movff	roundf@y,___fladd@b
  4665  001C94  C09E  F061         	movff	roundf@y+1,___fladd@b+1
  4666  001C98  C09F  F062         	movff	roundf@y+2,___fladd@b+2
  4667  001C9C  C0A0  F063         	movff	roundf@y+3,___fladd@b+3
  4668  001CA0  EC50  F004         	call	___fladd	;wreg free
  4669  001CA4  C060  F095         	movff	?___fladd,_roundf$1848
  4670  001CA8  C061  F096         	movff	?___fladd+1,_roundf$1848+1
  4671  001CAC  C062  F097         	movff	?___fladd+2,_roundf$1848+2
  4672  001CB0  C063  F098         	movff	?___fladd+3,_roundf$1848+3
  4673  001CB4  C095  F060         	movff	_roundf$1848,___fladd@b
  4674  001CB8  C096  F061         	movff	_roundf$1848+1,___fladd@b+1
  4675  001CBC  C097  F062         	movff	_roundf$1848+2,___fladd@b+2
  4676  001CC0  C098  F063         	movff	_roundf$1848+3,___fladd@b+3
  4677  001CC4  0E00               	movlw	0
  4678  001CC6  0100               	movlb	0	; () banked
  4679  001CC8  6F64               	movwf	___fladd@a& (0+255),b
  4680  001CCA  0E00               	movlw	0
  4681  001CCC  6F65               	movwf	(___fladd@a+1)& (0+255),b
  4682  001CCE  0E80               	movlw	128
  4683  001CD0  6F66               	movwf	(___fladd@a+2)& (0+255),b
  4684  001CD2  0EBF               	movlw	191
  4685  001CD4  6F67               	movwf	(___fladd@a+3)& (0+255),b
  4686  001CD6  EC50  F004         	call	___fladd	;wreg free
  4687  001CDA  C060  F09D         	movff	?___fladd,roundf@y
  4688  001CDE  C061  F09E         	movff	?___fladd+1,roundf@y+1
  4689  001CE2  C062  F09F         	movff	?___fladd+2,roundf@y+2
  4690  001CE6  C063  F0A0         	movff	?___fladd+3,roundf@y+3
  4691  001CEA  EFE2  F00E         	goto	l4497
  4692  001CEE                     l4491:
  4693                           
  4694                           ; BSR set to: 0
  4695  001CEE  0E00               	movlw	0
  4696  001CF0  6F60               	movwf	___flge@ff1& (0+255),b
  4697  001CF2  0E00               	movlw	0
  4698  001CF4  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  4699  001CF6  0E00               	movlw	0
  4700  001CF8  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  4701  001CFA  0EBF               	movlw	191
  4702  001CFC  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  4703  001CFE  C09D  F064         	movff	roundf@y,___flge@ff2
  4704  001D02  C09E  F065         	movff	roundf@y+1,___flge@ff2+1
  4705  001D06  C09F  F066         	movff	roundf@y+2,___flge@ff2+2
  4706  001D0A  C0A0  F067         	movff	roundf@y+3,___flge@ff2+3
  4707  001D0E  EC4A  F019         	call	___flge	;wreg free
  4708  001D12  0100               	movlb	0	; () banked
  4709  001D14  A0D8               	btfss	status,0,c
  4710  001D16  EF8F  F00E         	goto	u4881
  4711  001D1A  EF91  F00E         	goto	u4880
  4712  001D1E                     u4881:
  4713  001D1E  EFC8  F00E         	goto	l4495
  4714  001D22                     u4880:
  4715  001D22                     
  4716                           ; BSR set to: 0
  4717  001D22  C087  F064         	movff	roundf@x,___fladd@a
  4718  001D26  C088  F065         	movff	roundf@x+1,___fladd@a+1
  4719  001D2A  C089  F066         	movff	roundf@x+2,___fladd@a+2
  4720  001D2E  C08A  F067         	movff	roundf@x+3,___fladd@a+3
  4721  001D32  C09D  F060         	movff	roundf@y,___fladd@b
  4722  001D36  C09E  F061         	movff	roundf@y+1,___fladd@b+1
  4723  001D3A  C09F  F062         	movff	roundf@y+2,___fladd@b+2
  4724  001D3E  C0A0  F063         	movff	roundf@y+3,___fladd@b+3
  4725  001D42  EC50  F004         	call	___fladd	;wreg free
  4726  001D46  C060  F095         	movff	?___fladd,_roundf$1848
  4727  001D4A  C061  F096         	movff	?___fladd+1,_roundf$1848+1
  4728  001D4E  C062  F097         	movff	?___fladd+2,_roundf$1848+2
  4729  001D52  C063  F098         	movff	?___fladd+3,_roundf$1848+3
  4730  001D56  C095  F060         	movff	_roundf$1848,___fladd@b
  4731  001D5A  C096  F061         	movff	_roundf$1848+1,___fladd@b+1
  4732  001D5E  C097  F062         	movff	_roundf$1848+2,___fladd@b+2
  4733  001D62  C098  F063         	movff	_roundf$1848+3,___fladd@b+3
  4734  001D66  0E00               	movlw	0
  4735  001D68  0100               	movlb	0	; () banked
  4736  001D6A  6F64               	movwf	___fladd@a& (0+255),b
  4737  001D6C  0E00               	movlw	0
  4738  001D6E  6F65               	movwf	(___fladd@a+1)& (0+255),b
  4739  001D70  0E80               	movlw	128
  4740  001D72  6F66               	movwf	(___fladd@a+2)& (0+255),b
  4741  001D74  0E3F               	movlw	63
  4742  001D76  6F67               	movwf	(___fladd@a+3)& (0+255),b
  4743  001D78  EC50  F004         	call	___fladd	;wreg free
  4744  001D7C  C060  F09D         	movff	?___fladd,roundf@y
  4745  001D80  C061  F09E         	movff	?___fladd+1,roundf@y+1
  4746  001D84  C062  F09F         	movff	?___fladd+2,roundf@y+2
  4747  001D88  C063  F0A0         	movff	?___fladd+3,roundf@y+3
  4748  001D8C  EFE2  F00E         	goto	l4497
  4749  001D90                     l4495:
  4750                           
  4751                           ; BSR set to: 0
  4752  001D90  C09D  F060         	movff	roundf@y,___fladd@b
  4753  001D94  C09E  F061         	movff	roundf@y+1,___fladd@b+1
  4754  001D98  C09F  F062         	movff	roundf@y+2,___fladd@b+2
  4755  001D9C  C0A0  F063         	movff	roundf@y+3,___fladd@b+3
  4756  001DA0  C087  F064         	movff	roundf@x,___fladd@a
  4757  001DA4  C088  F065         	movff	roundf@x+1,___fladd@a+1
  4758  001DA8  C089  F066         	movff	roundf@x+2,___fladd@a+2
  4759  001DAC  C08A  F067         	movff	roundf@x+3,___fladd@a+3
  4760  001DB0  EC50  F004         	call	___fladd	;wreg free
  4761  001DB4  C060  F09D         	movff	?___fladd,roundf@y
  4762  001DB8  C061  F09E         	movff	?___fladd+1,roundf@y+1
  4763  001DBC  C062  F09F         	movff	?___fladd+2,roundf@y+2
  4764  001DC0  C063  F0A0         	movff	?___fladd+3,roundf@y+3
  4765  001DC4                     l4497:
  4766  001DC4  C099  F08B         	movff	roundf@u,??_roundf
  4767  001DC8  C09A  F08C         	movff	roundf@u+1,??_roundf+1
  4768  001DCC  C09B  F08D         	movff	roundf@u+2,??_roundf+2
  4769  001DD0  C09C  F08E         	movff	roundf@u+3,??_roundf+3
  4770  001DD4  0E20               	movlw	32
  4771  001DD6  EFF3  F00E         	goto	u4890
  4772  001DDA                     u4895:
  4773  001DDA  0100               	movlb	0	; () banked
  4774  001DDC  90D8               	bcf	status,0,c
  4775  001DDE  338E               	rrcf	(??_roundf+3)& (0+255),f,b
  4776  001DE0  338D               	rrcf	(??_roundf+2)& (0+255),f,b
  4777  001DE2  338C               	rrcf	(??_roundf+1)& (0+255),f,b
  4778  001DE4  338B               	rrcf	??_roundf& (0+255),f,b
  4779  001DE6                     u4890:
  4780  001DE6  2EE8               	decfsz	wreg,f,c
  4781  001DE8  EFED  F00E         	goto	u4895
  4782  001DEC  518B               	movf	??_roundf& (0+255),w,b
  4783  001DEE  118C               	iorwf	(??_roundf+1)& (0+255),w,b
  4784  001DF0  118D               	iorwf	(??_roundf+2)& (0+255),w,b
  4785  001DF2  118E               	iorwf	(??_roundf+3)& (0+255),w,b
  4786  001DF4  B4D8               	btfsc	status,2,c
  4787  001DF6  EFFF  F00E         	goto	u4901
  4788  001DFA  EF01  F00F         	goto	u4900
  4789  001DFE                     u4901:
  4790  001DFE  EF13  F00F         	goto	l4501
  4791  001E02                     u4900:
  4792  001E02                     
  4793                           ; BSR set to: 0
  4794  001E02  C09D  F060         	movff	roundf@y,___flneg@f1
  4795  001E06  C09E  F061         	movff	roundf@y+1,___flneg@f1+1
  4796  001E0A  C09F  F062         	movff	roundf@y+2,___flneg@f1+2
  4797  001E0E  C0A0  F063         	movff	roundf@y+3,___flneg@f1+3
  4798  001E12  EC38  F023         	call	___flneg	;wreg free
  4799  001E16  C060  F09D         	movff	?___flneg,roundf@y
  4800  001E1A  C061  F09E         	movff	?___flneg+1,roundf@y+1
  4801  001E1E  C062  F09F         	movff	?___flneg+2,roundf@y+2
  4802  001E22  C063  F0A0         	movff	?___flneg+3,roundf@y+3
  4803  001E26                     l4501:
  4804  001E26  C09D  F087         	movff	roundf@y,?_roundf
  4805  001E2A  C09E  F088         	movff	roundf@y+1,?_roundf+1
  4806  001E2E  C09F  F089         	movff	roundf@y+2,?_roundf+2
  4807  001E32  C0A0  F08A         	movff	roundf@y+3,?_roundf+3
  4808  001E36                     l1188:
  4809  001E36  0012               	return		;funcret
  4810  001E38                     __end_of_roundf:
  4811                           	callstack 0
  4812                           
  4813 ;; *************** function ___flsub *****************
  4814 ;; Defined at:
  4815 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  b               4   16[BANK0 ] float 
  4818 ;;  a               4   20[BANK0 ] float 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  4   16[BANK0 ] float 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4830 ;;      Params:         0       8       0       0       0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4833 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4834 ;;Total ram usage:        8 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; Hardware stack levels required when called: 6
  4837 ;; This function calls:
  4838 ;;		___fladd
  4839 ;; This function is called by:
  4840 ;;		_roundf
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text22
  4845  00435A                     __ptext22:
  4846                           	callstack 0
  4847  00435A                     ___flsub:
  4848                           	callstack 21
  4849  00435A  0E00               	movlw	0
  4850  00435C  0100               	movlb	0	; () banked
  4851  00435E  1B74               	xorwf	___flsub@a& (0+255),f,b
  4852  004360  0E00               	movlw	0
  4853  004362  1B75               	xorwf	(___flsub@a+1)& (0+255),f,b
  4854  004364  0E00               	movlw	0
  4855  004366  1B76               	xorwf	(___flsub@a+2)& (0+255),f,b
  4856  004368  0E80               	movlw	128
  4857  00436A  1B77               	xorwf	(___flsub@a+3)& (0+255),f,b
  4858  00436C                     
  4859                           ; BSR set to: 0
  4860  00436C  C070  F060         	movff	___flsub@b,___fladd@b
  4861  004370  C071  F061         	movff	___flsub@b+1,___fladd@b+1
  4862  004374  C072  F062         	movff	___flsub@b+2,___fladd@b+2
  4863  004378  C073  F063         	movff	___flsub@b+3,___fladd@b+3
  4864  00437C  C074  F064         	movff	___flsub@a,___fladd@a
  4865  004380  C075  F065         	movff	___flsub@a+1,___fladd@a+1
  4866  004384  C076  F066         	movff	___flsub@a+2,___fladd@a+2
  4867  004388  C077  F067         	movff	___flsub@a+3,___fladd@a+3
  4868  00438C  EC50  F004         	call	___fladd	;wreg free
  4869  004390  C060  F070         	movff	?___fladd,?___flsub
  4870  004394  C061  F071         	movff	?___fladd+1,?___flsub+1
  4871  004398  C062  F072         	movff	?___fladd+2,?___flsub+2
  4872  00439C  C063  F073         	movff	?___fladd+3,?___flsub+3
  4873  0043A0  0012               	return		;funcret
  4874  0043A2                     __end_of___flsub:
  4875                           	callstack 0
  4876                           
  4877 ;; *************** function ___fladd *****************
  4878 ;; Defined at:
  4879 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  b               4    0[BANK0 ] float 
  4882 ;;  a               4    4[BANK0 ] float 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  grs             1   15[BANK0 ] unsigned char 
  4885 ;;  bexp            1   14[BANK0 ] unsigned char 
  4886 ;;  aexp            1   13[BANK0 ] unsigned char 
  4887 ;;  signs           1   12[BANK0 ] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  4    0[BANK0 ] unsigned char 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4897 ;;      Params:         0       8       0       0       0       0       0       0       0
  4898 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4899 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4900 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4901 ;;Total ram usage:       16 bytes
  4902 ;; Hardware stack levels used: 1
  4903 ;; Hardware stack levels required when called: 5
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		___flsub
  4908 ;;		_roundf
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text23
  4913  0008A0                     __ptext23:
  4914                           	callstack 0
  4915  0008A0                     ___fladd:
  4916                           	callstack 21
  4917  0008A0  0100               	movlb	0	; () banked
  4918  0008A2  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4919  0008A4  0B80               	andlw	128
  4920  0008A6  6F6C               	movwf	___fladd@signs& (0+255),b
  4921  0008A8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4922  0008AA  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  4923  0008AC  6F6E               	movwf	___fladd@bexp& (0+255),b
  4924  0008AE                     
  4925                           ; BSR set to: 0
  4926  0008AE  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  4927  0008B0  EF5C  F004         	goto	u3401
  4928  0008B4  EF5E  F004         	goto	u3400
  4929  0008B8                     u3401:
  4930  0008B8  EF5F  F004         	goto	l3599
  4931  0008BC                     u3400:
  4932  0008BC                     
  4933                           ; BSR set to: 0
  4934  0008BC  816E               	bsf	___fladd@bexp& (0+255),0,b
  4935  0008BE                     l3599:
  4936                           
  4937                           ; BSR set to: 0
  4938  0008BE  516E               	movf	___fladd@bexp& (0+255),w,b
  4939  0008C0  B4D8               	btfsc	status,2,c
  4940  0008C2  EF65  F004         	goto	u3411
  4941  0008C6  EF67  F004         	goto	u3410
  4942  0008CA                     u3411:
  4943  0008CA  EF7C  F004         	goto	l3609
  4944  0008CE                     u3410:
  4945  0008CE                     
  4946                           ; BSR set to: 0
  4947  0008CE  296E               	incf	___fladd@bexp& (0+255),w,b
  4948  0008D0  A4D8               	btfss	status,2,c
  4949  0008D2  EF6D  F004         	goto	u3421
  4950  0008D6  EF6F  F004         	goto	u3420
  4951  0008DA                     u3421:
  4952  0008DA  EF77  F004         	goto	l3605
  4953  0008DE                     u3420:
  4954  0008DE                     
  4955                           ; BSR set to: 0
  4956  0008DE  0E00               	movlw	0
  4957  0008E0  6F60               	movwf	___fladd@b& (0+255),b
  4958  0008E2  0E00               	movlw	0
  4959  0008E4  6F61               	movwf	(___fladd@b+1)& (0+255),b
  4960  0008E6  0E00               	movlw	0
  4961  0008E8  6F62               	movwf	(___fladd@b+2)& (0+255),b
  4962  0008EA  0E00               	movlw	0
  4963  0008EC  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4964  0008EE                     l3605:
  4965                           
  4966                           ; BSR set to: 0
  4967  0008EE  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  4968  0008F0                     
  4969                           ; BSR set to: 0
  4970  0008F0  0E00               	movlw	0
  4971  0008F2  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4972  0008F4  EF84  F004         	goto	l3611
  4973  0008F8                     l3609:
  4974                           
  4975                           ; BSR set to: 0
  4976  0008F8  0E00               	movlw	0
  4977  0008FA  6F60               	movwf	___fladd@b& (0+255),b
  4978  0008FC  0E00               	movlw	0
  4979  0008FE  6F61               	movwf	(___fladd@b+1)& (0+255),b
  4980  000900  0E00               	movlw	0
  4981  000902  6F62               	movwf	(___fladd@b+2)& (0+255),b
  4982  000904  0E00               	movlw	0
  4983  000906  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4984  000908                     l3611:
  4985                           
  4986                           ; BSR set to: 0
  4987  000908  5167               	movf	(___fladd@a+3)& (0+255),w,b
  4988  00090A  0B80               	andlw	128
  4989  00090C  6F6D               	movwf	___fladd@aexp& (0+255),b
  4990  00090E                     
  4991                           ; BSR set to: 0
  4992  00090E  516C               	movf	___fladd@signs& (0+255),w,b
  4993  000910  196D               	xorwf	___fladd@aexp& (0+255),w,b
  4994  000912  B4D8               	btfsc	status,2,c
  4995  000914  EF8E  F004         	goto	u3431
  4996  000918  EF90  F004         	goto	u3430
  4997  00091C                     u3431:
  4998  00091C  EF91  F004         	goto	l3617
  4999  000920                     u3430:
  5000  000920                     
  5001                           ; BSR set to: 0
  5002  000920  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5003  000922                     l3617:
  5004                           
  5005                           ; BSR set to: 0
  5006  000922  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5007  000924  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5008  000926  6F6D               	movwf	___fladd@aexp& (0+255),b
  5009  000928                     
  5010                           ; BSR set to: 0
  5011  000928  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  5012  00092A  EF99  F004         	goto	u3441
  5013  00092E  EF9B  F004         	goto	u3440
  5014  000932                     u3441:
  5015  000932  EF9C  F004         	goto	l3623
  5016  000936                     u3440:
  5017  000936                     
  5018                           ; BSR set to: 0
  5019  000936  816D               	bsf	___fladd@aexp& (0+255),0,b
  5020  000938                     l3623:
  5021                           
  5022                           ; BSR set to: 0
  5023  000938  516D               	movf	___fladd@aexp& (0+255),w,b
  5024  00093A  B4D8               	btfsc	status,2,c
  5025  00093C  EFA2  F004         	goto	u3451
  5026  000940  EFA4  F004         	goto	u3450
  5027  000944                     u3451:
  5028  000944  EFB9  F004         	goto	l3633
  5029  000948                     u3450:
  5030  000948                     
  5031                           ; BSR set to: 0
  5032  000948  296D               	incf	___fladd@aexp& (0+255),w,b
  5033  00094A  A4D8               	btfss	status,2,c
  5034  00094C  EFAA  F004         	goto	u3461
  5035  000950  EFAC  F004         	goto	u3460
  5036  000954                     u3461:
  5037  000954  EFB4  F004         	goto	l3629
  5038  000958                     u3460:
  5039  000958                     
  5040                           ; BSR set to: 0
  5041  000958  0E00               	movlw	0
  5042  00095A  6F64               	movwf	___fladd@a& (0+255),b
  5043  00095C  0E00               	movlw	0
  5044  00095E  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5045  000960  0E00               	movlw	0
  5046  000962  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5047  000964  0E00               	movlw	0
  5048  000966  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5049  000968                     l3629:
  5050                           
  5051                           ; BSR set to: 0
  5052  000968  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5053  00096A                     
  5054                           ; BSR set to: 0
  5055  00096A  0E00               	movlw	0
  5056  00096C  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5057  00096E  EFC1  F004         	goto	l3635
  5058  000972                     l3633:
  5059                           
  5060                           ; BSR set to: 0
  5061  000972  0E00               	movlw	0
  5062  000974  6F64               	movwf	___fladd@a& (0+255),b
  5063  000976  0E00               	movlw	0
  5064  000978  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5065  00097A  0E00               	movlw	0
  5066  00097C  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5067  00097E  0E00               	movlw	0
  5068  000980  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5069  000982                     l3635:
  5070                           
  5071                           ; BSR set to: 0
  5072  000982  516E               	movf	___fladd@bexp& (0+255),w,b
  5073  000984  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5074  000986  B0D8               	btfsc	status,0,c
  5075  000988  EFC8  F004         	goto	u3471
  5076  00098C  EFCA  F004         	goto	u3470
  5077  000990                     u3471:
  5078  000990  EFF1  F004         	goto	l3671
  5079  000994                     u3470:
  5080  000994                     
  5081                           ; BSR set to: 0
  5082  000994  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5083  000996  EFCF  F004         	goto	u3481
  5084  00099A  EFD1  F004         	goto	u3480
  5085  00099E                     u3481:
  5086  00099E  EFD3  F004         	goto	l3641
  5087  0009A2                     u3480:
  5088  0009A2                     
  5089                           ; BSR set to: 0
  5090  0009A2  0E80               	movlw	128
  5091  0009A4  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5092  0009A6                     l3641:
  5093                           
  5094                           ; BSR set to: 0
  5095  0009A6  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  5096  0009AA                     
  5097                           ; BSR set to: 0
  5098  0009AA  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5099  0009AE                     
  5100                           ; BSR set to: 0
  5101  0009AE  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  5102  0009B2                     
  5103                           ; BSR set to: 0
  5104  0009B2  C060  F06F         	movff	___fladd@b,___fladd@grs
  5105  0009B6                     
  5106                           ; BSR set to: 0
  5107  0009B6  C064  F060         	movff	___fladd@a,___fladd@b
  5108  0009BA                     
  5109                           ; BSR set to: 0
  5110  0009BA  C06F  F064         	movff	___fladd@grs,___fladd@a
  5111  0009BE                     
  5112                           ; BSR set to: 0
  5113  0009BE  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  5114  0009C2                     
  5115                           ; BSR set to: 0
  5116  0009C2  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  5117  0009C6                     
  5118                           ; BSR set to: 0
  5119  0009C6  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  5120  0009CA                     
  5121                           ; BSR set to: 0
  5122  0009CA  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  5123  0009CE                     
  5124                           ; BSR set to: 0
  5125  0009CE  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  5126  0009D2                     
  5127                           ; BSR set to: 0
  5128  0009D2  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  5129  0009D6                     
  5130                           ; BSR set to: 0
  5131  0009D6  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  5132  0009DA                     
  5133                           ; BSR set to: 0
  5134  0009DA  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  5135  0009DE                     
  5136                           ; BSR set to: 0
  5137  0009DE  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  5138  0009E2                     l3671:
  5139                           
  5140                           ; BSR set to: 0
  5141  0009E2  0E00               	movlw	0
  5142  0009E4  6F6F               	movwf	___fladd@grs& (0+255),b
  5143  0009E6                     
  5144                           ; BSR set to: 0
  5145  0009E6  516E               	movf	___fladd@bexp& (0+255),w,b
  5146  0009E8  C06D  F068         	movff	___fladd@aexp,??___fladd
  5147  0009EC  6B69               	clrf	(??___fladd+1)& (0+255),b
  5148  0009EE  5F68               	subwf	??___fladd& (0+255),f,b
  5149  0009F0  0E00               	movlw	0
  5150  0009F2  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5151  0009F4  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5152  0009F6  EF06  F005         	goto	u3491
  5153  0009FA  5169               	movf	(??___fladd+1)& (0+255),w,b
  5154  0009FC  E109               	bnz	u3490
  5155  0009FE  0E1A               	movlw	26
  5156  000A00  5D68               	subwf	??___fladd& (0+255),w,b
  5157  000A02  A0D8               	btfss	status,0,c
  5158  000A04  EF06  F005         	goto	u3491
  5159  000A08  EF08  F005         	goto	u3490
  5160  000A0C                     u3491:
  5161  000A0C  EF3F  F005         	goto	l923
  5162  000A10                     u3490:
  5163  000A10                     
  5164                           ; BSR set to: 0
  5165  000A10  5160               	movf	___fladd@b& (0+255),w,b
  5166  000A12  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5167  000A14  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5168  000A16  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5169  000A18  A4D8               	btfss	status,2,c
  5170  000A1A  EF11  F005         	goto	u3501
  5171  000A1E  EF14  F005         	goto	u3500
  5172  000A22                     u3501:
  5173  000A22  0E01               	movlw	1
  5174  000A24  EF15  F005         	goto	u3510
  5175  000A28                     u3500:
  5176  000A28  0E00               	movlw	0
  5177  000A2A                     u3510:
  5178  000A2A  6F6F               	movwf	___fladd@grs& (0+255),b
  5179  000A2C                     
  5180                           ; BSR set to: 0
  5181  000A2C  0E00               	movlw	0
  5182  000A2E  6F60               	movwf	___fladd@b& (0+255),b
  5183  000A30  0E00               	movlw	0
  5184  000A32  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5185  000A34  0E00               	movlw	0
  5186  000A36  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5187  000A38  0E00               	movlw	0
  5188  000A3A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5189  000A3C                     
  5190                           ; BSR set to: 0
  5191  000A3C  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5192  000A40  EF48  F005         	goto	l922
  5193  000A44                     l924:
  5194                           
  5195                           ; BSR set to: 0
  5196  000A44  A16F               	btfss	___fladd@grs& (0+255),0,b
  5197  000A46  EF27  F005         	goto	u3521
  5198  000A4A  EF29  F005         	goto	u3520
  5199  000A4E                     u3521:
  5200  000A4E  EF2F  F005         	goto	l3683
  5201  000A52                     u3520:
  5202  000A52                     
  5203                           ; BSR set to: 0
  5204  000A52  90D8               	bcf	status,0,c
  5205  000A54  316F               	rrcf	___fladd@grs& (0+255),w,b
  5206  000A56  0901               	iorlw	1
  5207  000A58  6F6F               	movwf	___fladd@grs& (0+255),b
  5208  000A5A  EF31  F005         	goto	l3685
  5209  000A5E                     l3683:
  5210                           
  5211                           ; BSR set to: 0
  5212  000A5E  90D8               	bcf	status,0,c
  5213  000A60  336F               	rrcf	___fladd@grs& (0+255),f,b
  5214  000A62                     l3685:
  5215                           
  5216                           ; BSR set to: 0
  5217  000A62  A160               	btfss	___fladd@b& (0+255),0,b
  5218  000A64  EF36  F005         	goto	u3531
  5219  000A68  EF38  F005         	goto	u3530
  5220  000A6C                     u3531:
  5221  000A6C  EF39  F005         	goto	l3689
  5222  000A70                     u3530:
  5223  000A70                     
  5224                           ; BSR set to: 0
  5225  000A70  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5226  000A72                     l3689:
  5227                           
  5228                           ; BSR set to: 0
  5229  000A72  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5230  000A74  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5231  000A76  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5232  000A78  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5233  000A7A  3360               	rrcf	___fladd@b& (0+255),f,b
  5234  000A7C                     
  5235                           ; BSR set to: 0
  5236  000A7C  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5237  000A7E                     l923:
  5238                           
  5239                           ; BSR set to: 0
  5240  000A7E  516D               	movf	___fladd@aexp& (0+255),w,b
  5241  000A80  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5242  000A82  A0D8               	btfss	status,0,c
  5243  000A84  EF46  F005         	goto	u3541
  5244  000A88  EF48  F005         	goto	u3540
  5245  000A8C                     u3541:
  5246  000A8C  EF22  F005         	goto	l924
  5247  000A90                     u3540:
  5248  000A90                     l922:
  5249                           
  5250                           ; BSR set to: 0
  5251  000A90  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5252  000A92  EF4D  F005         	goto	u3551
  5253  000A96  EF4F  F005         	goto	u3550
  5254  000A9A                     u3551:
  5255  000A9A  EF8F  F005         	goto	l3717
  5256  000A9E                     u3550:
  5257  000A9E                     
  5258                           ; BSR set to: 0
  5259  000A9E  516E               	movf	___fladd@bexp& (0+255),w,b
  5260  000AA0  A4D8               	btfss	status,2,c
  5261  000AA2  EF55  F005         	goto	u3561
  5262  000AA6  EF57  F005         	goto	u3560
  5263  000AAA                     u3561:
  5264  000AAA  EF61  F005         	goto	l3699
  5265  000AAE                     u3560:
  5266  000AAE                     
  5267                           ; BSR set to: 0
  5268  000AAE  0E00               	movlw	0
  5269  000AB0  6F60               	movwf	?___fladd& (0+255),b
  5270  000AB2  0E00               	movlw	0
  5271  000AB4  6F61               	movwf	(?___fladd+1)& (0+255),b
  5272  000AB6  0E00               	movlw	0
  5273  000AB8  6F62               	movwf	(?___fladd+2)& (0+255),b
  5274  000ABA  0E00               	movlw	0
  5275  000ABC  6F63               	movwf	(?___fladd+3)& (0+255),b
  5276  000ABE  EFB0  F006         	goto	l931
  5277  000AC2                     l3699:
  5278                           
  5279                           ; BSR set to: 0
  5280  000AC2  5164               	movf	___fladd@a& (0+255),w,b
  5281  000AC4  2760               	addwf	___fladd@b& (0+255),f,b
  5282  000AC6  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5283  000AC8  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5284  000ACA  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5285  000ACC  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5286  000ACE  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5287  000AD0  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5288  000AD2                     
  5289                           ; BSR set to: 0
  5290  000AD2  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5291  000AD4  EF6E  F005         	goto	u3571
  5292  000AD8  EF70  F005         	goto	u3570
  5293  000ADC                     u3571:
  5294  000ADC  EF1C  F006         	goto	l3753
  5295  000AE0                     u3570:
  5296  000AE0                     
  5297                           ; BSR set to: 0
  5298  000AE0  A16F               	btfss	___fladd@grs& (0+255),0,b
  5299  000AE2  EF75  F005         	goto	u3581
  5300  000AE6  EF77  F005         	goto	u3580
  5301  000AEA                     u3581:
  5302  000AEA  EF7D  F005         	goto	l3707
  5303  000AEE                     u3580:
  5304  000AEE                     
  5305                           ; BSR set to: 0
  5306  000AEE  90D8               	bcf	status,0,c
  5307  000AF0  316F               	rrcf	___fladd@grs& (0+255),w,b
  5308  000AF2  0901               	iorlw	1
  5309  000AF4  6F6F               	movwf	___fladd@grs& (0+255),b
  5310  000AF6  EF7F  F005         	goto	l3709
  5311  000AFA                     l3707:
  5312                           
  5313                           ; BSR set to: 0
  5314  000AFA  90D8               	bcf	status,0,c
  5315  000AFC  336F               	rrcf	___fladd@grs& (0+255),f,b
  5316  000AFE                     l3709:
  5317                           
  5318                           ; BSR set to: 0
  5319  000AFE  A160               	btfss	___fladd@b& (0+255),0,b
  5320  000B00  EF84  F005         	goto	u3591
  5321  000B04  EF86  F005         	goto	u3590
  5322  000B08                     u3591:
  5323  000B08  EF87  F005         	goto	l3713
  5324  000B0C                     u3590:
  5325  000B0C                     
  5326                           ; BSR set to: 0
  5327  000B0C  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5328  000B0E                     l3713:
  5329                           
  5330                           ; BSR set to: 0
  5331  000B0E  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5332  000B10  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5333  000B12  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5334  000B14  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5335  000B16  3360               	rrcf	___fladd@b& (0+255),f,b
  5336  000B18                     
  5337                           ; BSR set to: 0
  5338  000B18  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5339  000B1A  EF1C  F006         	goto	l3753
  5340  000B1E                     l3717:
  5341                           
  5342                           ; BSR set to: 0
  5343  000B1E  5164               	movf	___fladd@a& (0+255),w,b
  5344  000B20  5D60               	subwf	___fladd@b& (0+255),w,b
  5345  000B22  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5346  000B24  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5347  000B26  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5348  000B28  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5349  000B2A  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5350  000B2C  0A80               	xorlw	128
  5351  000B2E  6F68               	movwf	??___fladd& (0+255),b
  5352  000B30  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5353  000B32  0A80               	xorlw	128
  5354  000B34  5968               	subwfb	??___fladd& (0+255),w,b
  5355  000B36  B0D8               	btfsc	status,0,c
  5356  000B38  EFA0  F005         	goto	u3601
  5357  000B3C  EFA2  F005         	goto	u3600
  5358  000B40                     u3601:
  5359  000B40  EFCD  F005         	goto	l3727
  5360  000B44                     u3600:
  5361  000B44                     
  5362                           ; BSR set to: 0
  5363  000B44  5160               	movf	___fladd@b& (0+255),w,b
  5364  000B46  5D64               	subwf	___fladd@a& (0+255),w,b
  5365  000B48  6F68               	movwf	??___fladd& (0+255),b
  5366  000B4A  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5367  000B4C  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5368  000B4E  6F69               	movwf	(??___fladd+1)& (0+255),b
  5369  000B50  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5370  000B52  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5371  000B54  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5372  000B56  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5373  000B58  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5374  000B5A  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5375  000B5C  0EFF               	movlw	255
  5376  000B5E  2568               	addwf	??___fladd& (0+255),w,b
  5377  000B60  6F60               	movwf	___fladd@b& (0+255),b
  5378  000B62  0EFF               	movlw	255
  5379  000B64  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5380  000B66  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5381  000B68  0EFF               	movlw	255
  5382  000B6A  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5383  000B6C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5384  000B6E  0EFF               	movlw	255
  5385  000B70  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5386  000B72  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5387  000B74  0E80               	movlw	128
  5388  000B76  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5389  000B78                     
  5390                           ; BSR set to: 0
  5391  000B78  6D6F               	negf	___fladd@grs& (0+255),b
  5392  000B7A                     
  5393                           ; BSR set to: 0
  5394  000B7A  516F               	movf	___fladd@grs& (0+255),w,b
  5395  000B7C  A4D8               	btfss	status,2,c
  5396  000B7E  EFC3  F005         	goto	u3611
  5397  000B82  EFC5  F005         	goto	u3610
  5398  000B86                     u3611:
  5399  000B86  EFD5  F005         	goto	l939
  5400  000B8A                     u3610:
  5401  000B8A                     
  5402                           ; BSR set to: 0
  5403  000B8A  0E01               	movlw	1
  5404  000B8C  2760               	addwf	___fladd@b& (0+255),f,b
  5405  000B8E  0E00               	movlw	0
  5406  000B90  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5407  000B92  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5408  000B94  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5409  000B96  EFD5  F005         	goto	l939
  5410  000B9A                     l3727:
  5411                           
  5412                           ; BSR set to: 0
  5413  000B9A  5164               	movf	___fladd@a& (0+255),w,b
  5414  000B9C  5F60               	subwf	___fladd@b& (0+255),f,b
  5415  000B9E  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5416  000BA0  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5417  000BA2  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5418  000BA4  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5419  000BA6  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5420  000BA8  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5421  000BAA                     l939:
  5422                           
  5423                           ; BSR set to: 0
  5424  000BAA  5160               	movf	___fladd@b& (0+255),w,b
  5425  000BAC  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5426  000BAE  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5427  000BB0  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5428  000BB2  A4D8               	btfss	status,2,c
  5429  000BB4  EFDE  F005         	goto	u3621
  5430  000BB8  EFE0  F005         	goto	u3620
  5431  000BBC                     u3621:
  5432  000BBC  EF15  F006         	goto	l3751
  5433  000BC0                     u3620:
  5434  000BC0                     
  5435                           ; BSR set to: 0
  5436  000BC0  516F               	movf	___fladd@grs& (0+255),w,b
  5437  000BC2  A4D8               	btfss	status,2,c
  5438  000BC4  EFE6  F005         	goto	u3631
  5439  000BC8  EFE8  F005         	goto	u3630
  5440  000BCC                     u3631:
  5441  000BCC  EF15  F006         	goto	l3751
  5442  000BD0                     u3630:
  5443  000BD0                     
  5444                           ; BSR set to: 0
  5445  000BD0  0E00               	movlw	0
  5446  000BD2  6F60               	movwf	?___fladd& (0+255),b
  5447  000BD4  0E00               	movlw	0
  5448  000BD6  6F61               	movwf	(?___fladd+1)& (0+255),b
  5449  000BD8  0E00               	movlw	0
  5450  000BDA  6F62               	movwf	(?___fladd+2)& (0+255),b
  5451  000BDC  0E00               	movlw	0
  5452  000BDE  6F63               	movwf	(?___fladd+3)& (0+255),b
  5453  000BE0  EFB0  F006         	goto	l931
  5454  000BE4                     l3735:
  5455                           
  5456                           ; BSR set to: 0
  5457  000BE4  90D8               	bcf	status,0,c
  5458  000BE6  3760               	rlcf	___fladd@b& (0+255),f,b
  5459  000BE8  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5460  000BEA  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5461  000BEC  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5462  000BEE                     
  5463                           ; BSR set to: 0
  5464  000BEE  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5465  000BF0  EFFC  F005         	goto	u3641
  5466  000BF4  EFFE  F005         	goto	u3640
  5467  000BF8                     u3641:
  5468  000BF8  EFFF  F005         	goto	l3741
  5469  000BFC                     u3640:
  5470  000BFC                     
  5471                           ; BSR set to: 0
  5472  000BFC  8160               	bsf	___fladd@b& (0+255),0,b
  5473  000BFE                     l3741:
  5474                           
  5475                           ; BSR set to: 0
  5476  000BFE  A16F               	btfss	___fladd@grs& (0+255),0,b
  5477  000C00  EF04  F006         	goto	u3651
  5478  000C04  EF06  F006         	goto	u3650
  5479  000C08                     u3651:
  5480  000C08  EF0A  F006         	goto	l3745
  5481  000C0C                     u3650:
  5482  000C0C                     
  5483                           ; BSR set to: 0
  5484  000C0C  80D8               	bsf	status,0,c
  5485  000C0E  376F               	rlcf	___fladd@grs& (0+255),f,b
  5486  000C10  EF0C  F006         	goto	l3747
  5487  000C14                     l3745:
  5488                           
  5489                           ; BSR set to: 0
  5490  000C14  90D8               	bcf	status,0,c
  5491  000C16  376F               	rlcf	___fladd@grs& (0+255),f,b
  5492  000C18                     l3747:
  5493                           
  5494                           ; BSR set to: 0
  5495  000C18  516E               	movf	___fladd@bexp& (0+255),w,b
  5496  000C1A  B4D8               	btfsc	status,2,c
  5497  000C1C  EF12  F006         	goto	u3661
  5498  000C20  EF14  F006         	goto	u3660
  5499  000C24                     u3661:
  5500  000C24  EF15  F006         	goto	l3751
  5501  000C28                     u3660:
  5502  000C28                     
  5503                           ; BSR set to: 0
  5504  000C28  076E               	decf	___fladd@bexp& (0+255),f,b
  5505  000C2A                     l3751:
  5506                           
  5507                           ; BSR set to: 0
  5508  000C2A  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5509  000C2C  EF1A  F006         	goto	u3671
  5510  000C30  EF1C  F006         	goto	u3670
  5511  000C34                     u3671:
  5512  000C34  EFF2  F005         	goto	l3735
  5513  000C38                     u3670:
  5514  000C38                     l3753:
  5515                           
  5516                           ; BSR set to: 0
  5517  000C38  0E00               	movlw	0
  5518  000C3A  6F6D               	movwf	___fladd@aexp& (0+255),b
  5519  000C3C                     
  5520                           ; BSR set to: 0
  5521  000C3C  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5522  000C3E  EF23  F006         	goto	u3681
  5523  000C42  EF25  F006         	goto	u3680
  5524  000C46                     u3681:
  5525  000C46  EF3D  F006         	goto	l948
  5526  000C4A                     u3680:
  5527  000C4A                     
  5528                           ; BSR set to: 0
  5529  000C4A  C06F  F068         	movff	___fladd@grs,??___fladd
  5530  000C4E  0E7F               	movlw	127
  5531  000C50  1768               	andwf	??___fladd& (0+255),f,b
  5532  000C52  B4D8               	btfsc	status,2,c
  5533  000C54  EF2E  F006         	goto	u3691
  5534  000C58  EF30  F006         	goto	u3690
  5535  000C5C                     u3691:
  5536  000C5C  EF34  F006         	goto	l949
  5537  000C60                     u3690:
  5538  000C60                     l3759:
  5539                           
  5540                           ; BSR set to: 0
  5541  000C60  0E01               	movlw	1
  5542  000C62  6F6D               	movwf	___fladd@aexp& (0+255),b
  5543  000C64  EF3D  F006         	goto	l948
  5544  000C68                     l949:
  5545                           
  5546                           ; BSR set to: 0
  5547  000C68  A160               	btfss	___fladd@b& (0+255),0,b
  5548  000C6A  EF39  F006         	goto	u3701
  5549  000C6E  EF3B  F006         	goto	u3700
  5550  000C72                     u3701:
  5551  000C72  EF3D  F006         	goto	l948
  5552  000C76                     u3700:
  5553  000C76  EF30  F006         	goto	l3759
  5554  000C7A                     l948:
  5555                           
  5556                           ; BSR set to: 0
  5557  000C7A  516D               	movf	___fladd@aexp& (0+255),w,b
  5558  000C7C  B4D8               	btfsc	status,2,c
  5559  000C7E  EF43  F006         	goto	u3711
  5560  000C82  EF45  F006         	goto	u3710
  5561  000C86                     u3711:
  5562  000C86  EF70  F006         	goto	l3771
  5563  000C8A                     u3710:
  5564  000C8A                     
  5565                           ; BSR set to: 0
  5566  000C8A  0E01               	movlw	1
  5567  000C8C  2760               	addwf	___fladd@b& (0+255),f,b
  5568  000C8E  0E00               	movlw	0
  5569  000C90  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5570  000C92  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5571  000C94  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5572  000C96                     
  5573                           ; BSR set to: 0
  5574  000C96  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5575  000C98  EF50  F006         	goto	u3721
  5576  000C9C  EF52  F006         	goto	u3720
  5577  000CA0                     u3721:
  5578  000CA0  EF70  F006         	goto	l3771
  5579  000CA4                     u3720:
  5580  000CA4                     
  5581                           ; BSR set to: 0
  5582  000CA4  C060  F068         	movff	___fladd@b,??___fladd
  5583  000CA8  C061  F069         	movff	___fladd@b+1,??___fladd+1
  5584  000CAC  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  5585  000CB0  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  5586  000CB4  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5587  000CB6  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5588  000CB8  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5589  000CBA  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5590  000CBC  3368               	rrcf	??___fladd& (0+255),f,b
  5591  000CBE  C068  F060         	movff	??___fladd,___fladd@b
  5592  000CC2  C069  F061         	movff	??___fladd+1,___fladd@b+1
  5593  000CC6  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  5594  000CCA  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  5595  000CCE  296E               	incf	___fladd@bexp& (0+255),w,b
  5596  000CD0  B4D8               	btfsc	status,2,c
  5597  000CD2  EF6D  F006         	goto	u3731
  5598  000CD6  EF6F  F006         	goto	u3730
  5599  000CDA                     u3731:
  5600  000CDA  EF70  F006         	goto	l3771
  5601  000CDE                     u3730:
  5602  000CDE                     
  5603                           ; BSR set to: 0
  5604  000CDE  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5605  000CE0                     l3771:
  5606                           
  5607                           ; BSR set to: 0
  5608  000CE0  296E               	incf	___fladd@bexp& (0+255),w,b
  5609  000CE2  B4D8               	btfsc	status,2,c
  5610  000CE4  EF76  F006         	goto	u3741
  5611  000CE8  EF78  F006         	goto	u3740
  5612  000CEC                     u3741:
  5613  000CEC  EF80  F006         	goto	l3775
  5614  000CF0                     u3740:
  5615  000CF0                     
  5616                           ; BSR set to: 0
  5617  000CF0  516E               	movf	___fladd@bexp& (0+255),w,b
  5618  000CF2  A4D8               	btfss	status,2,c
  5619  000CF4  EF7E  F006         	goto	u3751
  5620  000CF8  EF80  F006         	goto	u3750
  5621  000CFC                     u3751:
  5622  000CFC  EF92  F006         	goto	l3779
  5623  000D00                     u3750:
  5624  000D00                     l3775:
  5625                           
  5626                           ; BSR set to: 0
  5627  000D00  0E00               	movlw	0
  5628  000D02  6F60               	movwf	___fladd@b& (0+255),b
  5629  000D04  0E00               	movlw	0
  5630  000D06  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5631  000D08  0E00               	movlw	0
  5632  000D0A  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5633  000D0C  0E00               	movlw	0
  5634  000D0E  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5635  000D10  516E               	movf	___fladd@bexp& (0+255),w,b
  5636  000D12  A4D8               	btfss	status,2,c
  5637  000D14  EF8E  F006         	goto	u3761
  5638  000D18  EF90  F006         	goto	u3760
  5639  000D1C                     u3761:
  5640  000D1C  EF92  F006         	goto	l3779
  5641  000D20                     u3760:
  5642  000D20                     
  5643                           ; BSR set to: 0
  5644  000D20  0E00               	movlw	0
  5645  000D22  6F6C               	movwf	___fladd@signs& (0+255),b
  5646  000D24                     l3779:
  5647                           
  5648                           ; BSR set to: 0
  5649  000D24  A16E               	btfss	___fladd@bexp& (0+255),0,b
  5650  000D26  EF97  F006         	goto	u3771
  5651  000D2A  EF99  F006         	goto	u3770
  5652  000D2E                     u3771:
  5653  000D2E  EF9C  F006         	goto	l3783
  5654  000D32                     u3770:
  5655  000D32                     
  5656                           ; BSR set to: 0
  5657  000D32  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5658  000D34  EF9D  F006         	goto	l3785
  5659  000D38                     l3783:
  5660                           
  5661                           ; BSR set to: 0
  5662  000D38  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  5663  000D3A                     l3785:
  5664                           
  5665                           ; BSR set to: 0
  5666  000D3A  90D8               	bcf	status,0,c
  5667  000D3C  316E               	rrcf	___fladd@bexp& (0+255),w,b
  5668  000D3E  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5669  000D40                     
  5670                           ; BSR set to: 0
  5671  000D40  AF6C               	btfss	___fladd@signs& (0+255),7,b
  5672  000D42  EFA5  F006         	goto	u3781
  5673  000D46  EFA7  F006         	goto	u3780
  5674  000D4A                     u3781:
  5675  000D4A  EFA8  F006         	goto	l3791
  5676  000D4E                     u3780:
  5677  000D4E                     
  5678                           ; BSR set to: 0
  5679  000D4E  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  5680  000D50                     l3791:
  5681                           
  5682                           ; BSR set to: 0
  5683  000D50  C060  F060         	movff	___fladd@b,?___fladd
  5684  000D54  C061  F061         	movff	___fladd@b+1,?___fladd+1
  5685  000D58  C062  F062         	movff	___fladd@b+2,?___fladd+2
  5686  000D5C  C063  F063         	movff	___fladd@b+3,?___fladd+3
  5687  000D60                     l931:
  5688                           
  5689                           ; BSR set to: 0
  5690  000D60  0012               	return		;funcret
  5691  000D62                     __end_of___fladd:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function ___flneg *****************
  5695 ;; Defined at:
  5696 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  f1              4    0[BANK0 ] unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  4    0[BANK0 ] unsigned char 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5710 ;;      Params:         0       4       0       0       0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5713 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5714 ;;Total ram usage:        4 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 5
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_roundf
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text24
  5725  004670                     __ptext24:
  5726                           	callstack 0
  5727  004670                     ___flneg:
  5728                           	callstack 22
  5729  004670  0100               	movlb	0	; () banked
  5730  004672  5160               	movf	___flneg@f1& (0+255),w,b
  5731  004674  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5732  004676  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5733  004678  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5734  00467A  B4D8               	btfsc	status,2,c
  5735  00467C  EF42  F023         	goto	u4221
  5736  004680  EF44  F023         	goto	u4220
  5737  004684                     u4221:
  5738  004684  EF4C  F023         	goto	l4111
  5739  004688                     u4220:
  5740  004688                     
  5741                           ; BSR set to: 0
  5742  004688  0E00               	movlw	0
  5743  00468A  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5744  00468C  0E00               	movlw	0
  5745  00468E  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5746  004690  0E00               	movlw	0
  5747  004692  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5748  004694  0E80               	movlw	128
  5749  004696  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5750  004698                     l4111:
  5751                           
  5752                           ; BSR set to: 0
  5753  004698  C060  F060         	movff	___flneg@f1,?___flneg
  5754  00469C  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5755  0046A0  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5756  0046A4  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5757  0046A8                     
  5758                           ; BSR set to: 0
  5759  0046A8  0012               	return		;funcret
  5760  0046AA                     __end_of___flneg:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function ___flmul *****************
  5764 ;; Defined at:
  5765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  b               4   14[BANK0 ] unsigned char 
  5768 ;;  a               4   18[BANK0 ] unsigned char 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  prod            4   33[BANK0 ] struct .
  5771 ;;  grs             4   27[BANK0 ] unsigned long 
  5772 ;;  temp            2   37[BANK0 ] struct .
  5773 ;;  bexp            1   32[BANK0 ] unsigned char 
  5774 ;;  aexp            1   31[BANK0 ] unsigned char 
  5775 ;;  sign            1   26[BANK0 ] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  4   14[BANK0 ] unsigned char 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0, prodl, prodh
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5785 ;;      Params:         0       8       0       0       0       0       0       0       0
  5786 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5787 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5788 ;;      Totals:         0      25       0       0       0       0       0       0       0
  5789 ;;Total ram usage:       25 bytes
  5790 ;; Hardware stack levels used: 1
  5791 ;; Hardware stack levels required when called: 5
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_convert_temp
  5796 ;;		_roundf
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text25
  5801  001222                     __ptext25:
  5802                           	callstack 0
  5803  001222                     ___flmul:
  5804                           	callstack 22
  5805  001222  0100               	movlb	0	; () banked
  5806  001224  5171               	movf	(___flmul@b+3)& (0+255),w,b
  5807  001226  0B80               	andlw	128
  5808  001228  6F7A               	movwf	___flmul@sign& (0+255),b
  5809  00122A  5171               	movf	(___flmul@b+3)& (0+255),w,b
  5810  00122C  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  5811  00122E  6F80               	movwf	___flmul@bexp& (0+255),b
  5812  001230                     
  5813                           ; BSR set to: 0
  5814  001230  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  5815  001232  EF1D  F009         	goto	u3981
  5816  001236  EF1F  F009         	goto	u3980
  5817  00123A                     u3981:
  5818  00123A  EF20  F009         	goto	l3955
  5819  00123E                     u3980:
  5820  00123E                     
  5821                           ; BSR set to: 0
  5822  00123E  8180               	bsf	___flmul@bexp& (0+255),0,b
  5823  001240                     l3955:
  5824                           
  5825                           ; BSR set to: 0
  5826  001240  5180               	movf	___flmul@bexp& (0+255),w,b
  5827  001242  B4D8               	btfsc	status,2,c
  5828  001244  EF26  F009         	goto	u3991
  5829  001248  EF28  F009         	goto	u3990
  5830  00124C                     u3991:
  5831  00124C  EF3B  F009         	goto	l3963
  5832  001250                     u3990:
  5833  001250                     
  5834                           ; BSR set to: 0
  5835  001250  2980               	incf	___flmul@bexp& (0+255),w,b
  5836  001252  A4D8               	btfss	status,2,c
  5837  001254  EF2E  F009         	goto	u4001
  5838  001258  EF30  F009         	goto	u4000
  5839  00125C                     u4001:
  5840  00125C  EF38  F009         	goto	l3961
  5841  001260                     u4000:
  5842  001260                     
  5843                           ; BSR set to: 0
  5844  001260  0E00               	movlw	0
  5845  001262  6F6E               	movwf	___flmul@b& (0+255),b
  5846  001264  0E00               	movlw	0
  5847  001266  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  5848  001268  0E00               	movlw	0
  5849  00126A  6F70               	movwf	(___flmul@b+2)& (0+255),b
  5850  00126C  0E00               	movlw	0
  5851  00126E  6F71               	movwf	(___flmul@b+3)& (0+255),b
  5852  001270                     l3961:
  5853                           
  5854                           ; BSR set to: 0
  5855  001270  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  5856  001272  EF43  F009         	goto	l3965
  5857  001276                     l3963:
  5858                           
  5859                           ; BSR set to: 0
  5860  001276  0E00               	movlw	0
  5861  001278  6F6E               	movwf	___flmul@b& (0+255),b
  5862  00127A  0E00               	movlw	0
  5863  00127C  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  5864  00127E  0E00               	movlw	0
  5865  001280  6F70               	movwf	(___flmul@b+2)& (0+255),b
  5866  001282  0E00               	movlw	0
  5867  001284  6F71               	movwf	(___flmul@b+3)& (0+255),b
  5868  001286                     l3965:
  5869                           
  5870                           ; BSR set to: 0
  5871  001286  5175               	movf	(___flmul@a+3)& (0+255),w,b
  5872  001288  0B80               	andlw	128
  5873  00128A  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  5874  00128C                     
  5875                           ; BSR set to: 0
  5876  00128C  5175               	movf	(___flmul@a+3)& (0+255),w,b
  5877  00128E  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  5878  001290  6F7F               	movwf	___flmul@aexp& (0+255),b
  5879  001292                     
  5880                           ; BSR set to: 0
  5881  001292  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  5882  001294  EF4E  F009         	goto	u4011
  5883  001298  EF50  F009         	goto	u4010
  5884  00129C                     u4011:
  5885  00129C  EF51  F009         	goto	l3973
  5886  0012A0                     u4010:
  5887  0012A0                     
  5888                           ; BSR set to: 0
  5889  0012A0  817F               	bsf	___flmul@aexp& (0+255),0,b
  5890  0012A2                     l3973:
  5891                           
  5892                           ; BSR set to: 0
  5893  0012A2  517F               	movf	___flmul@aexp& (0+255),w,b
  5894  0012A4  B4D8               	btfsc	status,2,c
  5895  0012A6  EF57  F009         	goto	u4021
  5896  0012AA  EF59  F009         	goto	u4020
  5897  0012AE                     u4021:
  5898  0012AE  EF6C  F009         	goto	l3981
  5899  0012B2                     u4020:
  5900  0012B2                     
  5901                           ; BSR set to: 0
  5902  0012B2  297F               	incf	___flmul@aexp& (0+255),w,b
  5903  0012B4  A4D8               	btfss	status,2,c
  5904  0012B6  EF5F  F009         	goto	u4031
  5905  0012BA  EF61  F009         	goto	u4030
  5906  0012BE                     u4031:
  5907  0012BE  EF69  F009         	goto	l3979
  5908  0012C2                     u4030:
  5909  0012C2                     
  5910                           ; BSR set to: 0
  5911  0012C2  0E00               	movlw	0
  5912  0012C4  6F72               	movwf	___flmul@a& (0+255),b
  5913  0012C6  0E00               	movlw	0
  5914  0012C8  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5915  0012CA  0E00               	movlw	0
  5916  0012CC  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5917  0012CE  0E00               	movlw	0
  5918  0012D0  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5919  0012D2                     l3979:
  5920                           
  5921                           ; BSR set to: 0
  5922  0012D2  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  5923  0012D4  EF74  F009         	goto	l1008
  5924  0012D8                     l3981:
  5925                           
  5926                           ; BSR set to: 0
  5927  0012D8  0E00               	movlw	0
  5928  0012DA  6F72               	movwf	___flmul@a& (0+255),b
  5929  0012DC  0E00               	movlw	0
  5930  0012DE  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5931  0012E0  0E00               	movlw	0
  5932  0012E2  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5933  0012E4  0E00               	movlw	0
  5934  0012E6  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5935  0012E8                     l1008:
  5936                           
  5937                           ; BSR set to: 0
  5938  0012E8  517F               	movf	___flmul@aexp& (0+255),w,b
  5939  0012EA  B4D8               	btfsc	status,2,c
  5940  0012EC  EF7A  F009         	goto	u4041
  5941  0012F0  EF7C  F009         	goto	u4040
  5942  0012F4                     u4041:
  5943  0012F4  EF84  F009         	goto	l3985
  5944  0012F8                     u4040:
  5945  0012F8                     
  5946                           ; BSR set to: 0
  5947  0012F8  5180               	movf	___flmul@bexp& (0+255),w,b
  5948  0012FA  A4D8               	btfss	status,2,c
  5949  0012FC  EF82  F009         	goto	u4051
  5950  001300  EF84  F009         	goto	u4050
  5951  001304                     u4051:
  5952  001304  EF8E  F009         	goto	l3989
  5953  001308                     u4050:
  5954  001308                     l3985:
  5955                           
  5956                           ; BSR set to: 0
  5957  001308  0E00               	movlw	0
  5958  00130A  6F6E               	movwf	?___flmul& (0+255),b
  5959  00130C  0E00               	movlw	0
  5960  00130E  6F6F               	movwf	(?___flmul+1)& (0+255),b
  5961  001310  0E00               	movlw	0
  5962  001312  6F70               	movwf	(?___flmul+2)& (0+255),b
  5963  001314  0E00               	movlw	0
  5964  001316  6F71               	movwf	(?___flmul+3)& (0+255),b
  5965  001318  EF26  F00B         	goto	l1012
  5966  00131C                     l3989:
  5967                           
  5968                           ; BSR set to: 0
  5969  00131C  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5970  00131E  036E               	mulwf	___flmul@b& (0+255),b
  5971  001320  CFF3 F085          	movff	prodl,___flmul@temp
  5972  001324  CFF4 F086          	movff	prodh,___flmul@temp+1
  5973  001328                     
  5974                           ; BSR set to: 0
  5975  001328  5185               	movf	___flmul@temp& (0+255),w,b
  5976  00132A  6F7B               	movwf	___flmul@grs& (0+255),b
  5977  00132C  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
  5978  00132E  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
  5979  001330  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
  5980  001332                     
  5981                           ; BSR set to: 0
  5982  001332  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5983  001334  6F81               	movwf	___flmul@prod& (0+255),b
  5984  001336  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  5985  001338  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  5986  00133A  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  5987  00133C  5173               	movf	(___flmul@a+1)& (0+255),w,b
  5988  00133E  036F               	mulwf	(___flmul@b+1)& (0+255),b
  5989  001340  CFF3 F085          	movff	prodl,___flmul@temp
  5990  001344  CFF4 F086          	movff	prodh,___flmul@temp+1
  5991  001348                     
  5992                           ; BSR set to: 0
  5993  001348  5185               	movf	___flmul@temp& (0+255),w,b
  5994  00134A  277B               	addwf	___flmul@grs& (0+255),f,b
  5995  00134C  0E00               	movlw	0
  5996  00134E  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5997  001350  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5998  001352  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5999  001354                     
  6000                           ; BSR set to: 0
  6001  001354  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6002  001356  2781               	addwf	___flmul@prod& (0+255),f,b
  6003  001358  0E00               	movlw	0
  6004  00135A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6005  00135C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6006  00135E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6007  001360  5172               	movf	___flmul@a& (0+255),w,b
  6008  001362  0370               	mulwf	(___flmul@b+2)& (0+255),b
  6009  001364  CFF3 F085          	movff	prodl,___flmul@temp
  6010  001368  CFF4 F086          	movff	prodh,___flmul@temp+1
  6011  00136C                     
  6012                           ; BSR set to: 0
  6013  00136C  5185               	movf	___flmul@temp& (0+255),w,b
  6014  00136E  277B               	addwf	___flmul@grs& (0+255),f,b
  6015  001370  0E00               	movlw	0
  6016  001372  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6017  001374  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6018  001376  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6019  001378                     
  6020                           ; BSR set to: 0
  6021  001378  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6022  00137A  2781               	addwf	___flmul@prod& (0+255),f,b
  6023  00137C  0E00               	movlw	0
  6024  00137E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6025  001380  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6026  001382  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6027  001384                     
  6028                           ; BSR set to: 0
  6029  001384  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  6030  001388  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  6031  00138C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  6032  001390  6B7B               	clrf	___flmul@grs& (0+255),b
  6033  001392                     
  6034                           ; BSR set to: 0
  6035  001392  5172               	movf	___flmul@a& (0+255),w,b
  6036  001394  036F               	mulwf	(___flmul@b+1)& (0+255),b
  6037  001396  CFF3 F085          	movff	prodl,___flmul@temp
  6038  00139A  CFF4 F086          	movff	prodh,___flmul@temp+1
  6039  00139E                     
  6040                           ; BSR set to: 0
  6041  00139E  5185               	movf	___flmul@temp& (0+255),w,b
  6042  0013A0  277B               	addwf	___flmul@grs& (0+255),f,b
  6043  0013A2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6044  0013A4  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6045  0013A6  0E00               	movlw	0
  6046  0013A8  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6047  0013AA  0E00               	movlw	0
  6048  0013AC  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6049  0013AE                     
  6050                           ; BSR set to: 0
  6051  0013AE  5173               	movf	(___flmul@a+1)& (0+255),w,b
  6052  0013B0  036E               	mulwf	___flmul@b& (0+255),b
  6053  0013B2  CFF3 F085          	movff	prodl,___flmul@temp
  6054  0013B6  CFF4 F086          	movff	prodh,___flmul@temp+1
  6055  0013BA                     
  6056                           ; BSR set to: 0
  6057  0013BA  5185               	movf	___flmul@temp& (0+255),w,b
  6058  0013BC  277B               	addwf	___flmul@grs& (0+255),f,b
  6059  0013BE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6060  0013C0  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6061  0013C2  0E00               	movlw	0
  6062  0013C4  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6063  0013C6  0E00               	movlw	0
  6064  0013C8  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6065  0013CA                     
  6066                           ; BSR set to: 0
  6067  0013CA  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  6068  0013CE  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  6069  0013D2  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  6070  0013D6  6B7B               	clrf	___flmul@grs& (0+255),b
  6071  0013D8  5172               	movf	___flmul@a& (0+255),w,b
  6072  0013DA  036E               	mulwf	___flmul@b& (0+255),b
  6073  0013DC  CFF3 F085          	movff	prodl,___flmul@temp
  6074  0013E0  CFF4 F086          	movff	prodh,___flmul@temp+1
  6075  0013E4                     
  6076                           ; BSR set to: 0
  6077  0013E4  5185               	movf	___flmul@temp& (0+255),w,b
  6078  0013E6  277B               	addwf	___flmul@grs& (0+255),f,b
  6079  0013E8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6080  0013EA  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6081  0013EC  0E00               	movlw	0
  6082  0013EE  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6083  0013F0  0E00               	movlw	0
  6084  0013F2  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6085  0013F4                     
  6086                           ; BSR set to: 0
  6087  0013F4  5174               	movf	(___flmul@a+2)& (0+255),w,b
  6088  0013F6  036F               	mulwf	(___flmul@b+1)& (0+255),b
  6089  0013F8  CFF3 F085          	movff	prodl,___flmul@temp
  6090  0013FC  CFF4 F086          	movff	prodh,___flmul@temp+1
  6091  001400  5185               	movf	___flmul@temp& (0+255),w,b
  6092  001402  2781               	addwf	___flmul@prod& (0+255),f,b
  6093  001404  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6094  001406  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6095  001408  0E00               	movlw	0
  6096  00140A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6097  00140C  0E00               	movlw	0
  6098  00140E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6099  001410                     
  6100                           ; BSR set to: 0
  6101  001410  5173               	movf	(___flmul@a+1)& (0+255),w,b
  6102  001412  0370               	mulwf	(___flmul@b+2)& (0+255),b
  6103  001414  CFF3 F085          	movff	prodl,___flmul@temp
  6104  001418  CFF4 F086          	movff	prodh,___flmul@temp+1
  6105  00141C                     
  6106                           ; BSR set to: 0
  6107  00141C  5185               	movf	___flmul@temp& (0+255),w,b
  6108  00141E  2781               	addwf	___flmul@prod& (0+255),f,b
  6109  001420  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6110  001422  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6111  001424  0E00               	movlw	0
  6112  001426  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6113  001428  0E00               	movlw	0
  6114  00142A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6115  00142C  5174               	movf	(___flmul@a+2)& (0+255),w,b
  6116  00142E  0370               	mulwf	(___flmul@b+2)& (0+255),b
  6117  001430  CFF3 F085          	movff	prodl,___flmul@temp
  6118  001434  CFF4 F086          	movff	prodh,___flmul@temp+1
  6119  001438                     
  6120                           ; BSR set to: 0
  6121  001438  5185               	movf	___flmul@temp& (0+255),w,b
  6122  00143A  6F76               	movwf	??___flmul& (0+255),b
  6123  00143C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6124  00143E  6F77               	movwf	(??___flmul+1)& (0+255),b
  6125  001440  6B78               	clrf	(??___flmul+2)& (0+255),b
  6126  001442  6B79               	clrf	(??___flmul+3)& (0+255),b
  6127  001444  C078  F079         	movff	??___flmul+2,??___flmul+3
  6128  001448  C077  F078         	movff	??___flmul+1,??___flmul+2
  6129  00144C  C076  F077         	movff	??___flmul,??___flmul+1
  6130  001450  6B76               	clrf	??___flmul& (0+255),b
  6131  001452  5176               	movf	??___flmul& (0+255),w,b
  6132  001454  2781               	addwf	___flmul@prod& (0+255),f,b
  6133  001456  5177               	movf	(??___flmul+1)& (0+255),w,b
  6134  001458  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6135  00145A  5178               	movf	(??___flmul+2)& (0+255),w,b
  6136  00145C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6137  00145E  5179               	movf	(??___flmul+3)& (0+255),w,b
  6138  001460  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6139  001462                     
  6140                           ; BSR set to: 0
  6141  001462  C07B  F076         	movff	___flmul@grs,??___flmul
  6142  001466  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
  6143  00146A  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
  6144  00146E  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
  6145  001472  0E19               	movlw	25
  6146  001474  EF41  F00A         	goto	u4060
  6147  001478                     u4065:
  6148  001478  90D8               	bcf	status,0,c
  6149  00147A  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  6150  00147C  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  6151  00147E  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  6152  001480  3376               	rrcf	??___flmul& (0+255),f,b
  6153  001482                     u4060:
  6154  001482  2EE8               	decfsz	wreg,f,c
  6155  001484  EF3C  F00A         	goto	u4065
  6156  001488  5176               	movf	??___flmul& (0+255),w,b
  6157  00148A  2781               	addwf	___flmul@prod& (0+255),f,b
  6158  00148C  5177               	movf	(??___flmul+1)& (0+255),w,b
  6159  00148E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6160  001490  5178               	movf	(??___flmul+2)& (0+255),w,b
  6161  001492  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6162  001494  5179               	movf	(??___flmul+3)& (0+255),w,b
  6163  001496  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6164  001498                     
  6165                           ; BSR set to: 0
  6166  001498  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  6167  00149C  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  6168  0014A0  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  6169  0014A4  6B7B               	clrf	___flmul@grs& (0+255),b
  6170  0014A6                     
  6171                           ; BSR set to: 0
  6172  0014A6  517F               	movf	___flmul@aexp& (0+255),w,b
  6173  0014A8  C080  F076         	movff	___flmul@bexp,??___flmul
  6174  0014AC  6B77               	clrf	(??___flmul+1)& (0+255),b
  6175  0014AE  2776               	addwf	??___flmul& (0+255),f,b
  6176  0014B0  0E00               	movlw	0
  6177  0014B2  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  6178  0014B4  0E82               	movlw	130
  6179  0014B6  2576               	addwf	??___flmul& (0+255),w,b
  6180  0014B8  6F85               	movwf	___flmul@temp& (0+255),b
  6181  0014BA  0EFF               	movlw	255
  6182  0014BC  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  6183  0014BE  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  6184  0014C0  EF77  F00A         	goto	l4037
  6185  0014C4                     l4031:
  6186                           
  6187                           ; BSR set to: 0
  6188  0014C4  90D8               	bcf	status,0,c
  6189  0014C6  3781               	rlcf	___flmul@prod& (0+255),f,b
  6190  0014C8  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6191  0014CA  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6192  0014CC  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6193  0014CE                     
  6194                           ; BSR set to: 0
  6195  0014CE  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  6196  0014D0  EF6C  F00A         	goto	u4071
  6197  0014D4  EF6E  F00A         	goto	u4070
  6198  0014D8                     u4071:
  6199  0014D8  EF6F  F00A         	goto	l1015
  6200  0014DC                     u4070:
  6201  0014DC                     
  6202                           ; BSR set to: 0
  6203  0014DC  8181               	bsf	___flmul@prod& (0+255),0,b
  6204  0014DE                     l1015:
  6205                           
  6206                           ; BSR set to: 0
  6207  0014DE  90D8               	bcf	status,0,c
  6208  0014E0  377B               	rlcf	___flmul@grs& (0+255),f,b
  6209  0014E2  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6210  0014E4  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6211  0014E6  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6212  0014E8  0785               	decf	___flmul@temp& (0+255),f,b
  6213  0014EA  A0D8               	btfss	status,0,c
  6214  0014EC  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  6215  0014EE                     l4037:
  6216                           
  6217                           ; BSR set to: 0
  6218  0014EE  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  6219  0014F0  EF7C  F00A         	goto	u4081
  6220  0014F4  EF7E  F00A         	goto	u4080
  6221  0014F8                     u4081:
  6222  0014F8  EF62  F00A         	goto	l4031
  6223  0014FC                     u4080:
  6224  0014FC                     
  6225                           ; BSR set to: 0
  6226  0014FC  0E00               	movlw	0
  6227  0014FE  6F7F               	movwf	___flmul@aexp& (0+255),b
  6228  001500                     
  6229                           ; BSR set to: 0
  6230  001500  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  6231  001502  EF85  F00A         	goto	u4091
  6232  001506  EF87  F00A         	goto	u4090
  6233  00150A                     u4091:
  6234  00150A  EFAB  F00A         	goto	l1017
  6235  00150E                     u4090:
  6236  00150E                     
  6237                           ; BSR set to: 0
  6238  00150E  0EFF               	movlw	255
  6239  001510  157B               	andwf	___flmul@grs& (0+255),w,b
  6240  001512  6F76               	movwf	??___flmul& (0+255),b
  6241  001514  0EFF               	movlw	255
  6242  001516  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
  6243  001518  6F77               	movwf	(??___flmul+1)& (0+255),b
  6244  00151A  0EFF               	movlw	255
  6245  00151C  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
  6246  00151E  6F78               	movwf	(??___flmul+2)& (0+255),b
  6247  001520  0E7F               	movlw	127
  6248  001522  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
  6249  001524  6F79               	movwf	(??___flmul+3)& (0+255),b
  6250  001526  5176               	movf	??___flmul& (0+255),w,b
  6251  001528  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  6252  00152A  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  6253  00152C  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  6254  00152E  B4D8               	btfsc	status,2,c
  6255  001530  EF9C  F00A         	goto	u4101
  6256  001534  EF9E  F00A         	goto	u4100
  6257  001538                     u4101:
  6258  001538  EFA2  F00A         	goto	l1018
  6259  00153C                     u4100:
  6260  00153C                     l4045:
  6261                           
  6262                           ; BSR set to: 0
  6263  00153C  0E01               	movlw	1
  6264  00153E  6F7F               	movwf	___flmul@aexp& (0+255),b
  6265  001540  EFAB  F00A         	goto	l1017
  6266  001544                     l1018:
  6267                           
  6268                           ; BSR set to: 0
  6269  001544  A181               	btfss	___flmul@prod& (0+255),0,b
  6270  001546  EFA7  F00A         	goto	u4111
  6271  00154A  EFA9  F00A         	goto	u4110
  6272  00154E                     u4111:
  6273  00154E  EFAB  F00A         	goto	l1017
  6274  001552                     u4110:
  6275  001552  EF9E  F00A         	goto	l4045
  6276  001556                     l1017:
  6277                           
  6278                           ; BSR set to: 0
  6279  001556  517F               	movf	___flmul@aexp& (0+255),w,b
  6280  001558  B4D8               	btfsc	status,2,c
  6281  00155A  EFB1  F00A         	goto	u4121
  6282  00155E  EFB3  F00A         	goto	u4120
  6283  001562                     u4121:
  6284  001562  EFD7  F00A         	goto	l4057
  6285  001566                     u4120:
  6286  001566                     
  6287                           ; BSR set to: 0
  6288  001566  0E01               	movlw	1
  6289  001568  2781               	addwf	___flmul@prod& (0+255),f,b
  6290  00156A  0E00               	movlw	0
  6291  00156C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6292  00156E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6293  001570  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6294  001572                     
  6295                           ; BSR set to: 0
  6296  001572  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  6297  001574  EFBE  F00A         	goto	u4131
  6298  001578  EFC0  F00A         	goto	u4130
  6299  00157C                     u4131:
  6300  00157C  EFD7  F00A         	goto	l4057
  6301  001580                     u4130:
  6302  001580                     
  6303                           ; BSR set to: 0
  6304  001580  C081  F076         	movff	___flmul@prod,??___flmul
  6305  001584  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  6306  001588  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  6307  00158C  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  6308  001590  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  6309  001592  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  6310  001594  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  6311  001596  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  6312  001598  3376               	rrcf	??___flmul& (0+255),f,b
  6313  00159A  C076  F081         	movff	??___flmul,___flmul@prod
  6314  00159E  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  6315  0015A2  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  6316  0015A6  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  6317  0015AA                     
  6318                           ; BSR set to: 0
  6319  0015AA  4B85               	infsnz	___flmul@temp& (0+255),f,b
  6320  0015AC  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  6321  0015AE                     l4057:
  6322                           
  6323                           ; BSR set to: 0
  6324  0015AE  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6325  0015B0  EFE2  F00A         	goto	u4141
  6326  0015B4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6327  0015B6  E108               	bnz	u4140
  6328  0015B8  2985               	incf	___flmul@temp& (0+255),w,b
  6329  0015BA  A0D8               	btfss	status,0,c
  6330  0015BC  EFE2  F00A         	goto	u4141
  6331  0015C0  EFE4  F00A         	goto	u4140
  6332  0015C4                     u4141:
  6333  0015C4  EFEE  F00A         	goto	l4061
  6334  0015C8                     u4140:
  6335  0015C8                     
  6336                           ; BSR set to: 0
  6337  0015C8  0E00               	movlw	0
  6338  0015CA  6F81               	movwf	___flmul@prod& (0+255),b
  6339  0015CC  0E00               	movlw	0
  6340  0015CE  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  6341  0015D0  0E80               	movlw	128
  6342  0015D2  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  6343  0015D4  0E7F               	movlw	127
  6344  0015D6  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6345  0015D8  EF1C  F00B         	goto	l4073
  6346  0015DC                     l4061:
  6347                           
  6348                           ; BSR set to: 0
  6349  0015DC  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6350  0015DE  EFFB  F00A         	goto	u4150
  6351  0015E2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6352  0015E4  E106               	bnz	u4151
  6353  0015E6  0585               	decf	___flmul@temp& (0+255),w,b
  6354  0015E8  B0D8               	btfsc	status,0,c
  6355  0015EA  EFF9  F00A         	goto	u4151
  6356  0015EE  EFFB  F00A         	goto	u4150
  6357  0015F2                     u4151:
  6358  0015F2  EF07  F00B         	goto	l1025
  6359  0015F6                     u4150:
  6360  0015F6                     
  6361                           ; BSR set to: 0
  6362  0015F6  0E00               	movlw	0
  6363  0015F8  6F81               	movwf	___flmul@prod& (0+255),b
  6364  0015FA  0E00               	movlw	0
  6365  0015FC  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  6366  0015FE  0E00               	movlw	0
  6367  001600  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  6368  001602  0E00               	movlw	0
  6369  001604  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6370  001606  0E00               	movlw	0
  6371  001608  6F7A               	movwf	___flmul@sign& (0+255),b
  6372  00160A  EF1C  F00B         	goto	l4073
  6373  00160E                     l1025:
  6374                           
  6375                           ; BSR set to: 0
  6376  00160E  C085  F080         	movff	___flmul@temp,___flmul@bexp
  6377  001612                     
  6378                           ; BSR set to: 0
  6379  001612  0EFF               	movlw	255
  6380  001614  1781               	andwf	___flmul@prod& (0+255),f,b
  6381  001616  0EFF               	movlw	255
  6382  001618  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  6383  00161A  0E7F               	movlw	127
  6384  00161C  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  6385  00161E  0E00               	movlw	0
  6386  001620  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  6387  001622                     
  6388                           ; BSR set to: 0
  6389  001622  A180               	btfss	___flmul@bexp& (0+255),0,b
  6390  001624  EF16  F00B         	goto	u4161
  6391  001628  EF18  F00B         	goto	u4160
  6392  00162C                     u4161:
  6393  00162C  EF19  F00B         	goto	l4071
  6394  001630                     u4160:
  6395  001630                     
  6396                           ; BSR set to: 0
  6397  001630  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  6398  001632                     l4071:
  6399                           
  6400                           ; BSR set to: 0
  6401  001632  90D8               	bcf	status,0,c
  6402  001634  3180               	rrcf	___flmul@bexp& (0+255),w,b
  6403  001636  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6404  001638                     l4073:
  6405                           
  6406                           ; BSR set to: 0
  6407  001638  517A               	movf	___flmul@sign& (0+255),w,b
  6408  00163A  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6409  00163C                     
  6410                           ; BSR set to: 0
  6411  00163C  C081  F06E         	movff	___flmul@prod,?___flmul
  6412  001640  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  6413  001644  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  6414  001648  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  6415  00164C                     l1012:
  6416                           
  6417                           ; BSR set to: 0
  6418  00164C  0012               	return		;funcret
  6419  00164E                     __end_of___flmul:
  6420                           	callstack 0
  6421                           
  6422 ;; *************** function ___flge *****************
  6423 ;; Defined at:
  6424 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  ff1             4    0[BANK0 ] unsigned char 
  6427 ;;  ff2             4    4[BANK0 ] unsigned char 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;		None               void
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6439 ;;      Params:         0       8       0       0       0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6441 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6442 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6443 ;;Total ram usage:       12 bytes
  6444 ;; Hardware stack levels used: 1
  6445 ;; Hardware stack levels required when called: 5
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_roundf
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text26
  6454  003294                     __ptext26:
  6455                           	callstack 0
  6456  003294                     ___flge:
  6457                           	callstack 22
  6458  003294  0E00               	movlw	0
  6459  003296  0100               	movlb	0	; () banked
  6460  003298  1560               	andwf	___flge@ff1& (0+255),w,b
  6461  00329A  6F68               	movwf	??___flge& (0+255),b
  6462  00329C  0E00               	movlw	0
  6463  00329E  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  6464  0032A0  6F69               	movwf	(??___flge+1)& (0+255),b
  6465  0032A2  0E80               	movlw	128
  6466  0032A4  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  6467  0032A6  6F6A               	movwf	(??___flge+2)& (0+255),b
  6468  0032A8  0E7F               	movlw	127
  6469  0032AA  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  6470  0032AC  6F6B               	movwf	(??___flge+3)& (0+255),b
  6471  0032AE  5168               	movf	??___flge& (0+255),w,b
  6472  0032B0  1169               	iorwf	(??___flge+1)& (0+255),w,b
  6473  0032B2  116A               	iorwf	(??___flge+2)& (0+255),w,b
  6474  0032B4  116B               	iorwf	(??___flge+3)& (0+255),w,b
  6475  0032B6  A4D8               	btfss	status,2,c
  6476  0032B8  EF60  F019         	goto	u4171
  6477  0032BC  EF62  F019         	goto	u4170
  6478  0032C0                     u4171:
  6479  0032C0  EF6A  F019         	goto	l4089
  6480  0032C4                     u4170:
  6481  0032C4                     
  6482                           ; BSR set to: 0
  6483  0032C4  0E00               	movlw	0
  6484  0032C6  6F60               	movwf	___flge@ff1& (0+255),b
  6485  0032C8  0E00               	movlw	0
  6486  0032CA  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  6487  0032CC  0E00               	movlw	0
  6488  0032CE  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  6489  0032D0  0E00               	movlw	0
  6490  0032D2  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  6491  0032D4                     l4089:
  6492                           
  6493                           ; BSR set to: 0
  6494  0032D4  0E00               	movlw	0
  6495  0032D6  1564               	andwf	___flge@ff2& (0+255),w,b
  6496  0032D8  6F68               	movwf	??___flge& (0+255),b
  6497  0032DA  0E00               	movlw	0
  6498  0032DC  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  6499  0032DE  6F69               	movwf	(??___flge+1)& (0+255),b
  6500  0032E0  0E80               	movlw	128
  6501  0032E2  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  6502  0032E4  6F6A               	movwf	(??___flge+2)& (0+255),b
  6503  0032E6  0E7F               	movlw	127
  6504  0032E8  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  6505  0032EA  6F6B               	movwf	(??___flge+3)& (0+255),b
  6506  0032EC  5168               	movf	??___flge& (0+255),w,b
  6507  0032EE  1169               	iorwf	(??___flge+1)& (0+255),w,b
  6508  0032F0  116A               	iorwf	(??___flge+2)& (0+255),w,b
  6509  0032F2  116B               	iorwf	(??___flge+3)& (0+255),w,b
  6510  0032F4  A4D8               	btfss	status,2,c
  6511  0032F6  EF7F  F019         	goto	u4181
  6512  0032FA  EF81  F019         	goto	u4180
  6513  0032FE                     u4181:
  6514  0032FE  EF89  F019         	goto	l4093
  6515  003302                     u4180:
  6516  003302                     
  6517                           ; BSR set to: 0
  6518  003302  0E00               	movlw	0
  6519  003304  6F64               	movwf	___flge@ff2& (0+255),b
  6520  003306  0E00               	movlw	0
  6521  003308  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  6522  00330A  0E00               	movlw	0
  6523  00330C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  6524  00330E  0E00               	movlw	0
  6525  003310  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  6526  003312                     l4093:
  6527                           
  6528                           ; BSR set to: 0
  6529  003312  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  6530  003314  EF8E  F019         	goto	u4191
  6531  003318  EF90  F019         	goto	u4190
  6532  00331C                     u4191:
  6533  00331C  EF99  F019         	goto	l4097
  6534  003320                     u4190:
  6535  003320                     
  6536                           ; BSR set to: 0
  6537  003320  6D60               	negf	___flge@ff1& (0+255),b
  6538  003322  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
  6539  003324  B0D8               	btfsc	status,0,c
  6540  003326  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
  6541  003328  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
  6542  00332A  B0D8               	btfsc	status,0,c
  6543  00332C  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
  6544  00332E  0E80               	movlw	128
  6545  003330  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6546  003332                     l4097:
  6547                           
  6548                           ; BSR set to: 0
  6549  003332  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  6550  003334  EF9E  F019         	goto	u4201
  6551  003338  EFA0  F019         	goto	u4200
  6552  00333C                     u4201:
  6553  00333C  EFA9  F019         	goto	l659
  6554  003340                     u4200:
  6555  003340                     
  6556                           ; BSR set to: 0
  6557  003340  6D64               	negf	___flge@ff2& (0+255),b
  6558  003342  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
  6559  003344  B0D8               	btfsc	status,0,c
  6560  003346  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
  6561  003348  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
  6562  00334A  B0D8               	btfsc	status,0,c
  6563  00334C  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
  6564  00334E  0E80               	movlw	128
  6565  003350  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6566  003352                     l659:
  6567                           
  6568                           ; BSR set to: 0
  6569  003352  0E00               	movlw	0
  6570  003354  1B60               	xorwf	___flge@ff1& (0+255),f,b
  6571  003356  0E00               	movlw	0
  6572  003358  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6573  00335A  0E00               	movlw	0
  6574  00335C  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6575  00335E  0E80               	movlw	128
  6576  003360  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6577  003362  0E00               	movlw	0
  6578  003364  1B64               	xorwf	___flge@ff2& (0+255),f,b
  6579  003366  0E00               	movlw	0
  6580  003368  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6581  00336A  0E00               	movlw	0
  6582  00336C  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6583  00336E  0E80               	movlw	128
  6584  003370  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6585  003372  5164               	movf	___flge@ff2& (0+255),w,b
  6586  003374  5D60               	subwf	___flge@ff1& (0+255),w,b
  6587  003376  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  6588  003378  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6589  00337A  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  6590  00337C  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6591  00337E  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  6592  003380  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6593  003382  B0D8               	btfsc	status,0,c
  6594  003384  EFC6  F019         	goto	u4211
  6595  003388  EFC8  F019         	goto	u4210
  6596  00338C                     u4211:
  6597  00338C  EFCB  F019         	goto	l4103
  6598  003390                     u4210:
  6599  003390                     
  6600                           ; BSR set to: 0
  6601  003390  90D8               	bcf	status,0,c
  6602  003392  EFCC  F019         	goto	l664
  6603  003396                     l4103:
  6604                           
  6605                           ; BSR set to: 0
  6606  003396  80D8               	bsf	status,0,c
  6607  003398                     l664:
  6608                           
  6609                           ; BSR set to: 0
  6610  003398  0012               	return		;funcret
  6611  00339A                     __end_of___flge:
  6612                           	callstack 0
  6613                           
  6614 ;; *************** function ___xxtofl *****************
  6615 ;; Defined at:
  6616 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  sign            1    wreg     unsigned char 
  6619 ;;  val             4    0[BANK0 ] long 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  sign            1    8[BANK0 ] unsigned char 
  6622 ;;  arg             4   10[BANK0 ] unsigned long 
  6623 ;;  exp             1    9[BANK0 ] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  4    0[BANK0 ] unsigned char 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6633 ;;      Params:         0       4       0       0       0       0       0       0       0
  6634 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6635 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6636 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6637 ;;Total ram usage:       14 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 5
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_convert_temp
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text27
  6648  002858                     __ptext27:
  6649                           	callstack 0
  6650  002858                     ___xxtofl:
  6651                           	callstack 23
  6652                           
  6653                           ; BSR set to: 0
  6654                           ;incstack = 0
  6655                           ;___xxtofl@sign stored from wreg
  6656  002858  0100               	movlb	0	; () banked
  6657  00285A  6F68               	movwf	___xxtofl@sign& (0+255),b
  6658  00285C  0100               	movlb	0	; () banked
  6659  00285E  5168               	movf	___xxtofl@sign& (0+255),w,b
  6660  002860  B4D8               	btfsc	status,2,c
  6661  002862  EF35  F014         	goto	u5081
  6662  002866  EF37  F014         	goto	u5080
  6663  00286A                     u5081:
  6664  00286A  EF59  F014         	goto	l1049
  6665  00286E                     u5080:
  6666  00286E                     
  6667                           ; BSR set to: 0
  6668  00286E  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  6669  002870  EF3E  F014         	goto	u5090
  6670  002874  EF3C  F014         	goto	u5091
  6671  002878                     u5091:
  6672  002878  EF59  F014         	goto	l1049
  6673  00287C                     u5090:
  6674  00287C                     
  6675                           ; BSR set to: 0
  6676  00287C  C060  F064         	movff	___xxtofl@val,??___xxtofl
  6677  002880  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  6678  002884  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  6679  002888  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  6680  00288C  1F64               	comf	??___xxtofl& (0+255),f,b
  6681  00288E  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  6682  002890  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  6683  002892  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  6684  002894  2B64               	incf	??___xxtofl& (0+255),f,b
  6685  002896  0E00               	movlw	0
  6686  002898  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6687  00289A  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6688  00289C  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6689  00289E  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  6690  0028A2  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  6691  0028A6  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  6692  0028AA  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  6693  0028AE  EF61  F014         	goto	l4675
  6694  0028B2                     l1049:
  6695                           
  6696                           ; BSR set to: 0
  6697  0028B2  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  6698  0028B6  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6699  0028BA  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6700  0028BE  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6701  0028C2                     l4675:
  6702                           
  6703                           ; BSR set to: 0
  6704  0028C2  5160               	movf	___xxtofl@val& (0+255),w,b
  6705  0028C4  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6706  0028C6  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6707  0028C8  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6708  0028CA  A4D8               	btfss	status,2,c
  6709  0028CC  EF6A  F014         	goto	u5101
  6710  0028D0  EF6C  F014         	goto	u5100
  6711  0028D4                     u5101:
  6712  0028D4  EF76  F014         	goto	l4681
  6713  0028D8                     u5100:
  6714  0028D8                     
  6715                           ; BSR set to: 0
  6716  0028D8  0E00               	movlw	0
  6717  0028DA  6F60               	movwf	?___xxtofl& (0+255),b
  6718  0028DC  0E00               	movlw	0
  6719  0028DE  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  6720  0028E0  0E00               	movlw	0
  6721  0028E2  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  6722  0028E4  0E00               	movlw	0
  6723  0028E6  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  6724  0028E8  EF07  F015         	goto	l1052
  6725  0028EC                     l4681:
  6726                           
  6727                           ; BSR set to: 0
  6728  0028EC  0E96               	movlw	150
  6729  0028EE  6F69               	movwf	___xxtofl@exp& (0+255),b
  6730  0028F0  EF80  F014         	goto	l4685
  6731  0028F4                     l4683:
  6732                           
  6733                           ; BSR set to: 0
  6734  0028F4  2B69               	incf	___xxtofl@exp& (0+255),f,b
  6735  0028F6  90D8               	bcf	status,0,c
  6736  0028F8  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6737  0028FA  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6738  0028FC  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6739  0028FE  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  6740  002900                     l4685:
  6741                           
  6742                           ; BSR set to: 0
  6743  002900  0E00               	movlw	0
  6744  002902  156A               	andwf	___xxtofl@arg& (0+255),w,b
  6745  002904  6F64               	movwf	??___xxtofl& (0+255),b
  6746  002906  0E00               	movlw	0
  6747  002908  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6748  00290A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  6749  00290C  0E00               	movlw	0
  6750  00290E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6751  002910  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  6752  002912  0EFE               	movlw	254
  6753  002914  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6754  002916  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  6755  002918  5164               	movf	??___xxtofl& (0+255),w,b
  6756  00291A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6757  00291C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6758  00291E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6759  002920  A4D8               	btfss	status,2,c
  6760  002922  EF95  F014         	goto	u5111
  6761  002926  EF97  F014         	goto	u5110
  6762  00292A                     u5111:
  6763  00292A  EF7A  F014         	goto	l4683
  6764  00292E                     u5110:
  6765  00292E  EFA5  F014         	goto	l1056
  6766  002932                     l4687:
  6767                           
  6768                           ; BSR set to: 0
  6769  002932  2B69               	incf	___xxtofl@exp& (0+255),f,b
  6770  002934                     
  6771                           ; BSR set to: 0
  6772  002934  0E01               	movlw	1
  6773  002936  276A               	addwf	___xxtofl@arg& (0+255),f,b
  6774  002938  0E00               	movlw	0
  6775  00293A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6776  00293C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6777  00293E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6778  002940                     
  6779                           ; BSR set to: 0
  6780  002940  90D8               	bcf	status,0,c
  6781  002942  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6782  002944  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6783  002946  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6784  002948  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  6785  00294A                     l1056:
  6786                           
  6787                           ; BSR set to: 0
  6788  00294A  0E00               	movlw	0
  6789  00294C  156A               	andwf	___xxtofl@arg& (0+255),w,b
  6790  00294E  6F64               	movwf	??___xxtofl& (0+255),b
  6791  002950  0E00               	movlw	0
  6792  002952  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6793  002954  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  6794  002956  0E00               	movlw	0
  6795  002958  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6796  00295A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  6797  00295C  0EFF               	movlw	255
  6798  00295E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6799  002960  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  6800  002962  5164               	movf	??___xxtofl& (0+255),w,b
  6801  002964  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6802  002966  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6803  002968  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6804  00296A  A4D8               	btfss	status,2,c
  6805  00296C  EFBA  F014         	goto	u5121
  6806  002970  EFBC  F014         	goto	u5120
  6807  002974                     u5121:
  6808  002974  EF99  F014         	goto	l4687
  6809  002978                     u5120:
  6810  002978  EFC4  F014         	goto	l4695
  6811  00297C                     l4693:
  6812                           
  6813                           ; BSR set to: 0
  6814  00297C  0769               	decf	___xxtofl@exp& (0+255),f,b
  6815  00297E  90D8               	bcf	status,0,c
  6816  002980  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  6817  002982  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6818  002984  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6819  002986  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6820  002988                     l4695:
  6821                           
  6822                           ; BSR set to: 0
  6823  002988  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6824  00298A  EFC9  F014         	goto	u5131
  6825  00298E  EFCB  F014         	goto	u5130
  6826  002992                     u5131:
  6827  002992  EFD3  F014         	goto	l1063
  6828  002996                     u5130:
  6829  002996                     
  6830                           ; BSR set to: 0
  6831  002996  0E02               	movlw	2
  6832  002998  6169               	cpfslt	___xxtofl@exp& (0+255),b
  6833  00299A  EFD1  F014         	goto	u5141
  6834  00299E  EFD3  F014         	goto	u5140
  6835  0029A2                     u5141:
  6836  0029A2  EFBE  F014         	goto	l4693
  6837  0029A6                     u5140:
  6838  0029A6                     l1063:
  6839                           
  6840                           ; BSR set to: 0
  6841  0029A6  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  6842  0029A8  EFD8  F014         	goto	u5151
  6843  0029AC  EFDA  F014         	goto	u5150
  6844  0029B0                     u5151:
  6845  0029B0  EFDB  F014         	goto	l4701
  6846  0029B4                     u5150:
  6847  0029B4                     
  6848                           ; BSR set to: 0
  6849  0029B4  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  6850  0029B6                     l4701:
  6851                           
  6852                           ; BSR set to: 0
  6853  0029B6  90D8               	bcf	status,0,c
  6854  0029B8  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  6855  0029BA                     
  6856                           ; BSR set to: 0
  6857  0029BA  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  6858  0029BE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  6859  0029C0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  6860  0029C2  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  6861  0029C4  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  6862  0029C8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  6863  0029CA  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  6864  0029CC  6B64               	clrf	??___xxtofl& (0+255),b
  6865  0029CE  5164               	movf	??___xxtofl& (0+255),w,b
  6866  0029D0  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  6867  0029D2  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  6868  0029D4  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6869  0029D6  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  6870  0029D8  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6871  0029DA  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  6872  0029DC  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6873  0029DE                     
  6874                           ; BSR set to: 0
  6875  0029DE  5168               	movf	___xxtofl@sign& (0+255),w,b
  6876  0029E0  B4D8               	btfsc	status,2,c
  6877  0029E2  EFF5  F014         	goto	u5161
  6878  0029E6  EFF7  F014         	goto	u5160
  6879  0029EA                     u5161:
  6880  0029EA  EFFF  F014         	goto	l4711
  6881  0029EE                     u5160:
  6882  0029EE                     
  6883                           ; BSR set to: 0
  6884  0029EE  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  6885  0029F0  EFFE  F014         	goto	u5170
  6886  0029F4  EFFC  F014         	goto	u5171
  6887  0029F8                     u5171:
  6888  0029F8  EFFF  F014         	goto	l4711
  6889  0029FC                     u5170:
  6890  0029FC                     
  6891                           ; BSR set to: 0
  6892  0029FC  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6893  0029FE                     l4711:
  6894                           
  6895                           ; BSR set to: 0
  6896  0029FE  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  6897  002A02  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  6898  002A06  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  6899  002A0A  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  6900  002A0E                     l1052:
  6901                           
  6902                           ; BSR set to: 0
  6903  002A0E  0012               	return		;funcret
  6904  002A10                     __end_of___xxtofl:
  6905                           	callstack 0
  6906                           
  6907 ;; *************** function ___fltol *****************
  6908 ;; Defined at:
  6909 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  f1              4   65[BANK0 ] unsigned char 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  exp1            1   74[BANK0 ] unsigned char 
  6914 ;;  sign1           1   73[BANK0 ] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  4   65[BANK0 ] long 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6924 ;;      Params:         0       4       0       0       0       0       0       0       0
  6925 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6926 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6927 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6928 ;;Total ram usage:       10 bytes
  6929 ;; Hardware stack levels used: 1
  6930 ;; Hardware stack levels required when called: 5
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_convert_temp
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text28
  6939  00318C                     __ptext28:
  6940                           	callstack 0
  6941  00318C                     ___fltol:
  6942                           	callstack 23
  6943  00318C  0100               	movlb	0	; () banked
  6944  00318E  35A3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6945  003190  35A4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6946  003192  6FAA               	movwf	___fltol@exp1& (0+255),b
  6947  003194  51AA               	movf	___fltol@exp1& (0+255),w,b
  6948  003196  A4D8               	btfss	status,2,c
  6949  003198  EFD0  F018         	goto	u5011
  6950  00319C  EFD2  F018         	goto	u5010
  6951  0031A0                     u5011:
  6952  0031A0  EFDC  F018         	goto	l4631
  6953  0031A4                     u5010:
  6954  0031A4                     l4627:
  6955                           
  6956                           ; BSR set to: 0
  6957  0031A4  0E00               	movlw	0
  6958  0031A6  6FA1               	movwf	?___fltol& (0+255),b
  6959  0031A8  0E00               	movlw	0
  6960  0031AA  6FA2               	movwf	(?___fltol+1)& (0+255),b
  6961  0031AC  0E00               	movlw	0
  6962  0031AE  6FA3               	movwf	(?___fltol+2)& (0+255),b
  6963  0031B0  0E00               	movlw	0
  6964  0031B2  6FA4               	movwf	(?___fltol+3)& (0+255),b
  6965  0031B4  EF49  F019         	goto	l691
  6966  0031B8                     l4631:
  6967                           
  6968                           ; BSR set to: 0
  6969  0031B8  C0A1  F0A5         	movff	___fltol@f1,??___fltol
  6970  0031BC  C0A2  F0A6         	movff	___fltol@f1+1,??___fltol+1
  6971  0031C0  C0A3  F0A7         	movff	___fltol@f1+2,??___fltol+2
  6972  0031C4  C0A4  F0A8         	movff	___fltol@f1+3,??___fltol+3
  6973  0031C8  0E20               	movlw	32
  6974  0031CA  EFEC  F018         	goto	u5020
  6975  0031CE                     u5025:
  6976  0031CE  90D8               	bcf	status,0,c
  6977  0031D0  33A8               	rrcf	(??___fltol+3)& (0+255),f,b
  6978  0031D2  33A7               	rrcf	(??___fltol+2)& (0+255),f,b
  6979  0031D4  33A6               	rrcf	(??___fltol+1)& (0+255),f,b
  6980  0031D6  33A5               	rrcf	??___fltol& (0+255),f,b
  6981  0031D8                     u5020:
  6982  0031D8  2EE8               	decfsz	wreg,f,c
  6983  0031DA  EFE7  F018         	goto	u5025
  6984  0031DE  51A5               	movf	??___fltol& (0+255),w,b
  6985  0031E0  6FA9               	movwf	___fltol@sign1& (0+255),b
  6986  0031E2                     
  6987                           ; BSR set to: 0
  6988  0031E2  8FA3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6989  0031E4                     
  6990                           ; BSR set to: 0
  6991  0031E4  0EFF               	movlw	255
  6992  0031E6  17A1               	andwf	___fltol@f1& (0+255),f,b
  6993  0031E8  0EFF               	movlw	255
  6994  0031EA  17A2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6995  0031EC  0EFF               	movlw	255
  6996  0031EE  17A3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6997  0031F0  0E00               	movlw	0
  6998  0031F2  17A4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6999  0031F4                     
  7000                           ; BSR set to: 0
  7001  0031F4  0E96               	movlw	150
  7002  0031F6  5FAA               	subwf	___fltol@exp1& (0+255),f,b
  7003  0031F8                     
  7004                           ; BSR set to: 0
  7005  0031F8  BFAA               	btfsc	___fltol@exp1& (0+255),7,b
  7006  0031FA  EF03  F019         	goto	u5030
  7007  0031FE  EF01  F019         	goto	u5031
  7008  003202                     u5031:
  7009  003202  EF19  F019         	goto	l4651
  7010  003206                     u5030:
  7011  003206                     
  7012                           ; BSR set to: 0
  7013  003206  51AA               	movf	___fltol@exp1& (0+255),w,b
  7014  003208  0A80               	xorlw	128
  7015  00320A  0F97               	addlw	151
  7016  00320C  B0D8               	btfsc	status,0,c
  7017  00320E  EF0B  F019         	goto	u5041
  7018  003212  EF0D  F019         	goto	u5040
  7019  003216                     u5041:
  7020  003216  EF0F  F019         	goto	l4647
  7021  00321A                     u5040:
  7022  00321A  EFD2  F018         	goto	l4627
  7023  00321E                     l4647:
  7024                           
  7025                           ; BSR set to: 0
  7026  00321E  90D8               	bcf	status,0,c
  7027  003220  33A4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7028  003222  33A3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7029  003224  33A2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7030  003226  33A1               	rrcf	___fltol@f1& (0+255),f,b
  7031  003228                     
  7032                           ; BSR set to: 0
  7033  003228  3FAA               	incfsz	___fltol@exp1& (0+255),f,b
  7034  00322A  EF0F  F019         	goto	l4647
  7035  00322E  EF31  F019         	goto	l4661
  7036  003232                     l4651:
  7037                           
  7038                           ; BSR set to: 0
  7039  003232  0E1F               	movlw	31
  7040  003234  65AA               	cpfsgt	___fltol@exp1& (0+255),b
  7041  003236  EF1F  F019         	goto	u5051
  7042  00323A  EF21  F019         	goto	u5050
  7043  00323E                     u5051:
  7044  00323E  EF29  F019         	goto	l4659
  7045  003242                     u5050:
  7046  003242  EFD2  F018         	goto	l4627
  7047  003246                     l4657:
  7048                           
  7049                           ; BSR set to: 0
  7050  003246  90D8               	bcf	status,0,c
  7051  003248  37A1               	rlcf	___fltol@f1& (0+255),f,b
  7052  00324A  37A2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7053  00324C  37A3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7054  00324E  37A4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7055  003250  07AA               	decf	___fltol@exp1& (0+255),f,b
  7056  003252                     l4659:
  7057                           
  7058                           ; BSR set to: 0
  7059  003252  51AA               	movf	___fltol@exp1& (0+255),w,b
  7060  003254  A4D8               	btfss	status,2,c
  7061  003256  EF2F  F019         	goto	u5061
  7062  00325A  EF31  F019         	goto	u5060
  7063  00325E                     u5061:
  7064  00325E  EF23  F019         	goto	l4657
  7065  003262                     u5060:
  7066  003262                     l4661:
  7067                           
  7068                           ; BSR set to: 0
  7069  003262  51A9               	movf	___fltol@sign1& (0+255),w,b
  7070  003264  B4D8               	btfsc	status,2,c
  7071  003266  EF37  F019         	goto	u5071
  7072  00326A  EF39  F019         	goto	u5070
  7073  00326E                     u5071:
  7074  00326E  EF41  F019         	goto	l4665
  7075  003272                     u5070:
  7076  003272                     
  7077                           ; BSR set to: 0
  7078  003272  1FA4               	comf	(___fltol@f1+3)& (0+255),f,b
  7079  003274  1FA3               	comf	(___fltol@f1+2)& (0+255),f,b
  7080  003276  1FA2               	comf	(___fltol@f1+1)& (0+255),f,b
  7081  003278  6DA1               	negf	___fltol@f1& (0+255),b
  7082  00327A  0E00               	movlw	0
  7083  00327C  23A2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7084  00327E  23A3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7085  003280  23A4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7086  003282                     l4665:
  7087                           
  7088                           ; BSR set to: 0
  7089  003282  C0A1  F0A1         	movff	___fltol@f1,?___fltol
  7090  003286  C0A2  F0A2         	movff	___fltol@f1+1,?___fltol+1
  7091  00328A  C0A3  F0A3         	movff	___fltol@f1+2,?___fltol+2
  7092  00328E  C0A4  F0A4         	movff	___fltol@f1+3,?___fltol+3
  7093  003292                     l691:
  7094                           
  7095                           ; BSR set to: 0
  7096  003292  0012               	return		;funcret
  7097  003294                     __end_of___fltol:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function ___awdiv *****************
  7101 ;; Defined at:
  7102 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  dividend        2    0[BANK0 ] int 
  7105 ;;  divisor         2    2[BANK0 ] int 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  quotient        2    6[BANK0 ] int 
  7108 ;;  sign            1    5[BANK0 ] unsigned char 
  7109 ;;  counter         1    4[BANK0 ] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  2    0[BANK0 ] int 
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7119 ;;      Params:         0       4       0       0       0       0       0       0       0
  7120 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7122 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7123 ;;Total ram usage:        8 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 5
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_convert_temp
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text29
  7134  0039FE                     __ptext29:
  7135                           	callstack 0
  7136  0039FE                     ___awdiv:
  7137                           	callstack 23
  7138  0039FE  0E00               	movlw	0
  7139  003A00  0100               	movlb	0	; () banked
  7140  003A02  6F65               	movwf	___awdiv@sign& (0+255),b
  7141  003A04                     
  7142                           ; BSR set to: 0
  7143  003A04  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7144  003A06  EF09  F01D         	goto	u4950
  7145  003A0A  EF07  F01D         	goto	u4951
  7146  003A0E                     u4951:
  7147  003A0E  EF0F  F01D         	goto	l4589
  7148  003A12                     u4950:
  7149  003A12                     
  7150                           ; BSR set to: 0
  7151  003A12  6D62               	negf	___awdiv@divisor& (0+255),b
  7152  003A14  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7153  003A16  B0D8               	btfsc	status,0,c
  7154  003A18  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7155  003A1A                     
  7156                           ; BSR set to: 0
  7157  003A1A  0E01               	movlw	1
  7158  003A1C  6F65               	movwf	___awdiv@sign& (0+255),b
  7159  003A1E                     l4589:
  7160                           
  7161                           ; BSR set to: 0
  7162  003A1E  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  7163  003A20  EF16  F01D         	goto	u4960
  7164  003A24  EF14  F01D         	goto	u4961
  7165  003A28                     u4961:
  7166  003A28  EF1C  F01D         	goto	l4595
  7167  003A2C                     u4960:
  7168  003A2C                     
  7169                           ; BSR set to: 0
  7170  003A2C  6D60               	negf	___awdiv@dividend& (0+255),b
  7171  003A2E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7172  003A30  B0D8               	btfsc	status,0,c
  7173  003A32  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7174  003A34                     
  7175                           ; BSR set to: 0
  7176  003A34  0E01               	movlw	1
  7177  003A36  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7178  003A38                     l4595:
  7179                           
  7180                           ; BSR set to: 0
  7181  003A38  0E00               	movlw	0
  7182  003A3A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7183  003A3C  0E00               	movlw	0
  7184  003A3E  6F66               	movwf	___awdiv@quotient& (0+255),b
  7185  003A40                     
  7186                           ; BSR set to: 0
  7187  003A40  5162               	movf	___awdiv@divisor& (0+255),w,b
  7188  003A42  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7189  003A44  B4D8               	btfsc	status,2,c
  7190  003A46  EF27  F01D         	goto	u4971
  7191  003A4A  EF29  F01D         	goto	u4970
  7192  003A4E                     u4971:
  7193  003A4E  EF51  F01D         	goto	l4617
  7194  003A52                     u4970:
  7195  003A52                     
  7196                           ; BSR set to: 0
  7197  003A52  0E01               	movlw	1
  7198  003A54  6F64               	movwf	___awdiv@counter& (0+255),b
  7199  003A56  EF31  F01D         	goto	l4603
  7200  003A5A                     l4601:
  7201                           
  7202                           ; BSR set to: 0
  7203  003A5A  90D8               	bcf	status,0,c
  7204  003A5C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7205  003A5E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7206  003A60  2B64               	incf	___awdiv@counter& (0+255),f,b
  7207  003A62                     l4603:
  7208                           
  7209                           ; BSR set to: 0
  7210  003A62  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7211  003A64  EF36  F01D         	goto	u4981
  7212  003A68  EF38  F01D         	goto	u4980
  7213  003A6C                     u4981:
  7214  003A6C  EF2D  F01D         	goto	l4601
  7215  003A70                     u4980:
  7216  003A70                     l4605:
  7217                           
  7218                           ; BSR set to: 0
  7219  003A70  90D8               	bcf	status,0,c
  7220  003A72  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7221  003A74  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7222  003A76                     
  7223                           ; BSR set to: 0
  7224  003A76  5162               	movf	___awdiv@divisor& (0+255),w,b
  7225  003A78  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7226  003A7A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7227  003A7C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7228  003A7E  A0D8               	btfss	status,0,c
  7229  003A80  EF44  F01D         	goto	u4991
  7230  003A84  EF46  F01D         	goto	u4990
  7231  003A88                     u4991:
  7232  003A88  EF4B  F01D         	goto	l4613
  7233  003A8C                     u4990:
  7234  003A8C                     
  7235                           ; BSR set to: 0
  7236  003A8C  5162               	movf	___awdiv@divisor& (0+255),w,b
  7237  003A8E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7238  003A90  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7239  003A92  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7240  003A94                     
  7241                           ; BSR set to: 0
  7242  003A94  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7243  003A96                     l4613:
  7244                           
  7245                           ; BSR set to: 0
  7246  003A96  90D8               	bcf	status,0,c
  7247  003A98  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7248  003A9A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7249  003A9C                     
  7250                           ; BSR set to: 0
  7251  003A9C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7252  003A9E  EF38  F01D         	goto	l4605
  7253  003AA2                     l4617:
  7254                           
  7255                           ; BSR set to: 0
  7256  003AA2  5165               	movf	___awdiv@sign& (0+255),w,b
  7257  003AA4  B4D8               	btfsc	status,2,c
  7258  003AA6  EF57  F01D         	goto	u5001
  7259  003AAA  EF59  F01D         	goto	u5000
  7260  003AAE                     u5001:
  7261  003AAE  EF5D  F01D         	goto	l4621
  7262  003AB2                     u5000:
  7263  003AB2                     
  7264                           ; BSR set to: 0
  7265  003AB2  6D66               	negf	___awdiv@quotient& (0+255),b
  7266  003AB4  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7267  003AB6  B0D8               	btfsc	status,0,c
  7268  003AB8  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7269  003ABA                     l4621:
  7270                           
  7271                           ; BSR set to: 0
  7272  003ABA  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7273  003ABE  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7274  003AC2                     
  7275                           ; BSR set to: 0
  7276  003AC2  0012               	return		;funcret
  7277  003AC4                     __end_of___awdiv:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function _config *****************
  7281 ;; Defined at:
  7282 ;;		line 368 in file "main.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;		None
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      void 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0, cstack
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7296 ;;      Params:         0       0       0       0       0       0       0       0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7299 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7300 ;;Total ram usage:        0 bytes
  7301 ;; Hardware stack levels used: 1
  7302 ;; Hardware stack levels required when called: 8
  7303 ;; This function calls:
  7304 ;;		_OpenXLCD
  7305 ;; This function is called by:
  7306 ;;		_main
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text30
  7311  00477E                     __ptext30:
  7312                           	callstack 0
  7313  00477E                     _config:
  7314                           	callstack 22
  7315  00477E                     
  7316                           ;main.c: 369:     TRISCbits.TRISC6 = 0;
  7317  00477E  9C94               	bcf	148,6,c	;volatile
  7318                           
  7319                           ;main.c: 370:     TRISCbits.TRISC7 = 0;
  7320  004780  9E94               	bcf	148,7,c	;volatile
  7321                           
  7322                           ;main.c: 371:     TRISCbits.TRISC2 = 0;
  7323  004782  9494               	bcf	148,2,c	;volatile
  7324  004784                     
  7325                           ;main.c: 373:     TRISB = 0xF0;
  7326  004784  0EF0               	movlw	240
  7327  004786  6E93               	movwf	147,c	;volatile
  7328  004788                     
  7329                           ;main.c: 374:     TRISAbits.TRISA0 = 1;
  7330  004788  8092               	bsf	146,0,c	;volatile
  7331  00478A                     
  7332                           ;main.c: 376:     RBPU = 0;
  7333  00478A  9EF1               	bcf	4081,7,c	;volatile
  7334                           
  7335                           ;main.c: 378:     ADCON1 = 0b00001101;
  7336  00478C  0E0D               	movlw	13
  7337  00478E  6EC1               	movwf	193,c	;volatile
  7338                           
  7339                           ;main.c: 379:     ADCON0 = 0b00000001;
  7340  004790  0E01               	movlw	1
  7341  004792  6EC2               	movwf	194,c	;volatile
  7342                           
  7343                           ;main.c: 380:     ADCON2 = 0b10010101;
  7344  004794  0E95               	movlw	149
  7345  004796  6EC0               	movwf	192,c	;volatile
  7346  004798                     
  7347                           ;main.c: 382:     OpenXLCD(0b00101100 & 0b00111000);
  7348  004798  0E28               	movlw	40
  7349  00479A  EC4D  F01B         	call	_OpenXLCD
  7350  00479E                     
  7351                           ;main.c: 384:     RCONbits.IPEN = 1;
  7352  00479E  8ED0               	bsf	208,7,c	;volatile
  7353  0047A0                     
  7354                           ;main.c: 385:     INTCONbits.GIEH = 1;
  7355  0047A0  8EF2               	bsf	242,7,c	;volatile
  7356  0047A2                     
  7357                           ;main.c: 387:     PIE1bits.ADIE = 1;
  7358  0047A2  8C9D               	bsf	157,6,c	;volatile
  7359  0047A4                     
  7360                           ;main.c: 388:     IPR1bits.ADIP = 1;
  7361  0047A4  8C9F               	bsf	159,6,c	;volatile
  7362  0047A6                     
  7363                           ;main.c: 390:     INTCONbits.RBIE = 1;
  7364  0047A6  86F2               	bsf	242,3,c	;volatile
  7365  0047A8                     
  7366                           ;main.c: 391:     INTCONbits.RBIF = 0;
  7367  0047A8  90F2               	bcf	242,0,c	;volatile
  7368  0047AA  0012               	return		;funcret
  7369  0047AC                     __end_of_config:
  7370                           	callstack 0
  7371                           
  7372 ;; *************** function _OpenXLCD *****************
  7373 ;; Defined at:
  7374 ;;		line 41 in file "nxlcd.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  lcdtype         1    wreg     unsigned char 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  lcdtype         1    1[BANK0 ] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0, cstack
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7388 ;;      Params:         0       0       0       0       0       0       0       0       0
  7389 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7391 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7392 ;;Total ram usage:        1 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; Hardware stack levels required when called: 7
  7395 ;; This function calls:
  7396 ;;		_BusyXLCD
  7397 ;;		_DelayPORXLCD
  7398 ;;		_DelayXLCD
  7399 ;;		_SetDDRamAddr
  7400 ;;		_WriteCmdXLCD
  7401 ;; This function is called by:
  7402 ;;		_config
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text31
  7407  00369A                     __ptext31:
  7408                           	callstack 0
  7409  00369A                     _OpenXLCD:
  7410                           	callstack 22
  7411                           
  7412                           ;incstack = 0
  7413                           ;OpenXLCD@lcdtype stored from wreg
  7414  00369A  0100               	movlb	0	; () banked
  7415  00369C  6F61               	movwf	OpenXLCD@lcdtype& (0+255),b
  7416  00369E                     
  7417                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  7418  00369E  0E0F               	movlw	15
  7419  0036A0  1683               	andwf	131,f,c	;volatile
  7420                           
  7421                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  7422  0036A2  0E0F               	movlw	15
  7423  0036A4  1695               	andwf	149,f,c	;volatile
  7424  0036A6                     
  7425                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  7426  0036A6  9496               	bcf	150,2,c	;volatile
  7427  0036A8                     
  7428                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  7429  0036A8  9096               	bcf	150,0,c	;volatile
  7430  0036AA                     
  7431                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  7432  0036AA  9296               	bcf	150,1,c	;volatile
  7433  0036AC                     
  7434                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  7435  0036AC  948D               	bcf	141,2,c	;volatile
  7436  0036AE                     
  7437                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  7438  0036AE  908D               	bcf	141,0,c	;volatile
  7439  0036B0                     
  7440                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  7441  0036B0  928D               	bcf	141,1,c	;volatile
  7442  0036B2                     
  7443                           ;nxlcd.c: 65:         DelayPORXLCD();
  7444  0036B2  ECFE  F023         	call	_DelayPORXLCD	;wreg free
  7445  0036B6                     
  7446                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  7447  0036B6  0E30               	movlw	48
  7448  0036B8  EC7E  F022         	call	_WriteCmdXLCD
  7449  0036BC                     
  7450                           ;nxlcd.c: 68:    DelayXLCD();
  7451  0036BC  ECF4  F023         	call	_DelayXLCD	;wreg free
  7452  0036C0                     
  7453                           ;nxlcd.c: 69:    DelayXLCD();
  7454  0036C0  ECF4  F023         	call	_DelayXLCD	;wreg free
  7455  0036C4                     
  7456                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  7457  0036C4  0E30               	movlw	48
  7458  0036C6  EC7E  F022         	call	_WriteCmdXLCD
  7459  0036CA                     
  7460                           ;nxlcd.c: 71:    DelayXLCD();
  7461  0036CA  ECF4  F023         	call	_DelayXLCD	;wreg free
  7462  0036CE                     
  7463                           ;nxlcd.c: 72:    DelayXLCD();
  7464  0036CE  ECF4  F023         	call	_DelayXLCD	;wreg free
  7465  0036D2                     
  7466                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  7467  0036D2  0E32               	movlw	50
  7468  0036D4  EC7E  F022         	call	_WriteCmdXLCD
  7469  0036D8                     l5057:
  7470  0036D8  ECF4  F021         	call	_BusyXLCD	;wreg free
  7471  0036DC  0900               	iorlw	0
  7472  0036DE  A4D8               	btfss	status,2,c
  7473  0036E0  EF74  F01B         	goto	u5621
  7474  0036E4  EF76  F01B         	goto	u5620
  7475  0036E8                     u5621:
  7476  0036E8  EF6C  F01B         	goto	l5057
  7477  0036EC                     u5620:
  7478  0036EC                     l5059:
  7479  0036EC  ECF4  F021         	call	_BusyXLCD	;wreg free
  7480  0036F0  0900               	iorlw	0
  7481  0036F2  A4D8               	btfss	status,2,c
  7482  0036F4  EF7E  F01B         	goto	u5631
  7483  0036F8  EF80  F01B         	goto	u5630
  7484  0036FC                     u5631:
  7485  0036FC  EF76  F01B         	goto	l5059
  7486  003700                     u5630:
  7487  003700                     
  7488                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  7489  003700  0100               	movlb	0	; () banked
  7490  003702  5161               	movf	OpenXLCD@lcdtype& (0+255),w,b
  7491  003704  EC7E  F022         	call	_WriteCmdXLCD
  7492  003708                     l5063:
  7493  003708  ECF4  F021         	call	_BusyXLCD	;wreg free
  7494  00370C  0900               	iorlw	0
  7495  00370E  A4D8               	btfss	status,2,c
  7496  003710  EF8C  F01B         	goto	u5641
  7497  003714  EF8E  F01B         	goto	u5640
  7498  003718                     u5641:
  7499  003718  EF84  F01B         	goto	l5063
  7500  00371C                     u5640:
  7501  00371C                     
  7502                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  7503  00371C  0E08               	movlw	8
  7504  00371E  EC7E  F022         	call	_WriteCmdXLCD
  7505  003722                     l5067:
  7506  003722  ECF4  F021         	call	_BusyXLCD	;wreg free
  7507  003726  0900               	iorlw	0
  7508  003728  A4D8               	btfss	status,2,c
  7509  00372A  EF99  F01B         	goto	u5651
  7510  00372E  EF9B  F01B         	goto	u5650
  7511  003732                     u5651:
  7512  003732  EF91  F01B         	goto	l5067
  7513  003736                     u5650:
  7514  003736                     
  7515                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  7516  003736  0E0F               	movlw	15
  7517  003738  EC7E  F022         	call	_WriteCmdXLCD
  7518  00373C                     l5071:
  7519  00373C  ECF4  F021         	call	_BusyXLCD	;wreg free
  7520  003740  0900               	iorlw	0
  7521  003742  A4D8               	btfss	status,2,c
  7522  003744  EFA6  F01B         	goto	u5661
  7523  003748  EFA8  F01B         	goto	u5660
  7524  00374C                     u5661:
  7525  00374C  EF9E  F01B         	goto	l5071
  7526  003750                     u5660:
  7527  003750                     
  7528                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  7529  003750  0E01               	movlw	1
  7530  003752  EC7E  F022         	call	_WriteCmdXLCD
  7531  003756                     l5075:
  7532  003756  ECF4  F021         	call	_BusyXLCD	;wreg free
  7533  00375A  0900               	iorlw	0
  7534  00375C  A4D8               	btfss	status,2,c
  7535  00375E  EFB3  F01B         	goto	u5671
  7536  003762  EFB5  F01B         	goto	u5670
  7537  003766                     u5671:
  7538  003766  EFAB  F01B         	goto	l5075
  7539  00376A                     u5670:
  7540  00376A                     
  7541                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  7542  00376A  0E04               	movlw	4
  7543  00376C  EC7E  F022         	call	_WriteCmdXLCD
  7544  003770                     l5079:
  7545  003770  ECF4  F021         	call	_BusyXLCD	;wreg free
  7546  003774  0900               	iorlw	0
  7547  003776  A4D8               	btfss	status,2,c
  7548  003778  EFC0  F01B         	goto	u5681
  7549  00377C  EFC2  F01B         	goto	u5680
  7550  003780                     u5681:
  7551  003780  EFB8  F01B         	goto	l5079
  7552  003784                     u5680:
  7553  003784                     
  7554                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  7555  003784  0E80               	movlw	128
  7556  003786  ECD1  F021         	call	_SetDDRamAddr
  7557  00378A  0012               	return		;funcret
  7558  00378C                     __end_of_OpenXLCD:
  7559                           	callstack 0
  7560                           
  7561 ;; *************** function _SetDDRamAddr *****************
  7562 ;; Defined at:
  7563 ;;		line 171 in file "nxlcd.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  DDaddr          1    wreg     unsigned char 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  DDaddr          1    0[BANK0 ] unsigned char 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      void 
  7570 ;; Registers used:
  7571 ;;		wreg, status,2, status,0, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7577 ;;      Params:         0       0       0       0       0       0       0       0       0
  7578 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7580 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7581 ;;Total ram usage:        1 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; Hardware stack levels required when called: 6
  7584 ;; This function calls:
  7585 ;;		_DelayFor18TCY
  7586 ;; This function is called by:
  7587 ;;		_OpenXLCD
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text32
  7592  0043A2                     __ptext32:
  7593                           	callstack 0
  7594  0043A2                     _SetDDRamAddr:
  7595                           	callstack 22
  7596                           
  7597                           ;incstack = 0
  7598                           ;SetDDRamAddr@DDaddr stored from wreg
  7599  0043A2  0100               	movlb	0	; () banked
  7600  0043A4  6F60               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  7601  0043A6                     
  7602                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  7603  0043A6  0E0F               	movlw	15
  7604  0043A8  1695               	andwf	149,f,c	;volatile
  7605                           
  7606                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  7607  0043AA  0E0F               	movlw	15
  7608  0043AC  1683               	andwf	131,f,c	;volatile
  7609                           
  7610                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  7611  0043AE  0100               	movlb	0	; () banked
  7612  0043B0  5160               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  7613  0043B2  0980               	iorlw	128
  7614  0043B4  0BF0               	andlw	240
  7615  0043B6  1283               	iorwf	131,f,c	;volatile
  7616  0043B8                     
  7617                           ; BSR set to: 0
  7618                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  7619  0043B8  948D               	bcf	141,2,c	;volatile
  7620  0043BA                     
  7621                           ; BSR set to: 0
  7622                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  7623  0043BA  908D               	bcf	141,0,c	;volatile
  7624  0043BC                     
  7625                           ; BSR set to: 0
  7626                           ;nxlcd.c: 196:         DelayFor18TCY();
  7627  0043BC  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  7628  0043C0                     
  7629                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  7630  0043C0  828D               	bsf	141,1,c	;volatile
  7631  0043C2                     
  7632                           ;nxlcd.c: 198:         DelayFor18TCY();
  7633  0043C2  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  7634  0043C6                     
  7635                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  7636  0043C6  928D               	bcf	141,1,c	;volatile
  7637                           
  7638                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  7639  0043C8  0E0F               	movlw	15
  7640  0043CA  1683               	andwf	131,f,c	;volatile
  7641                           
  7642                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  7643  0043CC  0100               	movlb	0	; () banked
  7644  0043CE  3960               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  7645  0043D0  0BF0               	andlw	240
  7646  0043D2  0BF0               	andlw	240
  7647  0043D4  1283               	iorwf	131,f,c	;volatile
  7648  0043D6                     
  7649                           ; BSR set to: 0
  7650                           ;nxlcd.c: 207:         DelayFor18TCY();
  7651  0043D6  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  7652  0043DA                     
  7653                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  7654  0043DA  828D               	bsf	141,1,c	;volatile
  7655  0043DC                     
  7656                           ;nxlcd.c: 209:         DelayFor18TCY();
  7657  0043DC  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  7658  0043E0                     
  7659                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  7660  0043E0  928D               	bcf	141,1,c	;volatile
  7661                           
  7662                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  7663  0043E2  0EF0               	movlw	240
  7664  0043E4  1295               	iorwf	149,f,c	;volatile
  7665  0043E6  0012               	return		;funcret
  7666  0043E8                     __end_of_SetDDRamAddr:
  7667                           	callstack 0
  7668                           
  7669 ;; *************** function _DelayXLCD *****************
  7670 ;; Defined at:
  7671 ;;		line 22 in file "nxlcd.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;		None
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      void 
  7678 ;; Registers used:
  7679 ;;		wreg
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7685 ;;      Params:         0       0       0       0       0       0       0       0       0
  7686 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7687 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7688 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7689 ;;Total ram usage:        1 bytes
  7690 ;; Hardware stack levels used: 1
  7691 ;; Hardware stack levels required when called: 5
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_OpenXLCD
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text33
  7700  0047E8                     __ptext33:
  7701                           	callstack 0
  7702  0047E8                     _DelayXLCD:
  7703                           	callstack 23
  7704  0047E8                     
  7705                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  7706  0047E8  0E21               	movlw	33
  7707  0047EA  0100               	movlb	0	; () banked
  7708  0047EC  6F60               	movwf	??_DelayXLCD& (0+255),b
  7709  0047EE  0E76               	movlw	118
  7710  0047F0                     u6337:
  7711  0047F0  2EE8               	decfsz	wreg,f,c
  7712  0047F2  D7FE               	bra	u6337
  7713  0047F4  2F60               	decfsz	??_DelayXLCD& (0+255),f,b
  7714  0047F6  D7FC               	bra	u6337
  7715  0047F8  F000               	nop	
  7716  0047FA  0012               	return		;funcret
  7717  0047FC                     __end_of_DelayXLCD:
  7718                           	callstack 0
  7719                           
  7720 ;; *************** function _DelayPORXLCD *****************
  7721 ;; Defined at:
  7722 ;;		line 17 in file "nxlcd.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7736 ;;      Params:         0       0       0       0       0       0       0       0       0
  7737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7738 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7739 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7740 ;;Total ram usage:        1 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; Hardware stack levels required when called: 5
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_OpenXLCD
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text34
  7751  0047FC                     __ptext34:
  7752                           	callstack 0
  7753  0047FC                     _DelayPORXLCD:
  7754                           	callstack 23
  7755  0047FC                     
  7756                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  7757  0047FC  0E62               	movlw	98
  7758  0047FE  0100               	movlb	0	; () banked
  7759  004800  6F60               	movwf	??_DelayPORXLCD& (0+255),b
  7760  004802  0E65               	movlw	101
  7761  004804                     u6347:
  7762  004804  2EE8               	decfsz	wreg,f,c
  7763  004806  D7FE               	bra	u6347
  7764  004808  2F60               	decfsz	??_DelayPORXLCD& (0+255),f,b
  7765  00480A  D7FC               	bra	u6347
  7766  00480C  D000               	nop2	
  7767  00480E  0012               	return		;funcret
  7768  004810                     __end_of_DelayPORXLCD:
  7769                           	callstack 0
  7770                           
  7771 ;; *************** function _change_password *****************
  7772 ;; Defined at:
  7773 ;;		line 279 in file "main.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;		None
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  new_password    5   41[BANK0 ] unsigned char [5]
  7778 ;;  current_pass    5   46[BANK0 ] unsigned char [5]
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0
  7789 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7790 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7791 ;;      Totals:         0      14       0       0       0       0       0       0       0
  7792 ;;Total ram usage:       14 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; Hardware stack levels required when called: 8
  7795 ;; This function calls:
  7796 ;;		_WriteCmdXLCD
  7797 ;;		_clean_lcd
  7798 ;;		_delay_show_lcd
  7799 ;;		_get_password
  7800 ;;		_grant_access
  7801 ;;		_putsXLCD
  7802 ;;		_update_password
  7803 ;; This function is called by:
  7804 ;;		_main
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text35
  7809  003060                     __ptext35:
  7810                           	callstack 0
  7811  003060                     _change_password:
  7812                           	callstack 22
  7813  003060                     l182:
  7814                           
  7815                           ;main.c: 281:     ADCON0bits.GO_DONE = 1;
  7816  003060  82C2               	bsf	194,1,c	;volatile
  7817  003062                     
  7818                           ;main.c: 282:     clean_lcd();
  7819  003062  ECD6  F023         	call	_clean_lcd	;wreg free
  7820                           
  7821                           ;main.c: 283:     WriteCmdXLCD(0x82);
  7822  003066  0E82               	movlw	130
  7823  003068  EC7E  F022         	call	_WriteCmdXLCD
  7824  00306C                     
  7825                           ;main.c: 284:     putsXLCD ("SENHA ATUAL: ");
  7826  00306C  0E35               	movlw	low STR_14
  7827  00306E  0100               	movlb	0	; () banked
  7828  003070  6F61               	movwf	putsXLCD@buffer& (0+255),b
  7829  003072  0E08               	movlw	high STR_14
  7830  003074  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  7831  003076  EC33  F01F         	call	_putsXLCD	;wreg free
  7832  00307A                     
  7833                           ;main.c: 285:     char current_password[5];;main.c: 286:     get_password(current_passwo
      +                          rd);
  7834  00307A  0E8E               	movlw	low change_password@current_password
  7835  00307C  0100               	movlb	0	; () banked
  7836  00307E  6F79               	movwf	get_password@password& (0+255),b
  7837  003080  0E00               	movlw	high change_password@current_password
  7838  003082  6F7A               	movwf	(get_password@password+1)& (0+255),b
  7839  003084  ECC4  F01D         	call	_get_password	;wreg free
  7840  003088                     
  7841                           ;main.c: 287:     _delay((unsigned long)((500)*(20000000/4000.0)));
  7842  003088  0E0D               	movlw	13
  7843  00308A  0100               	movlb	0	; () banked
  7844  00308C  6F86               	movwf	(??_change_password+1)& (0+255),b
  7845  00308E  0EAF               	movlw	175
  7846  003090  6F85               	movwf	??_change_password& (0+255),b
  7847  003092  0EB6               	movlw	182
  7848  003094                     u6357:
  7849  003094  2EE8               	decfsz	wreg,f,c
  7850  003096  D7FE               	bra	u6357
  7851  003098  2F85               	decfsz	??_change_password& (0+255),f,b
  7852  00309A  D7FC               	bra	u6357
  7853  00309C  2F86               	decfsz	(??_change_password+1)& (0+255),f,b
  7854  00309E  D7FA               	bra	u6357
  7855  0030A0  F000               	nop	
  7856  0030A2                     
  7857                           ;main.c: 288:     if ((grant_access(current_password) - '0') > 0) {
  7858  0030A2  0ED0               	movlw	208
  7859  0030A4  0100               	movlb	0	; () banked
  7860  0030A6  6F85               	movwf	??_change_password& (0+255),b
  7861  0030A8  0EFF               	movlw	255
  7862  0030AA  6F86               	movwf	(??_change_password+1)& (0+255),b
  7863  0030AC  0E8E               	movlw	low change_password@current_password
  7864  0030AE  6F66               	movwf	grant_access@input_password& (0+255),b
  7865  0030B0  0E00               	movlw	high change_password@current_password
  7866  0030B2  6F67               	movwf	(grant_access@input_password+1)& (0+255),b
  7867  0030B4  EC43  F020         	call	_grant_access	;wreg free
  7868  0030B8  0100               	movlb	0	; () banked
  7869  0030BA  6F87               	movwf	(??_change_password+2)& (0+255),b
  7870  0030BC  6B88               	clrf	(??_change_password+3)& (0+255),b
  7871  0030BE  5185               	movf	??_change_password& (0+255),w,b
  7872  0030C0  2787               	addwf	(??_change_password+2)& (0+255),f,b
  7873  0030C2  5186               	movf	(??_change_password+1)& (0+255),w,b
  7874  0030C4  2388               	addwfc	(??_change_password+3)& (0+255),f,b
  7875  0030C6  5187               	movf	(??_change_password+2)& (0+255),w,b
  7876  0030C8  1188               	iorwf	(??_change_password+3)& (0+255),w,b
  7877  0030CA  B4D8               	btfsc	status,2,c
  7878  0030CC  EF6A  F018         	goto	u6111
  7879  0030D0  EF6C  F018         	goto	u6110
  7880  0030D4                     u6111:
  7881  0030D4  EFAE  F018         	goto	l5399
  7882  0030D8                     u6110:
  7883  0030D8                     
  7884                           ; BSR set to: 0
  7885                           ;main.c: 289:         clean_lcd();
  7886  0030D8  ECD6  F023         	call	_clean_lcd	;wreg free
  7887                           
  7888                           ;main.c: 290:         WriteCmdXLCD(0x83);
  7889  0030DC  0E83               	movlw	131
  7890  0030DE  EC7E  F022         	call	_WriteCmdXLCD
  7891  0030E2                     
  7892                           ;main.c: 291:         putsXLCD ("NOVA SENHA: ");
  7893  0030E2  0E43               	movlw	low STR_15
  7894  0030E4  0100               	movlb	0	; () banked
  7895  0030E6  6F61               	movwf	putsXLCD@buffer& (0+255),b
  7896  0030E8  0E08               	movlw	high STR_15
  7897  0030EA  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  7898  0030EC  EC33  F01F         	call	_putsXLCD	;wreg free
  7899  0030F0                     
  7900                           ;main.c: 292:         char new_password[5];;main.c: 293:         get_password(new_passwo
      +                          rd);
  7901  0030F0  0E89               	movlw	low change_password@new_password
  7902  0030F2  0100               	movlb	0	; () banked
  7903  0030F4  6F79               	movwf	get_password@password& (0+255),b
  7904  0030F6  0E00               	movlw	high change_password@new_password
  7905  0030F8  6F7A               	movwf	(get_password@password+1)& (0+255),b
  7906  0030FA  ECC4  F01D         	call	_get_password	;wreg free
  7907  0030FE                     
  7908                           ;main.c: 294:         _delay((unsigned long)((500)*(20000000/4000.0)));
  7909  0030FE  0E0D               	movlw	13
  7910  003100  0100               	movlb	0	; () banked
  7911  003102  6F86               	movwf	(??_change_password+1)& (0+255),b
  7912  003104  0EAF               	movlw	175
  7913  003106  6F85               	movwf	??_change_password& (0+255),b
  7914  003108  0EB6               	movlw	182
  7915  00310A                     u6367:
  7916  00310A  2EE8               	decfsz	wreg,f,c
  7917  00310C  D7FE               	bra	u6367
  7918  00310E  2F85               	decfsz	??_change_password& (0+255),f,b
  7919  003110  D7FC               	bra	u6367
  7920  003112  2F86               	decfsz	(??_change_password+1)& (0+255),f,b
  7921  003114  D7FA               	bra	u6367
  7922  003116  F000               	nop	
  7923  003118                     
  7924                           ;main.c: 295:         update_password(current_password, new_password);
  7925  003118  0E8E               	movlw	low change_password@current_password
  7926  00311A  0100               	movlb	0	; () banked
  7927  00311C  6F68               	movwf	update_password@current_password& (0+255),b
  7928  00311E  0E00               	movlw	high change_password@current_password
  7929  003120  6F69               	movwf	(update_password@current_password+1)& (0+255),b
  7930  003122  0E89               	movlw	low change_password@new_password
  7931  003124  6F6A               	movwf	update_password@new_password& (0+255),b
  7932  003126  0E00               	movlw	high change_password@new_password
  7933  003128  6F6B               	movwf	(update_password@new_password+1)& (0+255),b
  7934  00312A  EC6E  F01E         	call	_update_password	;wreg free
  7935  00312E                     
  7936                           ;main.c: 296:         clean_lcd();
  7937  00312E  ECD6  F023         	call	_clean_lcd	;wreg free
  7938  003132                     
  7939                           ;main.c: 297:         putsXLCD ("SENHA");
  7940  003132  0E87               	movlw	low STR_4
  7941  003134  0100               	movlb	0	; () banked
  7942  003136  6F61               	movwf	putsXLCD@buffer& (0+255),b
  7943  003138  0E08               	movlw	high STR_4
  7944  00313A  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  7945  00313C  EC33  F01F         	call	_putsXLCD	;wreg free
  7946  003140                     
  7947                           ;main.c: 298:         WriteCmdXLCD(0xC0);
  7948  003140  0EC0               	movlw	192
  7949  003142  EC7E  F022         	call	_WriteCmdXLCD
  7950  003146                     
  7951                           ;main.c: 299:         putsXLCD ("ALTERADA");
  7952  003146  0E70               	movlw	low STR_17
  7953  003148  0100               	movlb	0	; () banked
  7954  00314A  6F61               	movwf	putsXLCD@buffer& (0+255),b
  7955  00314C  0E08               	movlw	high STR_17
  7956  00314E  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  7957  003150  EC33  F01F         	call	_putsXLCD	;wreg free
  7958  003154                     
  7959                           ;main.c: 300:         delay_show_lcd();
  7960  003154  ECE6  F023         	call	_delay_show_lcd	;wreg free
  7961  003158  EFC5  F018         	goto	l184
  7962  00315C                     l5399:
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;main.c: 303:         clean_lcd();
  7966  00315C  ECD6  F023         	call	_clean_lcd	;wreg free
  7967  003160                     
  7968                           ;main.c: 304:         putsXLCD ("SENHA");
  7969  003160  0E87               	movlw	low STR_4
  7970  003162  0100               	movlb	0	; () banked
  7971  003164  6F61               	movwf	putsXLCD@buffer& (0+255),b
  7972  003166  0E08               	movlw	high STR_4
  7973  003168  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  7974  00316A  EC33  F01F         	call	_putsXLCD	;wreg free
  7975  00316E                     
  7976                           ;main.c: 305:         WriteCmdXLCD(0xC0);
  7977  00316E  0EC0               	movlw	192
  7978  003170  EC7E  F022         	call	_WriteCmdXLCD
  7979                           
  7980                           ;main.c: 306:         putsXLCD ("NAO ENCONTRADA");
  7981  003174  0E26               	movlw	low STR_5
  7982  003176  0100               	movlb	0	; () banked
  7983  003178  6F61               	movwf	putsXLCD@buffer& (0+255),b
  7984  00317A  0E08               	movlw	high STR_5
  7985  00317C  6F62               	movwf	(putsXLCD@buffer+1)& (0+255),b
  7986  00317E  EC33  F01F         	call	_putsXLCD	;wreg free
  7987  003182                     
  7988                           ;main.c: 307:         delay_show_lcd();
  7989  003182  ECE6  F023         	call	_delay_show_lcd	;wreg free
  7990  003186  EF30  F018         	goto	l182
  7991  00318A                     l184:
  7992  00318A  0012               	return		;funcret
  7993  00318C                     __end_of_change_password:
  7994                           	callstack 0
  7995                           
  7996 ;; *************** function _update_password *****************
  7997 ;; Defined at:
  7998 ;;		line 477 in file "main.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  current_pass    2    8[BANK0 ] PTR const unsigned char 
  8001 ;;		 -> change_password@current_password(5), 
  8002 ;;  new_password    2   10[BANK0 ] PTR const unsigned char 
  8003 ;;		 -> change_password@new_password(5), 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  user            6   13[BANK0 ] struct .
  8006 ;;  address         1   12[BANK0 ] unsigned char 
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8016 ;;      Params:         0       4       0       0       0       0       0       0       0
  8017 ;;      Locals:         0       7       0       0       0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8019 ;;      Totals:         0      11       0       0       0       0       0       0       0
  8020 ;;Total ram usage:       11 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 7
  8023 ;; This function calls:
  8024 ;;		_EEPROM_read_user
  8025 ;;		_EEPROM_write_user
  8026 ;;		_strcmp
  8027 ;;		_strcpy
  8028 ;; This function is called by:
  8029 ;;		_change_password
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text36
  8034  003CDC                     __ptext36:
  8035                           	callstack 0
  8036  003CDC                     _update_password:
  8037                           	callstack 22
  8038  003CDC                     
  8039                           ;main.c: 478:     User user;;main.c: 479:     unsigned char address = 0;
  8040  003CDC  0E00               	movlw	0
  8041  003CDE  0100               	movlb	0	; () banked
  8042  003CE0  6F6C               	movwf	update_password@address& (0+255),b
  8043                           
  8044                           ;main.c: 482:     while (address < 200) {
  8045  003CE2  EFA7  F01E         	goto	l246
  8046  003CE6                     l5003:
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;main.c: 483:         EEPROM_read_user(&user, address);
  8050  003CE6  0E6D               	movlw	low update_password@user
  8051  003CE8  6F61               	movwf	EEPROM_read_user@user& (0+255),b
  8052  003CEA  0E00               	movlw	high update_password@user
  8053  003CEC  6F62               	movwf	(EEPROM_read_user@user+1)& (0+255),b
  8054  003CEE  C06C  F063         	movff	update_password@address,EEPROM_read_user@start_address
  8055  003CF2  EC64  F021         	call	_EEPROM_read_user	;wreg free
  8056  003CF6                     
  8057                           ;main.c: 485:         if (strcmp(current_password, user.password) == 0) {
  8058  003CF6  C068  F060         	movff	update_password@current_password,strcmp@l
  8059  003CFA  C069  F061         	movff	update_password@current_password+1,strcmp@l+1
  8060  003CFE  0E6D               	movlw	low update_password@user
  8061  003D00  0100               	movlb	0	; () banked
  8062  003D02  6F62               	movwf	strcmp@r& (0+255),b
  8063  003D04  0E00               	movlw	high update_password@user
  8064  003D06  6F63               	movwf	(strcmp@r+1)& (0+255),b
  8065  003D08  EC6D  F01F         	call	_strcmp	;wreg free
  8066  003D0C  0100               	movlb	0	; () banked
  8067  003D0E  5160               	movf	?_strcmp& (0+255),w,b
  8068  003D10  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  8069  003D12  A4D8               	btfss	status,2,c
  8070  003D14  EF8E  F01E         	goto	u5601
  8071  003D18  EF90  F01E         	goto	u5600
  8072  003D1C                     u5601:
  8073  003D1C  EFA5  F01E         	goto	l5013
  8074  003D20                     u5600:
  8075  003D20                     
  8076                           ; BSR set to: 0
  8077                           ;main.c: 486:             strcpy(user.password, new_password);
  8078  003D20  0E6D               	movlw	low update_password@user
  8079  003D22  6F60               	movwf	strcpy@dest& (0+255),b
  8080  003D24  0E00               	movlw	high update_password@user
  8081  003D26  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8082  003D28  C06A  F062         	movff	update_password@new_password,strcpy@src
  8083  003D2C  C06B  F063         	movff	update_password@new_password+1,strcpy@src+1
  8084  003D30  ECC1  F022         	call	_strcpy	;wreg free
  8085  003D34                     
  8086                           ;main.c: 487:             EEPROM_write_user(&user, address);
  8087  003D34  0E6D               	movlw	low update_password@user
  8088  003D36  0100               	movlb	0	; () banked
  8089  003D38  6F62               	movwf	EEPROM_write_user@user& (0+255),b
  8090  003D3A  0E00               	movlw	high update_password@user
  8091  003D3C  6F63               	movwf	(EEPROM_write_user@user+1)& (0+255),b
  8092  003D3E  C06C  F064         	movff	update_password@address,EEPROM_write_user@start_address
  8093  003D42  ECCC  F020         	call	_EEPROM_write_user	;wreg free
  8094  003D46  EFAF  F01E         	goto	l249
  8095  003D4A                     l5013:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;main.c: 491:         address += 6;
  8099  003D4A  0E06               	movlw	6
  8100  003D4C  276C               	addwf	update_password@address& (0+255),f,b
  8101  003D4E                     l246:
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;main.c: 482:     while (address < 200) {
  8105  003D4E  0EC7               	movlw	199
  8106  003D50  656C               	cpfsgt	update_password@address& (0+255),b
  8107  003D52  EFAD  F01E         	goto	u5611
  8108  003D56  EFAF  F01E         	goto	u5610
  8109  003D5A                     u5611:
  8110  003D5A  EF73  F01E         	goto	l5003
  8111  003D5E                     u5610:
  8112  003D5E                     l249:
  8113  003D5E  0012               	return		;funcret
  8114  003D60                     __end_of_update_password:
  8115                           	callstack 0
  8116                           
  8117 ;; *************** function _putsXLCD *****************
  8118 ;; Defined at:
  8119 ;;		line 510 in file "nxlcd.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  buffer          2    1[BANK0 ] PTR unsigned char 
  8122 ;;		 -> STR_22(5), STR_21(5), show_temp@int_str(20), STR_19(15), 
  8123 ;;		 -> STR_18(6), STR_17(9), STR_16(6), STR_15(13), 
  8124 ;;		 -> STR_14(14), STR_13(5), STR_12(7), STR_11(4), 
  8125 ;;		 -> STR_10(3), STR_9(7), STR_8(4), STR_7(3), 
  8126 ;;		 -> STR_6(11), STR_5(15), STR_4(6), STR_3(10), 
  8127 ;;		 -> STR_2(7), STR_1(17), 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;		None
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      void 
  8132 ;; Registers used:
  8133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8139 ;;      Params:         0       2       0       0       0       0       0       0       0
  8140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8142 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8143 ;;Total ram usage:        2 bytes
  8144 ;; Hardware stack levels used: 1
  8145 ;; Hardware stack levels required when called: 7
  8146 ;; This function calls:
  8147 ;;		_BusyXLCD
  8148 ;;		_WriteDataXLCD
  8149 ;; This function is called by:
  8150 ;;		_start
  8151 ;;		_show_status_relay
  8152 ;;		_change_password
  8153 ;;		_show_temp
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text37
  8158  003E66                     __ptext37:
  8159                           	callstack 0
  8160  003E66                     _putsXLCD:
  8161                           	callstack 21
  8162  003E66                     
  8163                           ;nxlcd.c: 510: void putsXLCD(char *buffer);nxlcd.c: 511: {;nxlcd.c: 512:         while(*
      +                          buffer)
  8164  003E66  EF54  F01F         	goto	l4429
  8165  003E6A                     l4423:
  8166  003E6A  ECF4  F021         	call	_BusyXLCD	;wreg free
  8167  003E6E  0900               	iorlw	0
  8168  003E70  A4D8               	btfss	status,2,c
  8169  003E72  EF3D  F01F         	goto	u4731
  8170  003E76  EF3F  F01F         	goto	u4730
  8171  003E7A                     u4731:
  8172  003E7A  EF35  F01F         	goto	l4423
  8173  003E7E                     u4730:
  8174  003E7E                     
  8175                           ;nxlcd.c: 515:                 WriteDataXLCD(*buffer);
  8176  003E7E  C061  FFF6         	movff	putsXLCD@buffer,tblptrl
  8177  003E82  C062  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  8178  003E86  6AF8               	clrf	tblptru,c
  8179  003E88  0E07               	movlw	(high __ramtop+-1)
  8180  003E8A  64F7               	cpfsgt	tblptrh,c
  8181  003E8C  D003               	bra	u4747
  8182  003E8E  0008               	tblrd		*
  8183  003E90  50F5               	movf	tablat,w,c
  8184  003E92  D005               	bra	u4740
  8185  003E94                     u4747:
  8186  003E94  CFF6 FFE1          	movff	tblptrl,fsr1l
  8187  003E98  CFF7 FFE2          	movff	tblptrh,fsr1h
  8188  003E9C  50E7               	movf	indf1,w,c
  8189  003E9E                     u4740:
  8190  003E9E  EC5C  F022         	call	_WriteDataXLCD
  8191  003EA2                     
  8192                           ;nxlcd.c: 516:                 buffer++;
  8193  003EA2  0100               	movlb	0	; () banked
  8194  003EA4  4B61               	infsnz	putsXLCD@buffer& (0+255),f,b
  8195  003EA6  2B62               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  8196  003EA8                     l4429:
  8197                           
  8198                           ;nxlcd.c: 512:         while(*buffer)
  8199  003EA8  C061  FFF6         	movff	putsXLCD@buffer,tblptrl
  8200  003EAC  C062  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  8201  003EB0  6AF8               	clrf	tblptru,c
  8202  003EB2  0E07               	movlw	(high __ramtop+-1)
  8203  003EB4  64F7               	cpfsgt	tblptrh,c
  8204  003EB6  D003               	bra	u4757
  8205  003EB8  0008               	tblrd		*
  8206  003EBA  50F5               	movf	tablat,w,c
  8207  003EBC  D005               	bra	u4750
  8208  003EBE                     u4757:
  8209  003EBE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8210  003EC2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8211  003EC6  50E7               	movf	indf1,w,c
  8212  003EC8                     u4750:
  8213  003EC8  0900               	iorlw	0
  8214  003ECA  A4D8               	btfss	status,2,c
  8215  003ECC  EF6A  F01F         	goto	u4761
  8216  003ED0  EF6C  F01F         	goto	u4760
  8217  003ED4                     u4761:
  8218  003ED4  EF35  F01F         	goto	l4423
  8219  003ED8                     u4760:
  8220  003ED8  0012               	return		;funcret
  8221  003EDA                     __end_of_putsXLCD:
  8222                           	callstack 0
  8223                           
  8224 ;; *************** function _BusyXLCD *****************
  8225 ;; Defined at:
  8226 ;;		line 227 in file "nxlcd.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;		None
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      unsigned char 
  8233 ;; Registers used:
  8234 ;;		wreg, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8240 ;;      Params:         0       0       0       0       0       0       0       0       0
  8241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8243 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8244 ;;Total ram usage:        0 bytes
  8245 ;; Hardware stack levels used: 1
  8246 ;; Hardware stack levels required when called: 6
  8247 ;; This function calls:
  8248 ;;		_DelayFor18TCY
  8249 ;; This function is called by:
  8250 ;;		_OpenXLCD
  8251 ;;		_putsXLCD
  8252 ;;		_putrsXLCD
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text38
  8257  0043E8                     __ptext38:
  8258                           	callstack 0
  8259  0043E8                     _BusyXLCD:
  8260                           	callstack 21
  8261  0043E8                     
  8262                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  8263  0043E8  848D               	bsf	141,2,c	;volatile
  8264                           
  8265                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  8266  0043EA  908D               	bcf	141,0,c	;volatile
  8267  0043EC                     
  8268                           ;nxlcd.c: 231:         DelayFor18TCY();
  8269  0043EC  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  8270  0043F0                     
  8271                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  8272  0043F0  828D               	bsf	141,1,c	;volatile
  8273                           
  8274                           ;nxlcd.c: 233:         DelayFor18TCY();
  8275  0043F2  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  8276  0043F6                     
  8277                           ;nxlcd.c: 249:         if(PORTD&0x80)
  8278  0043F6  AE83               	btfss	131,7,c	;volatile
  8279  0043F8  EF00  F022         	goto	u3971
  8280  0043FC  EF02  F022         	goto	u3970
  8281  004400                     u3971:
  8282  004400  EF0D  F022         	goto	l359
  8283  004404                     u3970:
  8284  004404                     
  8285                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  8286  004404  928D               	bcf	141,1,c	;volatile
  8287  004406                     
  8288                           ;nxlcd.c: 255:                 DelayFor18TCY();
  8289  004406  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  8290  00440A                     
  8291                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  8292  00440A  828D               	bsf	141,1,c	;volatile
  8293                           
  8294                           ;nxlcd.c: 257:                 DelayFor18TCY();
  8295  00440C  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  8296  004410                     
  8297                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  8298  004410  928D               	bcf	141,1,c	;volatile
  8299  004412                     
  8300                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  8301  004412  948D               	bcf	141,2,c	;volatile
  8302  004414                     
  8303                           ;nxlcd.c: 260:                 return 1;
  8304  004414  0E01               	movlw	1
  8305  004416  EF16  F022         	goto	l360
  8306  00441A                     l359:
  8307                           
  8308                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  8309  00441A  928D               	bcf	141,1,c	;volatile
  8310  00441C                     
  8311                           ;nxlcd.c: 265:                 DelayFor18TCY();
  8312  00441C  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  8313  004420                     
  8314                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  8315  004420  828D               	bsf	141,1,c	;volatile
  8316                           
  8317                           ;nxlcd.c: 267:                 DelayFor18TCY();
  8318  004422  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  8319  004426                     
  8320                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  8321  004426  928D               	bcf	141,1,c	;volatile
  8322  004428                     
  8323                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  8324  004428  948D               	bcf	141,2,c	;volatile
  8325  00442A                     
  8326                           ;nxlcd.c: 270:                 return 0;
  8327  00442A  0E00               	movlw	0
  8328  00442C                     l360:
  8329  00442C  0012               	return		;funcret
  8330  00442E                     __end_of_BusyXLCD:
  8331                           	callstack 0
  8332                           
  8333 ;; *************** function _grant_access *****************
  8334 ;; Defined at:
  8335 ;;		line 395 in file "main.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  input_passwo    2    6[BANK0 ] PTR const unsigned char 
  8338 ;;		 -> change_password@current_password(5), start@current_password(5), 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  user            6    9[BANK0 ] struct .
  8341 ;;  address         1    8[BANK0 ] unsigned char 
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  1    wreg      unsigned char 
  8344 ;; Registers used:
  8345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8351 ;;      Params:         0       2       0       0       0       0       0       0       0
  8352 ;;      Locals:         0       7       0       0       0       0       0       0       0
  8353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8354 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8355 ;;Total ram usage:        9 bytes
  8356 ;; Hardware stack levels used: 1
  8357 ;; Hardware stack levels required when called: 7
  8358 ;; This function calls:
  8359 ;;		_EEPROM_read_user
  8360 ;;		_strcmp
  8361 ;; This function is called by:
  8362 ;;		_start
  8363 ;;		_change_password
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           	psect	text39
  8368  004086                     __ptext39:
  8369                           	callstack 0
  8370  004086                     _grant_access:
  8371                           	callstack 22
  8372  004086                     
  8373                           ;main.c: 396:     User user;;main.c: 397:     unsigned char address = 0;
  8374  004086  0E00               	movlw	0
  8375  004088  0100               	movlb	0	; () banked
  8376  00408A  6F68               	movwf	grant_access@address& (0+255),b
  8377                           
  8378                           ;main.c: 400:     while (address < 200) {
  8379  00408C  EF6A  F020         	goto	l215
  8380  004090                     l4925:
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;main.c: 401:         EEPROM_read_user(&user, address);
  8384  004090  0E69               	movlw	low grant_access@user
  8385  004092  6F61               	movwf	EEPROM_read_user@user& (0+255),b
  8386  004094  0E00               	movlw	high grant_access@user
  8387  004096  6F62               	movwf	(EEPROM_read_user@user+1)& (0+255),b
  8388  004098  C068  F063         	movff	grant_access@address,EEPROM_read_user@start_address
  8389  00409C  EC64  F021         	call	_EEPROM_read_user	;wreg free
  8390  0040A0                     
  8391                           ;main.c: 403:         if (strcmp(input_password, user.password) == 0) {
  8392  0040A0  C066  F060         	movff	grant_access@input_password,strcmp@l
  8393  0040A4  C067  F061         	movff	grant_access@input_password+1,strcmp@l+1
  8394  0040A8  0E69               	movlw	low grant_access@user
  8395  0040AA  0100               	movlb	0	; () banked
  8396  0040AC  6F62               	movwf	strcmp@r& (0+255),b
  8397  0040AE  0E00               	movlw	high grant_access@user
  8398  0040B0  6F63               	movwf	(strcmp@r+1)& (0+255),b
  8399  0040B2  EC6D  F01F         	call	_strcmp	;wreg free
  8400  0040B6  0100               	movlb	0	; () banked
  8401  0040B8  5160               	movf	?_strcmp& (0+255),w,b
  8402  0040BA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  8403  0040BC  A4D8               	btfss	status,2,c
  8404  0040BE  EF63  F020         	goto	u5481
  8405  0040C2  EF65  F020         	goto	u5480
  8406  0040C6                     u5481:
  8407  0040C6  EF68  F020         	goto	l4933
  8408  0040CA                     u5480:
  8409  0040CA                     
  8410                           ; BSR set to: 0
  8411                           ;main.c: 404:             return user.accessLevel;
  8412  0040CA  516E               	movf	(grant_access@user+5)& (0+255),w,b
  8413  0040CC  EF73  F020         	goto	l218
  8414  0040D0                     l4933:
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;main.c: 407:         address += 6;
  8418  0040D0  0E06               	movlw	6
  8419  0040D2  2768               	addwf	grant_access@address& (0+255),f,b
  8420  0040D4                     l215:
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;main.c: 400:     while (address < 200) {
  8424  0040D4  0EC7               	movlw	199
  8425  0040D6  6568               	cpfsgt	grant_access@address& (0+255),b
  8426  0040D8  EF70  F020         	goto	u5491
  8427  0040DC  EF72  F020         	goto	u5490
  8428  0040E0                     u5491:
  8429  0040E0  EF48  F020         	goto	l4925
  8430  0040E4                     u5490:
  8431  0040E4                     
  8432                           ; BSR set to: 0
  8433                           ;main.c: 410:     return '0';
  8434  0040E4  0E30               	movlw	48
  8435  0040E6                     l218:
  8436                           
  8437                           ; BSR set to: 0
  8438  0040E6  0012               	return		;funcret
  8439  0040E8                     __end_of_grant_access:
  8440                           	callstack 0
  8441                           
  8442 ;; *************** function _strcmp *****************
  8443 ;; Defined at:
  8444 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcmp.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  l               2    0[BANK0 ] PTR const unsigned char 
  8447 ;;		 -> change_password@current_password(5), start@current_password(5), 
  8448 ;;  r               2    2[BANK0 ] PTR const unsigned char 
  8449 ;;		 -> user.password(5), update_password@user(6), user.password(5), grant_access@user(6), 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  2    0[BANK0 ] int 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8461 ;;      Params:         0       4       0       0       0       0       0       0       0
  8462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8463 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8464 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8465 ;;Total ram usage:        6 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 5
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_grant_access
  8472 ;;		_update_password
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text40
  8477  003EDA                     __ptext40:
  8478                           	callstack 0
  8479  003EDA                     _strcmp:
  8480                           	callstack 23
  8481  003EDA  EF74  F01F         	goto	l4527
  8482  003EDE                     l4525:
  8483  003EDE  0100               	movlb	0	; () banked
  8484  003EE0  4B60               	infsnz	strcmp@l& (0+255),f,b
  8485  003EE2  2B61               	incf	(strcmp@l+1)& (0+255),f,b
  8486  003EE4  4B62               	infsnz	strcmp@r& (0+255),f,b
  8487  003EE6  2B63               	incf	(strcmp@r+1)& (0+255),f,b
  8488  003EE8                     l4527:
  8489  003EE8  C062  FFD9         	movff	strcmp@r,fsr2l
  8490  003EEC  C063  FFDA         	movff	strcmp@r+1,fsr2h
  8491  003EF0  C060  FFE1         	movff	strcmp@l,fsr1l
  8492  003EF4  C061  FFE2         	movff	strcmp@l+1,fsr1h
  8493  003EF8  50DE               	movf	postinc2,w,c
  8494  003EFA  18E6               	xorwf	postinc1,w,c
  8495  003EFC  A4D8               	btfss	status,2,c
  8496  003EFE  EF83  F01F         	goto	u4921
  8497  003F02  EF85  F01F         	goto	u4920
  8498  003F06                     u4921:
  8499  003F06  EF91  F01F         	goto	l4531
  8500  003F0A                     u4920:
  8501  003F0A  C060  FFD9         	movff	strcmp@l,fsr2l
  8502  003F0E  C061  FFDA         	movff	strcmp@l+1,fsr2h
  8503  003F12  50DF               	movf	indf2,w,c
  8504  003F14  A4D8               	btfss	status,2,c
  8505  003F16  EF8F  F01F         	goto	u4931
  8506  003F1A  EF91  F01F         	goto	u4930
  8507  003F1E                     u4931:
  8508  003F1E  EF6F  F01F         	goto	l4525
  8509  003F22                     u4930:
  8510  003F22                     l4531:
  8511  003F22  C060  FFD9         	movff	strcmp@l,fsr2l
  8512  003F26  C061  FFDA         	movff	strcmp@l+1,fsr2h
  8513  003F2A  50DF               	movf	indf2,w,c
  8514  003F2C  0100               	movlb	0	; () banked
  8515  003F2E  6F64               	movwf	??_strcmp& (0+255),b
  8516  003F30  C062  FFD9         	movff	strcmp@r,fsr2l
  8517  003F34  C063  FFDA         	movff	strcmp@r+1,fsr2h
  8518  003F38  50DF               	movf	indf2,w,c
  8519  003F3A  6F65               	movwf	(??_strcmp+1)& (0+255),b
  8520  003F3C  5165               	movf	(??_strcmp+1)& (0+255),w,b
  8521  003F3E  5D64               	subwf	??_strcmp& (0+255),w,b
  8522  003F40  6F60               	movwf	?_strcmp& (0+255),b
  8523  003F42  6B61               	clrf	(?_strcmp+1)& (0+255),b
  8524  003F44  A0D8               	btfss	status,0,c
  8525  003F46  0761               	decf	(?_strcmp+1)& (0+255),f,b
  8526  003F48                     
  8527                           ; BSR set to: 0
  8528  003F48  0012               	return		;funcret
  8529  003F4A                     __end_of_strcmp:
  8530                           	callstack 0
  8531                           
  8532 ;; *************** function _EEPROM_read_user *****************
  8533 ;; Defined at:
  8534 ;;		line 425 in file "main.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  user            2    1[BANK0 ] PTR struct .
  8537 ;;		 -> update_password@user(6), grant_access@user(6), 
  8538 ;;  start_addres    1    3[BANK0 ] unsigned char 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;  i               1    5[BANK0 ] unsigned char 
  8541 ;;  address         1    4[BANK0 ] unsigned char 
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8551 ;;      Params:         0       3       0       0       0       0       0       0       0
  8552 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8554 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8555 ;;Total ram usage:        5 bytes
  8556 ;; Hardware stack levels used: 1
  8557 ;; Hardware stack levels required when called: 6
  8558 ;; This function calls:
  8559 ;;		_EEPROM_read
  8560 ;; This function is called by:
  8561 ;;		_grant_access
  8562 ;;		_update_password
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text41
  8567  0042C8                     __ptext41:
  8568                           	callstack 0
  8569  0042C8                     _EEPROM_read_user:
  8570                           	callstack 22
  8571  0042C8                     
  8572                           ;main.c: 426:     unsigned char address = start_address;
  8573  0042C8  C063  F064         	movff	EEPROM_read_user@start_address,EEPROM_read_user@address
  8574  0042CC                     
  8575                           ;main.c: 428:     for (unsigned char i = 0; i < 5; i++) {
  8576  0042CC  0E00               	movlw	0
  8577  0042CE  0100               	movlb	0	; () banked
  8578  0042D0  6F65               	movwf	EEPROM_read_user@i& (0+255),b
  8579  0042D2                     l4513:
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;main.c: 429:         user->password[i] = EEPROM_read(address);
  8583  0042D2  5165               	movf	EEPROM_read_user@i& (0+255),w,b
  8584  0042D4  2561               	addwf	EEPROM_read_user@user& (0+255),w,b
  8585  0042D6  6ED9               	movwf	fsr2l,c
  8586  0042D8  0E00               	movlw	0
  8587  0042DA  2162               	addwfc	(EEPROM_read_user@user+1)& (0+255),w,b
  8588  0042DC  6EDA               	movwf	fsr2h,c
  8589  0042DE  5164               	movf	EEPROM_read_user@address& (0+255),w,b
  8590  0042E0  EC11  F024         	call	_EEPROM_read
  8591  0042E4  6EDF               	movwf	indf2,c
  8592  0042E6                     
  8593                           ;main.c: 430:         address++;
  8594  0042E6  0100               	movlb	0	; () banked
  8595  0042E8  2B64               	incf	EEPROM_read_user@address& (0+255),f,b
  8596  0042EA                     
  8597                           ; BSR set to: 0
  8598                           ;main.c: 431:     }
  8599  0042EA  2B65               	incf	EEPROM_read_user@i& (0+255),f,b
  8600  0042EC                     
  8601                           ; BSR set to: 0
  8602  0042EC  0E04               	movlw	4
  8603  0042EE  6565               	cpfsgt	EEPROM_read_user@i& (0+255),b
  8604  0042F0  EF7C  F021         	goto	u4911
  8605  0042F4  EF7E  F021         	goto	u4910
  8606  0042F8                     u4911:
  8607  0042F8  EF69  F021         	goto	l4513
  8608  0042FC                     u4910:
  8609  0042FC                     
  8610                           ; BSR set to: 0
  8611                           ;main.c: 432:     user->accessLevel = EEPROM_read(address);
  8612  0042FC  EE20 F005          	lfsr	2,5
  8613  004300  5161               	movf	EEPROM_read_user@user& (0+255),w,b
  8614  004302  26D9               	addwf	fsr2l,f,c
  8615  004304  5162               	movf	(EEPROM_read_user@user+1)& (0+255),w,b
  8616  004306  22DA               	addwfc	fsr2h,f,c
  8617  004308  5164               	movf	EEPROM_read_user@address& (0+255),w,b
  8618  00430A  EC11  F024         	call	_EEPROM_read
  8619  00430E  6EDF               	movwf	indf2,c
  8620  004310  0012               	return		;funcret
  8621  004312                     __end_of_EEPROM_read_user:
  8622                           	callstack 0
  8623                           
  8624 ;; *************** function _get_password *****************
  8625 ;; Defined at:
  8626 ;;		line 322 in file "main.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  password        2   25[BANK0 ] PTR const unsigned char 
  8629 ;;		 -> change_password@new_password(5), change_password@current_password(5), start@current_password(5), 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;  entered_pass    5   29[BANK0 ] unsigned char [5]
  8632 ;;  i               2   35[BANK0 ] int 
  8633 ;;  key             1   34[BANK0 ] unsigned char 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8643 ;;      Params:         0       2       0       0       0       0       0       0       0
  8644 ;;      Locals:         0       8       0       0       0       0       0       0       0
  8645 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8646 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8647 ;;Total ram usage:       12 bytes
  8648 ;; Hardware stack levels used: 1
  8649 ;; Hardware stack levels required when called: 7
  8650 ;; This function calls:
  8651 ;;		_WriteCmdXLCD
  8652 ;;		_WriteDataXLCD
  8653 ;;		_read_keypad
  8654 ;;		_strcpy
  8655 ;; This function is called by:
  8656 ;;		_start
  8657 ;;		_change_password
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text42
  8662  003B88                     __ptext42:
  8663                           	callstack 0
  8664  003B88                     _get_password:
  8665                           	callstack 22
  8666  003B88                     
  8667                           ;main.c: 323:     char key;;main.c: 324:     char entered_password[5];;main.c: 325:     
      +                          int i = 0;
  8668  003B88  0E00               	movlw	0
  8669  003B8A  0100               	movlb	0	; () banked
  8670  003B8C  6F84               	movwf	(get_password@i+1)& (0+255),b
  8671  003B8E  0E00               	movlw	0
  8672  003B90  6F83               	movwf	get_password@i& (0+255),b
  8673                           
  8674                           ;main.c: 327:     while(i < 4) {
  8675  003B92  EF14  F01E         	goto	l4921
  8676  003B96                     l195:
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;main.c: 328:         ADCON0bits.GO_DONE = 1;
  8680  003B96  82C2               	bsf	194,1,c	;volatile
  8681  003B98                     
  8682                           ; BSR set to: 0
  8683                           ;main.c: 329:      key = read_keypad();
  8684  003B98  EC65  F012         	call	_read_keypad	;wreg free
  8685  003B9C  0100               	movlb	0	; () banked
  8686  003B9E  6F82               	movwf	get_password@key& (0+255),b
  8687  003BA0                     
  8688                           ; BSR set to: 0
  8689                           ;main.c: 330:         if (key != '\0') {
  8690  003BA0  5182               	movf	get_password@key& (0+255),w,b
  8691  003BA2  B4D8               	btfsc	status,2,c
  8692  003BA4  EFD6  F01D         	goto	u5451
  8693  003BA8  EFD8  F01D         	goto	u5450
  8694  003BAC                     u5451:
  8695  003BAC  EF14  F01E         	goto	l4921
  8696  003BB0                     u5450:
  8697  003BB0                     
  8698                           ; BSR set to: 0
  8699                           ;main.c: 331:             WriteCmdXLCD(0xC6 + i);
  8700  003BB0  5183               	movf	get_password@i& (0+255),w,b
  8701  003BB2  0FC6               	addlw	198
  8702  003BB4  EC7E  F022         	call	_WriteCmdXLCD
  8703                           
  8704                           ;main.c: 332:             WriteDataXLCD(key);
  8705  003BB8  0100               	movlb	0	; () banked
  8706  003BBA  5182               	movf	get_password@key& (0+255),w,b
  8707  003BBC  EC5C  F022         	call	_WriteDataXLCD
  8708  003BC0                     
  8709                           ;main.c: 333:             _delay((unsigned long)((200)*(20000000/4000.0)));
  8710  003BC0  0E06               	movlw	6
  8711  003BC2  0100               	movlb	0	; () banked
  8712  003BC4  6F7C               	movwf	(??_get_password+1)& (0+255),b
  8713  003BC6  0E13               	movlw	19
  8714  003BC8  6F7B               	movwf	??_get_password& (0+255),b
  8715  003BCA  0EAD               	movlw	173
  8716  003BCC                     u6377:
  8717  003BCC  2EE8               	decfsz	wreg,f,c
  8718  003BCE  D7FE               	bra	u6377
  8719  003BD0  2F7B               	decfsz	??_get_password& (0+255),f,b
  8720  003BD2  D7FC               	bra	u6377
  8721  003BD4  2F7C               	decfsz	(??_get_password+1)& (0+255),f,b
  8722  003BD6  D7FA               	bra	u6377
  8723  003BD8  D000               	nop2	
  8724  003BDA                     
  8725                           ;main.c: 334:             WriteCmdXLCD(0xC6 + i);
  8726  003BDA  0100               	movlb	0	; () banked
  8727  003BDC  5183               	movf	get_password@i& (0+255),w,b
  8728  003BDE  0FC6               	addlw	198
  8729  003BE0  EC7E  F022         	call	_WriteCmdXLCD
  8730  003BE4                     
  8731                           ;main.c: 335:             WriteDataXLCD('*');
  8732  003BE4  0E2A               	movlw	42
  8733  003BE6  EC5C  F022         	call	_WriteDataXLCD
  8734  003BEA                     
  8735                           ;main.c: 336:             entered_password[i] = key;
  8736  003BEA  0E7D               	movlw	low get_password@entered_password
  8737  003BEC  0100               	movlb	0	; () banked
  8738  003BEE  2583               	addwf	get_password@i& (0+255),w,b
  8739  003BF0  6ED9               	movwf	fsr2l,c
  8740  003BF2  0E00               	movlw	high get_password@entered_password
  8741  003BF4  2184               	addwfc	(get_password@i+1)& (0+255),w,b
  8742  003BF6  6EDA               	movwf	fsr2h,c
  8743  003BF8  C082  FFDF         	movff	get_password@key,indf2
  8744  003BFC                     
  8745                           ; BSR set to: 0
  8746                           ;main.c: 337:             i++;
  8747  003BFC  4B83               	infsnz	get_password@i& (0+255),f,b
  8748  003BFE  2B84               	incf	(get_password@i+1)& (0+255),f,b
  8749  003C00                     
  8750                           ; BSR set to: 0
  8751                           ;main.c: 339:             if (i == 4) strcpy(password, entered_password);
  8752  003C00  0E04               	movlw	4
  8753  003C02  1983               	xorwf	get_password@i& (0+255),w,b
  8754  003C04  1184               	iorwf	(get_password@i+1)& (0+255),w,b
  8755  003C06  A4D8               	btfss	status,2,c
  8756  003C08  EF08  F01E         	goto	u5461
  8757  003C0C  EF0A  F01E         	goto	u5460
  8758  003C10                     u5461:
  8759  003C10  EF14  F01E         	goto	l4921
  8760  003C14                     u5460:
  8761  003C14                     
  8762                           ; BSR set to: 0
  8763  003C14  C079  F060         	movff	get_password@password,strcpy@dest
  8764  003C18  C07A  F061         	movff	get_password@password+1,strcpy@dest+1
  8765  003C1C  0E7D               	movlw	low get_password@entered_password
  8766  003C1E  6F62               	movwf	strcpy@src& (0+255),b
  8767  003C20  0E00               	movlw	high get_password@entered_password
  8768  003C22  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8769  003C24  ECC1  F022         	call	_strcpy	;wreg free
  8770  003C28                     l4921:
  8771                           
  8772                           ;main.c: 327:     while(i < 4) {
  8773  003C28  0100               	movlb	0	; () banked
  8774  003C2A  BF84               	btfsc	(get_password@i+1)& (0+255),7,b
  8775  003C2C  EF21  F01E         	goto	u5471
  8776  003C30  5184               	movf	(get_password@i+1)& (0+255),w,b
  8777  003C32  E109               	bnz	u5470
  8778  003C34  0E04               	movlw	4
  8779  003C36  5D83               	subwf	get_password@i& (0+255),w,b
  8780  003C38  A0D8               	btfss	status,0,c
  8781  003C3A  EF21  F01E         	goto	u5471
  8782  003C3E  EF23  F01E         	goto	u5470
  8783  003C42                     u5471:
  8784  003C42  EFCB  F01D         	goto	l195
  8785  003C46                     u5470:
  8786  003C46                     
  8787                           ; BSR set to: 0
  8788  003C46  0012               	return		;funcret
  8789  003C48                     __end_of_get_password:
  8790                           	callstack 0
  8791                           
  8792 ;; *************** function _strcpy *****************
  8793 ;; Defined at:
  8794 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  8797 ;;		 -> update_password@user(6), change_password@new_password(5), change_password@current_password(5), start@current_pas
      +sword(5), 
  8798 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  8799 ;;		 -> get_password@entered_password(5), change_password@new_password(5), 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  d               2    6[BANK0 ] PTR unsigned char 
  8802 ;;		 -> update_password@user(6), change_password@new_password(5), change_password@current_password(5), start@current_pas
      +sword(5), 
  8803 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  8804 ;;		 -> get_password@entered_password(5), change_password@new_password(5), 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  2    0[BANK0 ] PTR unsigned char 
  8807 ;; Registers used:
  8808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8814 ;;      Params:         0       4       0       0       0       0       0       0       0
  8815 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8817 ;;      Totals:         0       8       0       0       0       0       0       0       0
  8818 ;;Total ram usage:        8 bytes
  8819 ;; Hardware stack levels used: 1
  8820 ;; Hardware stack levels required when called: 5
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_get_password
  8825 ;;		_update_password
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text43
  8830  004582                     __ptext43:
  8831                           	callstack 0
  8832  004582                     _strcpy:
  8833                           	callstack 23
  8834  004582  C062  F064         	movff	strcpy@src,strcpy@s
  8835  004586  C063  F065         	movff	strcpy@src+1,strcpy@s+1
  8836  00458A  C060  F066         	movff	strcpy@dest,strcpy@d
  8837  00458E  C061  F067         	movff	strcpy@dest+1,strcpy@d+1
  8838  004592                     l4469:
  8839  004592  C064  FFD9         	movff	strcpy@s,fsr2l
  8840  004596  C065  FFDA         	movff	strcpy@s+1,fsr2h
  8841  00459A  0100               	movlb	0	; () banked
  8842  00459C  4B64               	infsnz	strcpy@s& (0+255),f,b
  8843  00459E  2B65               	incf	(strcpy@s+1)& (0+255),f,b
  8844  0045A0  C066  FFE1         	movff	strcpy@d,fsr1l
  8845  0045A4  C067  FFE2         	movff	strcpy@d+1,fsr1h
  8846  0045A8  4B66               	infsnz	strcpy@d& (0+255),f,b
  8847  0045AA  2B67               	incf	(strcpy@d+1)& (0+255),f,b
  8848  0045AC  CFDF FFE7          	movff	indf2,indf1
  8849  0045B0  50E7               	movf	indf1,w,c
  8850  0045B2  A4D8               	btfss	status,2,c
  8851  0045B4  EFDE  F022         	goto	u4811
  8852  0045B8  EFE0  F022         	goto	u4810
  8853  0045BC                     u4811:
  8854  0045BC  EFC9  F022         	goto	l4469
  8855  0045C0                     u4810:
  8856  0045C0                     
  8857                           ; BSR set to: 0
  8858  0045C0  0012               	return		;funcret
  8859  0045C2                     __end_of_strcpy:
  8860                           	callstack 0
  8861                           
  8862 ;; *************** function _read_keypad *****************
  8863 ;; Defined at:
  8864 ;;		line 615 in file "main.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;  keys           16    7[BANK0 ] const unsigned char [4][
  8869 ;;  col             2   23[BANK0 ] int 
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      unsigned char 
  8872 ;; Registers used:
  8873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8879 ;;      Params:         0       0       0       0       0       0       0       0       0
  8880 ;;      Locals:         0      18       0       0       0       0       0       0       0
  8881 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8882 ;;      Totals:         0      20       0       0       0       0       0       0       0
  8883 ;;Total ram usage:       20 bytes
  8884 ;; Hardware stack levels used: 1
  8885 ;; Hardware stack levels required when called: 6
  8886 ;; This function calls:
  8887 ;;		_delay_ms
  8888 ;; This function is called by:
  8889 ;;		_main
  8890 ;;		_show_status_relay
  8891 ;;		_get_password
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           	psect	text44
  8896  0024CA                     __ptext44:
  8897                           	callstack 0
  8898  0024CA                     _read_keypad:
  8899                           	callstack 22
  8900  0024CA                     
  8901                           ;main.c: 617:     const char keys[4][4] = {
  8902  0024CA  0E01               	movlw	low read_keypad@F4312
  8903  0024CC  6EF6               	movwf	tblptrl,c
  8904  0024CE                     	if	1	;There is more than 1 active tblptr byte
  8905  0024CE  0E08               	movlw	high read_keypad@F4312
  8906  0024D0  6EF7               	movwf	tblptrh,c
  8907  0024D2                     	endif
  8908  0024D2                     	if	0	;There are less than 3 active tblptr bytes
  8909  0024D2                     	endif
  8910  0024D2  EE20  F067         	lfsr	2,read_keypad@keys
  8911  0024D6  0E0F               	movlw	15
  8912  0024D8                     u4670:
  8913  0024D8  0009               	tblrd		*+
  8914  0024DA  CFF5 FFDE          	movff	tablat,postinc2
  8915  0024DE  06E8               	decf	wreg,f,c
  8916  0024E0  E2FB               	bc	u4670
  8917  0024E2                     
  8918                           ;main.c: 623:    int col = 0;
  8919  0024E2  0E00               	movlw	0
  8920  0024E4  0100               	movlb	0	; () banked
  8921  0024E6  6F78               	movwf	(read_keypad@col+1)& (0+255),b
  8922  0024E8  0E00               	movlw	0
  8923  0024EA  6F77               	movwf	read_keypad@col& (0+255),b
  8924  0024EC  EF90  F012         	goto	l4375
  8925  0024F0                     l291:
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;main.c: 628:                 PORTBbits.RB0 = 0;
  8929  0024F0  9081               	bcf	129,0,c	;volatile
  8930                           
  8931                           ;main.c: 629:                 PORTBbits.RB1 = 1;
  8932  0024F2  8281               	bsf	129,1,c	;volatile
  8933                           
  8934                           ;main.c: 630:                 PORTBbits.RB2 = 1;
  8935  0024F4  8481               	bsf	129,2,c	;volatile
  8936                           
  8937                           ;main.c: 631:                 PORTBbits.RB3 = 1;
  8938  0024F6  8681               	bsf	129,3,c	;volatile
  8939                           
  8940                           ;main.c: 632:                 break;
  8941  0024F8  EFAE  F012         	goto	l292
  8942  0024FC                     l293:
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;main.c: 634:                 PORTBbits.RB0 = 1;
  8946  0024FC  8081               	bsf	129,0,c	;volatile
  8947                           
  8948                           ;main.c: 635:                 PORTBbits.RB1 = 0;
  8949  0024FE  9281               	bcf	129,1,c	;volatile
  8950                           
  8951                           ;main.c: 636:                 PORTBbits.RB2 = 1;
  8952  002500  8481               	bsf	129,2,c	;volatile
  8953                           
  8954                           ;main.c: 637:                 PORTBbits.RB3 = 1;
  8955  002502  8681               	bsf	129,3,c	;volatile
  8956                           
  8957                           ;main.c: 638:                 break;
  8958  002504  EFAE  F012         	goto	l292
  8959  002508                     l294:
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;main.c: 640:                 PORTBbits.RB0 = 1;
  8963  002508  8081               	bsf	129,0,c	;volatile
  8964                           
  8965                           ;main.c: 641:                 PORTBbits.RB1 = 1;
  8966  00250A  8281               	bsf	129,1,c	;volatile
  8967                           
  8968                           ;main.c: 642:                 PORTBbits.RB2 = 0;
  8969  00250C  9481               	bcf	129,2,c	;volatile
  8970                           
  8971                           ;main.c: 643:                 PORTBbits.RB3 = 1;
  8972  00250E  8681               	bsf	129,3,c	;volatile
  8973                           
  8974                           ;main.c: 644:                 break;
  8975  002510  EFAE  F012         	goto	l292
  8976  002514                     l295:
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;main.c: 646:                 PORTBbits.RB0 = 1;
  8980  002514  8081               	bsf	129,0,c	;volatile
  8981                           
  8982                           ;main.c: 647:                 PORTBbits.RB1 = 1;
  8983  002516  8281               	bsf	129,1,c	;volatile
  8984                           
  8985                           ;main.c: 648:                 PORTBbits.RB2 = 1;
  8986  002518  8481               	bsf	129,2,c	;volatile
  8987                           
  8988                           ;main.c: 649:                 PORTBbits.RB3 = 0;
  8989  00251A  9681               	bcf	129,3,c	;volatile
  8990                           
  8991                           ;main.c: 650:                 break;
  8992  00251C  EFAE  F012         	goto	l292
  8993  002520                     l4375:
  8994                           
  8995                           ; BSR set to: 0
  8996  002520  C077  F065         	movff	read_keypad@col,??_read_keypad
  8997  002524  C078  F066         	movff	read_keypad@col+1,??_read_keypad+1
  8998                           
  8999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9000                           ; Switch size 1, requested type "simple"
  9001                           ; Number of cases is 1, Range of values is 0 to 0
  9002                           ; switch strategies available:
  9003                           ; Name         Instructions Cycles
  9004                           ; simple_byte            4     3 (average)
  9005                           ;	Chosen strategy is simple_byte
  9006  002528  5166               	movf	(??_read_keypad+1)& (0+255),w,b
  9007  00252A  0A00               	xorlw	0	; case 0
  9008  00252C  B4D8               	btfsc	status,2,c
  9009  00252E  EF9B  F012         	goto	l5619
  9010  002532  EFAE  F012         	goto	l292
  9011  002536                     l5619:
  9012                           
  9013                           ; BSR set to: 0
  9014                           ; Switch size 1, requested type "simple"
  9015                           ; Number of cases is 4, Range of values is 0 to 3
  9016                           ; switch strategies available:
  9017                           ; Name         Instructions Cycles
  9018                           ; simple_byte           13     7 (average)
  9019                           ;	Chosen strategy is simple_byte
  9020  002536  5165               	movf	??_read_keypad& (0+255),w,b
  9021  002538  0A00               	xorlw	0	; case 0
  9022  00253A  B4D8               	btfsc	status,2,c
  9023  00253C  EF78  F012         	goto	l291
  9024  002540  0A01               	xorlw	1	; case 1
  9025  002542  B4D8               	btfsc	status,2,c
  9026  002544  EF7E  F012         	goto	l293
  9027  002548  0A03               	xorlw	3	; case 2
  9028  00254A  B4D8               	btfsc	status,2,c
  9029  00254C  EF84  F012         	goto	l294
  9030  002550  0A01               	xorlw	1	; case 3
  9031  002552  B4D8               	btfsc	status,2,c
  9032  002554  EF8A  F012         	goto	l295
  9033  002558  EFAE  F012         	goto	l292
  9034  00255C                     l292:
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;main.c: 653:                if(PORTBbits.RB4 == 0) {
  9038  00255C  B881               	btfsc	129,4,c	;volatile
  9039  00255E  EFB3  F012         	goto	u4681
  9040  002562  EFB5  F012         	goto	u4680
  9041  002566                     u4681:
  9042  002566  EFCF  F012         	goto	l296
  9043  00256A                     u4680:
  9044  00256A                     
  9045                           ; BSR set to: 0
  9046                           ;main.c: 654:             delay_ms(300);
  9047  00256A  0E01               	movlw	1
  9048  00256C  6F61               	movwf	(delay_ms@ms+1)& (0+255),b
  9049  00256E  0E2C               	movlw	44
  9050  002570  6F60               	movwf	delay_ms@ms& (0+255),b
  9051  002572  EC3A  F022         	call	_delay_ms	;wreg free
  9052  002576                     
  9053                           ;main.c: 655:             return keys[col][0];
  9054  002576  0E67               	movlw	low read_keypad@keys
  9055  002578  0100               	movlb	0	; () banked
  9056  00257A  6F65               	movwf	??_read_keypad& (0+255),b
  9057  00257C  0E00               	movlw	high read_keypad@keys
  9058  00257E  6F66               	movwf	(??_read_keypad+1)& (0+255),b
  9059  002580  90D8               	bcf	status,0,c
  9060  002582  3577               	rlcf	read_keypad@col& (0+255),w,b
  9061  002584  6ED9               	movwf	fsr2l,c
  9062  002586  3578               	rlcf	(read_keypad@col+1)& (0+255),w,b
  9063  002588  6EDA               	movwf	fsr2h,c
  9064  00258A  90D8               	bcf	status,0,c
  9065  00258C  36D9               	rlcf	fsr2l,f,c
  9066  00258E  36DA               	rlcf	fsr2h,f,c
  9067  002590  5165               	movf	??_read_keypad& (0+255),w,b
  9068  002592  26D9               	addwf	fsr2l,f,c
  9069  002594  5166               	movf	(??_read_keypad+1)& (0+255),w,b
  9070  002596  22DA               	addwfc	fsr2h,f,c
  9071  002598  50DF               	movf	indf2,w,c
  9072  00259A  EF4F  F013         	goto	l297
  9073  00259E                     l296:
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;main.c: 657:         if(PORTBbits.RB5 == 0) {
  9077  00259E  BA81               	btfsc	129,5,c	;volatile
  9078  0025A0  EFD4  F012         	goto	u4691
  9079  0025A4  EFD6  F012         	goto	u4690
  9080  0025A8                     u4691:
  9081  0025A8  EFF4  F012         	goto	l298
  9082  0025AC                     u4690:
  9083  0025AC                     
  9084                           ; BSR set to: 0
  9085                           ;main.c: 658:             delay_ms(300);
  9086  0025AC  0E01               	movlw	1
  9087  0025AE  6F61               	movwf	(delay_ms@ms+1)& (0+255),b
  9088  0025B0  0E2C               	movlw	44
  9089  0025B2  6F60               	movwf	delay_ms@ms& (0+255),b
  9090  0025B4  EC3A  F022         	call	_delay_ms	;wreg free
  9091  0025B8                     
  9092                           ;main.c: 659:             return keys[col][1];
  9093  0025B8  C077  F065         	movff	read_keypad@col,??_read_keypad
  9094  0025BC  C078  F066         	movff	read_keypad@col+1,??_read_keypad+1
  9095  0025C0  0100               	movlb	0	; () banked
  9096  0025C2  90D8               	bcf	status,0,c
  9097  0025C4  3765               	rlcf	??_read_keypad& (0+255),f,b
  9098  0025C6  3766               	rlcf	(??_read_keypad+1)& (0+255),f,b
  9099  0025C8  90D8               	bcf	status,0,c
  9100  0025CA  3765               	rlcf	??_read_keypad& (0+255),f,b
  9101  0025CC  3766               	rlcf	(??_read_keypad+1)& (0+255),f,b
  9102  0025CE  0E01               	movlw	1
  9103  0025D0  2765               	addwf	??_read_keypad& (0+255),f,b
  9104  0025D2  0E00               	movlw	0
  9105  0025D4  2366               	addwfc	(??_read_keypad+1)& (0+255),f,b
  9106  0025D6  0E67               	movlw	low read_keypad@keys
  9107  0025D8  2565               	addwf	??_read_keypad& (0+255),w,b
  9108  0025DA  6ED9               	movwf	fsr2l,c
  9109  0025DC  0E00               	movlw	high read_keypad@keys
  9110  0025DE  2166               	addwfc	(??_read_keypad+1)& (0+255),w,b
  9111  0025E0  6EDA               	movwf	fsr2h,c
  9112  0025E2  50DF               	movf	indf2,w,c
  9113  0025E4  EF4F  F013         	goto	l297
  9114  0025E8                     l298:
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;main.c: 661:         if(PORTBbits.RB6 == 0) {
  9118  0025E8  BC81               	btfsc	129,6,c	;volatile
  9119  0025EA  EFF9  F012         	goto	u4701
  9120  0025EE  EFFB  F012         	goto	u4700
  9121  0025F2                     u4701:
  9122  0025F2  EF19  F013         	goto	l299
  9123  0025F6                     u4700:
  9124  0025F6                     
  9125                           ; BSR set to: 0
  9126                           ;main.c: 662:             delay_ms(300);
  9127  0025F6  0E01               	movlw	1
  9128  0025F8  6F61               	movwf	(delay_ms@ms+1)& (0+255),b
  9129  0025FA  0E2C               	movlw	44
  9130  0025FC  6F60               	movwf	delay_ms@ms& (0+255),b
  9131  0025FE  EC3A  F022         	call	_delay_ms	;wreg free
  9132  002602                     
  9133                           ;main.c: 663:             return keys[col][2];
  9134  002602  C077  F065         	movff	read_keypad@col,??_read_keypad
  9135  002606  C078  F066         	movff	read_keypad@col+1,??_read_keypad+1
  9136  00260A  0100               	movlb	0	; () banked
  9137  00260C  90D8               	bcf	status,0,c
  9138  00260E  3765               	rlcf	??_read_keypad& (0+255),f,b
  9139  002610  3766               	rlcf	(??_read_keypad+1)& (0+255),f,b
  9140  002612  90D8               	bcf	status,0,c
  9141  002614  3765               	rlcf	??_read_keypad& (0+255),f,b
  9142  002616  3766               	rlcf	(??_read_keypad+1)& (0+255),f,b
  9143  002618  0E02               	movlw	2
  9144  00261A  2765               	addwf	??_read_keypad& (0+255),f,b
  9145  00261C  0E00               	movlw	0
  9146  00261E  2366               	addwfc	(??_read_keypad+1)& (0+255),f,b
  9147  002620  0E67               	movlw	low read_keypad@keys
  9148  002622  2565               	addwf	??_read_keypad& (0+255),w,b
  9149  002624  6ED9               	movwf	fsr2l,c
  9150  002626  0E00               	movlw	high read_keypad@keys
  9151  002628  2166               	addwfc	(??_read_keypad+1)& (0+255),w,b
  9152  00262A  6EDA               	movwf	fsr2h,c
  9153  00262C  50DF               	movf	indf2,w,c
  9154  00262E  EF4F  F013         	goto	l297
  9155  002632                     l299:
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;main.c: 665:         if(PORTBbits.RB7 == 0) {
  9159  002632  BE81               	btfsc	129,7,c	;volatile
  9160  002634  EF1E  F013         	goto	u4711
  9161  002638  EF20  F013         	goto	u4710
  9162  00263C                     u4711:
  9163  00263C  EF3E  F013         	goto	l4401
  9164  002640                     u4710:
  9165  002640                     
  9166                           ; BSR set to: 0
  9167                           ;main.c: 666:             delay_ms(300);
  9168  002640  0E01               	movlw	1
  9169  002642  6F61               	movwf	(delay_ms@ms+1)& (0+255),b
  9170  002644  0E2C               	movlw	44
  9171  002646  6F60               	movwf	delay_ms@ms& (0+255),b
  9172  002648  EC3A  F022         	call	_delay_ms	;wreg free
  9173  00264C                     
  9174                           ;main.c: 667:             return keys[col][3];
  9175  00264C  C077  F065         	movff	read_keypad@col,??_read_keypad
  9176  002650  C078  F066         	movff	read_keypad@col+1,??_read_keypad+1
  9177  002654  0100               	movlb	0	; () banked
  9178  002656  90D8               	bcf	status,0,c
  9179  002658  3765               	rlcf	??_read_keypad& (0+255),f,b
  9180  00265A  3766               	rlcf	(??_read_keypad+1)& (0+255),f,b
  9181  00265C  90D8               	bcf	status,0,c
  9182  00265E  3765               	rlcf	??_read_keypad& (0+255),f,b
  9183  002660  3766               	rlcf	(??_read_keypad+1)& (0+255),f,b
  9184  002662  0E03               	movlw	3
  9185  002664  2765               	addwf	??_read_keypad& (0+255),f,b
  9186  002666  0E00               	movlw	0
  9187  002668  2366               	addwfc	(??_read_keypad+1)& (0+255),f,b
  9188  00266A  0E67               	movlw	low read_keypad@keys
  9189  00266C  2565               	addwf	??_read_keypad& (0+255),w,b
  9190  00266E  6ED9               	movwf	fsr2l,c
  9191  002670  0E00               	movlw	high read_keypad@keys
  9192  002672  2166               	addwfc	(??_read_keypad+1)& (0+255),w,b
  9193  002674  6EDA               	movwf	fsr2h,c
  9194  002676  50DF               	movf	indf2,w,c
  9195  002678  EF4F  F013         	goto	l297
  9196  00267C                     l4401:
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;main.c: 669:         col++;
  9200  00267C  4B77               	infsnz	read_keypad@col& (0+255),f,b
  9201  00267E  2B78               	incf	(read_keypad@col+1)& (0+255),f,b
  9202  002680                     
  9203                           ; BSR set to: 0
  9204                           ;main.c: 670:     } while(col < 4);
  9205  002680  BF78               	btfsc	(read_keypad@col+1)& (0+255),7,b
  9206  002682  EF4C  F013         	goto	u4721
  9207  002686  5178               	movf	(read_keypad@col+1)& (0+255),w,b
  9208  002688  E109               	bnz	u4720
  9209  00268A  0E04               	movlw	4
  9210  00268C  5D77               	subwf	read_keypad@col& (0+255),w,b
  9211  00268E  A0D8               	btfss	status,0,c
  9212  002690  EF4C  F013         	goto	u4721
  9213  002694  EF4E  F013         	goto	u4720
  9214  002698                     u4721:
  9215  002698  EF90  F012         	goto	l4375
  9216  00269C                     u4720:
  9217  00269C                     
  9218                           ; BSR set to: 0
  9219                           ;main.c: 671:     return '\0';
  9220  00269C  0E00               	movlw	0
  9221  00269E                     l297:
  9222                           
  9223                           ; BSR set to: 0
  9224  00269E  0012               	return		;funcret
  9225  0026A0                     __end_of_read_keypad:
  9226                           	callstack 0
  9227                           
  9228 ;; *************** function _delay_ms *****************
  9229 ;; Defined at:
  9230 ;;		line 547 in file "main.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  ms              2    0[BANK0 ] int 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  i               2    3[BANK0 ] int 
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg, status,2, status,0
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9244 ;;      Params:         0       2       0       0       0       0       0       0       0
  9245 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9246 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9247 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9248 ;;Total ram usage:        5 bytes
  9249 ;; Hardware stack levels used: 1
  9250 ;; Hardware stack levels required when called: 5
  9251 ;; This function calls:
  9252 ;;		Nothing
  9253 ;; This function is called by:
  9254 ;;		_read_keypad
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text45
  9259  004474                     __ptext45:
  9260                           	callstack 0
  9261  004474                     _delay_ms:
  9262                           	callstack 22
  9263  004474                     
  9264                           ;main.c: 548:     for(int i = 0; i < ms; i++) {
  9265  004474  0E00               	movlw	0
  9266  004476  0100               	movlb	0	; () banked
  9267  004478  6F64               	movwf	(delay_ms@i+1)& (0+255),b
  9268  00447A  0E00               	movlw	0
  9269  00447C  6F63               	movwf	delay_ms@i& (0+255),b
  9270  00447E  EF4C  F022         	goto	l281
  9271  004482                     l3909:
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;main.c: 549:         _delay((unsigned long)((1)*(20000000/4000.0)));
  9275  004482  0E07               	movlw	7
  9276  004484  0100               	movlb	0	; () banked
  9277  004486  6F62               	movwf	??_delay_ms& (0+255),b
  9278  004488  0E7D               	movlw	125
  9279  00448A                     u6387:
  9280  00448A  2EE8               	decfsz	wreg,f,c
  9281  00448C  D7FE               	bra	u6387
  9282  00448E  2F62               	decfsz	??_delay_ms& (0+255),f,b
  9283  004490  D7FC               	bra	u6387
  9284  004492                     
  9285                           ;main.c: 550:     }
  9286  004492  0100               	movlb	0	; () banked
  9287  004494  4B63               	infsnz	delay_ms@i& (0+255),f,b
  9288  004496  2B64               	incf	(delay_ms@i+1)& (0+255),f,b
  9289  004498                     l281:
  9290                           
  9291                           ; BSR set to: 0
  9292  004498  5160               	movf	delay_ms@ms& (0+255),w,b
  9293  00449A  5D63               	subwf	delay_ms@i& (0+255),w,b
  9294  00449C  5164               	movf	(delay_ms@i+1)& (0+255),w,b
  9295  00449E  0A80               	xorlw	128
  9296  0044A0  6F62               	movwf	??_delay_ms& (0+255),b
  9297  0044A2  5161               	movf	(delay_ms@ms+1)& (0+255),w,b
  9298  0044A4  0A80               	xorlw	128
  9299  0044A6  5962               	subwfb	??_delay_ms& (0+255),w,b
  9300  0044A8  A0D8               	btfss	status,0,c
  9301  0044AA  EF59  F022         	goto	u3961
  9302  0044AE  EF5B  F022         	goto	u3960
  9303  0044B2                     u3961:
  9304  0044B2  EF41  F022         	goto	l3909
  9305  0044B6                     u3960:
  9306  0044B6                     
  9307                           ; BSR set to: 0
  9308  0044B6  0012               	return		;funcret
  9309  0044B8                     __end_of_delay_ms:
  9310                           	callstack 0
  9311                           
  9312 ;; *************** function _WriteDataXLCD *****************
  9313 ;; Defined at:
  9314 ;;		line 449 in file "nxlcd.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;  data            1    wreg     unsigned char 
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;  data            1    0[BANK0 ] unsigned char 
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  1    wreg      void 
  9321 ;; Registers used:
  9322 ;;		wreg, status,2, status,0, cstack
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9328 ;;      Params:         0       0       0       0       0       0       0       0       0
  9329 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9331 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9332 ;;Total ram usage:        1 bytes
  9333 ;; Hardware stack levels used: 1
  9334 ;; Hardware stack levels required when called: 6
  9335 ;; This function calls:
  9336 ;;		_DelayFor18TCY
  9337 ;; This function is called by:
  9338 ;;		_get_password
  9339 ;;		_putsXLCD
  9340 ;;		_putrsXLCD
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           	psect	text46
  9345  0044B8                     __ptext46:
  9346                           	callstack 0
  9347  0044B8                     _WriteDataXLCD:
  9348                           	callstack 21
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;incstack = 0
  9352                           ;WriteDataXLCD@data stored from wreg
  9353  0044B8  0100               	movlb	0	; () banked
  9354  0044BA  6F60               	movwf	WriteDataXLCD@data& (0+255),b
  9355  0044BC                     
  9356                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  9357  0044BC  0E0F               	movlw	15
  9358  0044BE  1695               	andwf	149,f,c	;volatile
  9359                           
  9360                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  9361  0044C0  0E0F               	movlw	15
  9362  0044C2  1683               	andwf	131,f,c	;volatile
  9363                           
  9364                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  9365  0044C4  0100               	movlb	0	; () banked
  9366  0044C6  5160               	movf	WriteDataXLCD@data& (0+255),w,b
  9367  0044C8  0BF0               	andlw	240
  9368  0044CA  1283               	iorwf	131,f,c	;volatile
  9369  0044CC                     
  9370                           ; BSR set to: 0
  9371                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  9372  0044CC  808D               	bsf	141,0,c	;volatile
  9373  0044CE                     
  9374                           ; BSR set to: 0
  9375                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  9376  0044CE  948D               	bcf	141,2,c	;volatile
  9377  0044D0                     
  9378                           ; BSR set to: 0
  9379                           ;nxlcd.c: 474:         DelayFor18TCY();
  9380  0044D0  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  9381  0044D4                     
  9382                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  9383  0044D4  828D               	bsf	141,1,c	;volatile
  9384  0044D6                     
  9385                           ;nxlcd.c: 476:         DelayFor18TCY();
  9386  0044D6  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  9387  0044DA                     
  9388                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  9389  0044DA  928D               	bcf	141,1,c	;volatile
  9390                           
  9391                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  9392  0044DC  0E0F               	movlw	15
  9393  0044DE  1683               	andwf	131,f,c	;volatile
  9394                           
  9395                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  9396  0044E0  0100               	movlb	0	; () banked
  9397  0044E2  3960               	swapf	WriteDataXLCD@data& (0+255),w,b
  9398  0044E4  0BF0               	andlw	240
  9399  0044E6  0BF0               	andlw	240
  9400  0044E8  1283               	iorwf	131,f,c	;volatile
  9401  0044EA                     
  9402                           ; BSR set to: 0
  9403                           ;nxlcd.c: 485:         DelayFor18TCY();
  9404  0044EA  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  9405  0044EE                     
  9406                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  9407  0044EE  828D               	bsf	141,1,c	;volatile
  9408  0044F0                     
  9409                           ;nxlcd.c: 487:         DelayFor18TCY();
  9410  0044F0  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  9411  0044F4                     
  9412                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  9413  0044F4  928D               	bcf	141,1,c	;volatile
  9414                           
  9415                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  9416  0044F6  0EF0               	movlw	240
  9417  0044F8  1295               	iorwf	149,f,c	;volatile
  9418  0044FA  0012               	return		;funcret
  9419  0044FC                     __end_of_WriteDataXLCD:
  9420                           	callstack 0
  9421                           
  9422 ;; *************** function _delay_show_lcd *****************
  9423 ;; Defined at:
  9424 ;;		line 275 in file "main.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;		None
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;		None
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		wreg
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9438 ;;      Params:         0       0       0       0       0       0       0       0       0
  9439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9440 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9441 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9442 ;;Total ram usage:        2 bytes
  9443 ;; Hardware stack levels used: 1
  9444 ;; Hardware stack levels required when called: 5
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_start
  9449 ;;		_show_status_relay
  9450 ;;		_change_password
  9451 ;; This function uses a non-reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text47
  9455  0047CC                     __ptext47:
  9456                           	callstack 0
  9457  0047CC                     _delay_show_lcd:
  9458                           	callstack 23
  9459  0047CC                     
  9460                           ;main.c: 276:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  9461  0047CC  0E1A               	movlw	26
  9462  0047CE  0100               	movlb	0	; () banked
  9463  0047D0  6F61               	movwf	(??_delay_show_lcd+1)& (0+255),b
  9464  0047D2  0E5E               	movlw	94
  9465  0047D4  6F60               	movwf	??_delay_show_lcd& (0+255),b
  9466  0047D6  0E6E               	movlw	110
  9467  0047D8                     u6397:
  9468  0047D8  2EE8               	decfsz	wreg,f,c
  9469  0047DA  D7FE               	bra	u6397
  9470  0047DC  2F60               	decfsz	??_delay_show_lcd& (0+255),f,b
  9471  0047DE  D7FC               	bra	u6397
  9472  0047E0  2F61               	decfsz	(??_delay_show_lcd+1)& (0+255),f,b
  9473  0047E2  D7FA               	bra	u6397
  9474  0047E4  F000               	nop	
  9475  0047E6  0012               	return		;funcret
  9476  0047E8                     __end_of_delay_show_lcd:
  9477                           	callstack 0
  9478                           
  9479 ;; *************** function _clean_lcd *****************
  9480 ;; Defined at:
  9481 ;;		line 269 in file "main.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;		None
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		wreg, status,2, status,0, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9495 ;;      Params:         0       0       0       0       0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9497 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9498 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9499 ;;Total ram usage:        1 bytes
  9500 ;; Hardware stack levels used: 1
  9501 ;; Hardware stack levels required when called: 7
  9502 ;; This function calls:
  9503 ;;		_WriteCmdXLCD
  9504 ;; This function is called by:
  9505 ;;		_main
  9506 ;;		_start
  9507 ;;		_show_status_relay
  9508 ;;		_change_password
  9509 ;;		_show_temp
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text48
  9514  0047AC                     __ptext48:
  9515                           	callstack 0
  9516  0047AC                     _clean_lcd:
  9517                           	callstack 21
  9518  0047AC                     
  9519                           ;main.c: 270:     WriteCmdXLCD(0x01);
  9520  0047AC  0E01               	movlw	1
  9521  0047AE  EC7E  F022         	call	_WriteCmdXLCD
  9522  0047B2                     
  9523                           ;main.c: 271:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9524  0047B2  0E41               	movlw	65
  9525  0047B4  0100               	movlb	0	; () banked
  9526  0047B6  6F61               	movwf	??_clean_lcd& (0+255),b
  9527  0047B8  0EEE               	movlw	238
  9528  0047BA                     u6407:
  9529  0047BA  2EE8               	decfsz	wreg,f,c
  9530  0047BC  D7FE               	bra	u6407
  9531  0047BE  2F61               	decfsz	??_clean_lcd& (0+255),f,b
  9532  0047C0  D7FC               	bra	u6407
  9533  0047C2  F000               	nop	
  9534  0047C4                     
  9535                           ;main.c: 272:     WriteCmdXLCD(0x80);
  9536  0047C4  0E80               	movlw	128
  9537  0047C6  EC7E  F022         	call	_WriteCmdXLCD
  9538  0047CA  0012               	return		;funcret
  9539  0047CC                     __end_of_clean_lcd:
  9540                           	callstack 0
  9541                           
  9542 ;; *************** function _WriteCmdXLCD *****************
  9543 ;; Defined at:
  9544 ;;		line 388 in file "nxlcd.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  cmd             1    wreg     unsigned char 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;  cmd             1    0[BANK0 ] unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      void 
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0
  9559 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9561 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9562 ;;Total ram usage:        1 bytes
  9563 ;; Hardware stack levels used: 1
  9564 ;; Hardware stack levels required when called: 6
  9565 ;; This function calls:
  9566 ;;		_DelayFor18TCY
  9567 ;; This function is called by:
  9568 ;;		_start
  9569 ;;		_show_status_relay
  9570 ;;		_clean_lcd
  9571 ;;		_change_password
  9572 ;;		_get_password
  9573 ;;		_show_temp
  9574 ;;		_OpenXLCD
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           	psect	text49
  9579  0044FC                     __ptext49:
  9580                           	callstack 0
  9581  0044FC                     _WriteCmdXLCD:
  9582                           	callstack 21
  9583                           
  9584                           ;incstack = 0
  9585                           ;WriteCmdXLCD@cmd stored from wreg
  9586  0044FC  0100               	movlb	0	; () banked
  9587  0044FE  6F60               	movwf	WriteCmdXLCD@cmd& (0+255),b
  9588  004500                     
  9589                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  9590  004500  0E0F               	movlw	15
  9591  004502  1695               	andwf	149,f,c	;volatile
  9592                           
  9593                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  9594  004504  0E0F               	movlw	15
  9595  004506  1683               	andwf	131,f,c	;volatile
  9596                           
  9597                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  9598  004508  0100               	movlb	0	; () banked
  9599  00450A  5160               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  9600  00450C  0BF0               	andlw	240
  9601  00450E  1283               	iorwf	131,f,c	;volatile
  9602  004510                     
  9603                           ; BSR set to: 0
  9604                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  9605  004510  948D               	bcf	141,2,c	;volatile
  9606  004512                     
  9607                           ; BSR set to: 0
  9608                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  9609  004512  908D               	bcf	141,0,c	;volatile
  9610  004514                     
  9611                           ; BSR set to: 0
  9612                           ;nxlcd.c: 413:         DelayFor18TCY();
  9613  004514  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  9614  004518                     
  9615                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  9616  004518  828D               	bsf	141,1,c	;volatile
  9617  00451A                     
  9618                           ;nxlcd.c: 415:         DelayFor18TCY();
  9619  00451A  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  9620  00451E                     
  9621                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  9622  00451E  928D               	bcf	141,1,c	;volatile
  9623                           
  9624                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  9625  004520  0E0F               	movlw	15
  9626  004522  1683               	andwf	131,f,c	;volatile
  9627                           
  9628                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  9629  004524  0100               	movlb	0	; () banked
  9630  004526  3960               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  9631  004528  0BF0               	andlw	240
  9632  00452A  0BF0               	andlw	240
  9633  00452C  1283               	iorwf	131,f,c	;volatile
  9634  00452E                     
  9635                           ; BSR set to: 0
  9636                           ;nxlcd.c: 424:         DelayFor18TCY();
  9637  00452E  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  9638  004532                     
  9639                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  9640  004532  828D               	bsf	141,1,c	;volatile
  9641  004534                     
  9642                           ;nxlcd.c: 426:         DelayFor18TCY();
  9643  004534  EC1A  F024         	call	_DelayFor18TCY	;wreg free
  9644  004538                     
  9645                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  9646  004538  928D               	bcf	141,1,c	;volatile
  9647                           
  9648                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  9649  00453A  0EF0               	movlw	240
  9650  00453C  1295               	iorwf	149,f,c	;volatile
  9651  00453E  0012               	return		;funcret
  9652  004540                     __end_of_WriteCmdXLCD:
  9653                           	callstack 0
  9654                           
  9655 ;; *************** function _DelayFor18TCY *****************
  9656 ;; Defined at:
  9657 ;;		line 12 in file "nxlcd.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;		None
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9671 ;;      Params:         0       0       0       0       0       0       0       0       0
  9672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9675 ;;Total ram usage:        0 bytes
  9676 ;; Hardware stack levels used: 1
  9677 ;; Hardware stack levels required when called: 5
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_SetDDRamAddr
  9682 ;;		_BusyXLCD
  9683 ;;		_WriteCmdXLCD
  9684 ;;		_WriteDataXLCD
  9685 ;;		_SetCGRamAddr
  9686 ;;		_ReadAddrXLCD
  9687 ;;		_ReadDataXLCD
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           	psect	text50
  9692  004834                     __ptext50:
  9693                           	callstack 0
  9694  004834                     _DelayFor18TCY:
  9695                           	callstack 21
  9696  004834                     
  9697                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  9698  004834  0E21               	movlw	33
  9699  004836                     u6417:
  9700  004836  2EE8               	decfsz	wreg,f,c
  9701  004838  D7FE               	bra	u6417
  9702  00483A  F000               	nop	
  9703  00483C  0012               	return		;funcret
  9704  00483E                     __end_of_DelayFor18TCY:
  9705                           	callstack 0
  9706                           
  9707 ;; *************** function _assign_default_status_relay *****************
  9708 ;; Defined at:
  9709 ;;		line 539 in file "main.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;		None
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;		None
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg, status,2, status,0, cstack
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9723 ;;      Params:         0       0       0       0       0       0       0       0       0
  9724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9726 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9727 ;;Total ram usage:        0 bytes
  9728 ;; Hardware stack levels used: 1
  9729 ;; Hardware stack levels required when called: 7
  9730 ;; This function calls:
  9731 ;;		_EEPROM_write
  9732 ;;		_has_status_relay
  9733 ;; This function is called by:
  9734 ;;		_main
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text51
  9739  00474E                     __ptext51:
  9740                           	callstack 0
  9741  00474E                     _assign_default_status_relay:
  9742                           	callstack 23
  9743  00474E                     
  9744                           ;main.c: 541:     if (!has_status_relay()) {
  9745  00474E  ECF3  F020         	call	_has_status_relay	;wreg free
  9746  004752  0100               	movlb	0	; () banked
  9747  004754  5161               	movf	?_has_status_relay& (0+255),w,b
  9748  004756  1162               	iorwf	(?_has_status_relay+1)& (0+255),w,b
  9749  004758  A4D8               	btfss	status,2,c
  9750  00475A  EFB1  F023         	goto	u6091
  9751  00475E  EFB3  F023         	goto	u6090
  9752  004762                     u6091:
  9753  004762  EFBE  F023         	goto	l278
  9754  004766                     u6090:
  9755  004766                     
  9756                           ; BSR set to: 0
  9757                           ;main.c: 542:         EEPROM_write('0', 200);
  9758  004766  0EC8               	movlw	200
  9759  004768  6F60               	movwf	EEPROM_write@address& (0+255),b
  9760  00476A  0E30               	movlw	48
  9761  00476C  EC8D  F023         	call	_EEPROM_write
  9762                           
  9763                           ;main.c: 543:         EEPROM_write('0', 201);
  9764  004770  0EC9               	movlw	201
  9765  004772  0100               	movlb	0	; () banked
  9766  004774  6F60               	movwf	EEPROM_write@address& (0+255),b
  9767  004776  0E30               	movlw	48
  9768  004778  EC8D  F023         	call	_EEPROM_write
  9769  00477C                     l278:
  9770  00477C  0012               	return		;funcret
  9771  00477E                     __end_of_assign_default_status_relay:
  9772                           	callstack 0
  9773                           
  9774 ;; *************** function _has_status_relay *****************
  9775 ;; Defined at:
  9776 ;;		line 498 in file "main.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;		None
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;  address         1    3[BANK0 ] unsigned char 
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  2    1[BANK0 ] int 
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0, cstack
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9790 ;;      Params:         0       2       0       0       0       0       0       0       0
  9791 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9793 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9794 ;;Total ram usage:        3 bytes
  9795 ;; Hardware stack levels used: 1
  9796 ;; Hardware stack levels required when called: 6
  9797 ;; This function calls:
  9798 ;;		_EEPROM_read
  9799 ;; This function is called by:
  9800 ;;		_assign_default_status_relay
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           	psect	text52
  9805  0041E6                     __ptext52:
  9806                           	callstack 0
  9807  0041E6                     _has_status_relay:
  9808                           	callstack 23
  9809  0041E6                     
  9810                           ;main.c: 499:     unsigned char address = 200;
  9811  0041E6  0EC8               	movlw	200
  9812  0041E8  0100               	movlb	0	; () banked
  9813  0041EA  6F63               	movwf	has_status_relay@address& (0+255),b
  9814                           
  9815                           ;main.c: 501:     while (address < 255) {
  9816  0041EC  EF0C  F021         	goto	l5095
  9817  0041F0                     l5087:
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;main.c: 502:         if (EEPROM_read(address) != 0xFF) {
  9821  0041F0  5163               	movf	has_status_relay@address& (0+255),w,b
  9822  0041F2  EC11  F024         	call	_EEPROM_read
  9823  0041F6  0AFF               	xorlw	255
  9824  0041F8  B4D8               	btfsc	status,2,c
  9825  0041FA  EF01  F021         	goto	u5691
  9826  0041FE  EF03  F021         	goto	u5690
  9827  004202                     u5691:
  9828  004202  EF0A  F021         	goto	l5093
  9829  004206                     u5690:
  9830  004206                     
  9831                           ;main.c: 503:             return 1;
  9832  004206  0E00               	movlw	0
  9833  004208  0100               	movlb	0	; () banked
  9834  00420A  6F62               	movwf	(?_has_status_relay+1)& (0+255),b
  9835  00420C  0E01               	movlw	1
  9836  00420E  6F61               	movwf	?_has_status_relay& (0+255),b
  9837  004210  EF18  F021         	goto	l256
  9838  004214                     l5093:
  9839                           
  9840                           ;main.c: 505:         address++;
  9841  004214  0100               	movlb	0	; () banked
  9842  004216  2B63               	incf	has_status_relay@address& (0+255),f,b
  9843  004218                     l5095:
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;main.c: 501:     while (address < 255) {
  9847  004218  2963               	incf	has_status_relay@address& (0+255),w,b
  9848  00421A  A4D8               	btfss	status,2,c
  9849  00421C  EF12  F021         	goto	u5701
  9850  004220  EF14  F021         	goto	u5700
  9851  004224                     u5701:
  9852  004224  EFF8  F020         	goto	l5087
  9853  004228                     u5700:
  9854  004228                     
  9855                           ; BSR set to: 0
  9856                           ;main.c: 508:     return 0;
  9857  004228  0E00               	movlw	0
  9858  00422A  6F62               	movwf	(?_has_status_relay+1)& (0+255),b
  9859  00422C  0E00               	movlw	0
  9860  00422E  6F61               	movwf	?_has_status_relay& (0+255),b
  9861  004230                     l256:
  9862                           
  9863                           ; BSR set to: 0
  9864  004230  0012               	return		;funcret
  9865  004232                     __end_of_has_status_relay:
  9866                           	callstack 0
  9867                           
  9868 ;; *************** function _assign_default_passwords *****************
  9869 ;; Defined at:
  9870 ;;		line 526 in file "main.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;		None
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  user3           6   19[BANK0 ] struct .
  9875 ;;  user2           6   13[BANK0 ] struct .
  9876 ;;  user1           6    7[BANK0 ] struct .
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1    wreg      void 
  9879 ;; Registers used:
  9880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0
  9887 ;;      Locals:         0      18       0       0       0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9889 ;;      Totals:         0      18       0       0       0       0       0       0       0
  9890 ;;Total ram usage:       18 bytes
  9891 ;; Hardware stack levels used: 1
  9892 ;; Hardware stack levels required when called: 7
  9893 ;; This function calls:
  9894 ;;		_EEPROM_write_user
  9895 ;;		_has_passwords
  9896 ;; This function is called by:
  9897 ;;		_main
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text53
  9902  003D60                     __ptext53:
  9903                           	callstack 0
  9904  003D60                     _assign_default_passwords:
  9905                           	callstack 23
  9906  003D60                     
  9907                           ;main.c: 527:     User user1 = { "1234", '1' };
  9908  003D60  EE20  F0EA         	lfsr	2,assign_default_passwords@F4301
  9909  003D64  EE10  F067         	lfsr	1,assign_default_passwords@user1
  9910  003D68  0E05               	movlw	5
  9911  003D6A                     u6051:
  9912  003D6A  CFDB FFE3          	movff	plusw2,plusw1
  9913  003D6E  06E8               	decf	wreg,f,c
  9914  003D70  E2FC               	bc	u6051
  9915                           
  9916                           ;main.c: 528:     User user2 = { "5678", '2' };
  9917  003D72  EE20  F0E4         	lfsr	2,assign_default_passwords@F4303
  9918  003D76  EE10  F06D         	lfsr	1,assign_default_passwords@user2
  9919  003D7A  0E05               	movlw	5
  9920  003D7C                     u6061:
  9921  003D7C  CFDB FFE3          	movff	plusw2,plusw1
  9922  003D80  06E8               	decf	wreg,f,c
  9923  003D82  E2FC               	bc	u6061
  9924                           
  9925                           ;main.c: 529:     User user3 = { "9876", '3' };
  9926  003D84  EE20  F0DE         	lfsr	2,assign_default_passwords@F4305
  9927  003D88  EE10  F073         	lfsr	1,assign_default_passwords@user3
  9928  003D8C  0E05               	movlw	5
  9929  003D8E                     u6071:
  9930  003D8E  CFDB FFE3          	movff	plusw2,plusw1
  9931  003D92  06E8               	decf	wreg,f,c
  9932  003D94  E2FC               	bc	u6071
  9933  003D96                     
  9934                           ;main.c: 532:     if (!has_passwords()) {
  9935  003D96  EC19  F021         	call	_has_passwords	;wreg free
  9936  003D9A  0100               	movlb	0	; () banked
  9937  003D9C  5161               	movf	?_has_passwords& (0+255),w,b
  9938  003D9E  1162               	iorwf	(?_has_passwords+1)& (0+255),w,b
  9939  003DA0  A4D8               	btfss	status,2,c
  9940  003DA2  EFD5  F01E         	goto	u6081
  9941  003DA6  EFD7  F01E         	goto	u6080
  9942  003DAA                     u6081:
  9943  003DAA  EFF1  F01E         	goto	l274
  9944  003DAE                     u6080:
  9945  003DAE                     
  9946                           ; BSR set to: 0
  9947                           ;main.c: 533:         EEPROM_write_user(&user1, 0);
  9948  003DAE  0E67               	movlw	low assign_default_passwords@user1
  9949  003DB0  6F62               	movwf	EEPROM_write_user@user& (0+255),b
  9950  003DB2  0E00               	movlw	high assign_default_passwords@user1
  9951  003DB4  6F63               	movwf	(EEPROM_write_user@user+1)& (0+255),b
  9952  003DB6  0E00               	movlw	0
  9953  003DB8  6F64               	movwf	EEPROM_write_user@start_address& (0+255),b
  9954  003DBA  ECCC  F020         	call	_EEPROM_write_user	;wreg free
  9955                           
  9956                           ;main.c: 534:         EEPROM_write_user(&user2, 6);
  9957  003DBE  0E6D               	movlw	low assign_default_passwords@user2
  9958  003DC0  0100               	movlb	0	; () banked
  9959  003DC2  6F62               	movwf	EEPROM_write_user@user& (0+255),b
  9960  003DC4  0E00               	movlw	high assign_default_passwords@user2
  9961  003DC6  6F63               	movwf	(EEPROM_write_user@user+1)& (0+255),b
  9962  003DC8  0E06               	movlw	6
  9963  003DCA  6F64               	movwf	EEPROM_write_user@start_address& (0+255),b
  9964  003DCC  ECCC  F020         	call	_EEPROM_write_user	;wreg free
  9965                           
  9966                           ;main.c: 535:         EEPROM_write_user(&user3, 12);
  9967  003DD0  0E73               	movlw	low assign_default_passwords@user3
  9968  003DD2  0100               	movlb	0	; () banked
  9969  003DD4  6F62               	movwf	EEPROM_write_user@user& (0+255),b
  9970  003DD6  0E00               	movlw	high assign_default_passwords@user3
  9971  003DD8  6F63               	movwf	(EEPROM_write_user@user+1)& (0+255),b
  9972  003DDA  0E0C               	movlw	12
  9973  003DDC  6F64               	movwf	EEPROM_write_user@start_address& (0+255),b
  9974  003DDE  ECCC  F020         	call	_EEPROM_write_user	;wreg free
  9975  003DE2                     l274:
  9976  003DE2  0012               	return		;funcret
  9977  003DE4                     __end_of_assign_default_passwords:
  9978                           	callstack 0
  9979                           
  9980 ;; *************** function _has_passwords *****************
  9981 ;; Defined at:
  9982 ;;		line 512 in file "main.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;  address         1    3[BANK0 ] unsigned char 
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  2    1[BANK0 ] int 
  9989 ;; Registers used:
  9990 ;;		wreg, status,2, status,0, cstack
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9996 ;;      Params:         0       2       0       0       0       0       0       0       0
  9997 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9999 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10000 ;;Total ram usage:        3 bytes
 10001 ;; Hardware stack levels used: 1
 10002 ;; Hardware stack levels required when called: 6
 10003 ;; This function calls:
 10004 ;;		_EEPROM_read
 10005 ;; This function is called by:
 10006 ;;		_assign_default_passwords
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           	psect	text54
 10011  004232                     __ptext54:
 10012                           	callstack 0
 10013  004232                     _has_passwords:
 10014                           	callstack 23
 10015  004232                     
 10016                           ;main.c: 513:     unsigned char address = 0;
 10017  004232  0E00               	movlw	0
 10018  004234  0100               	movlb	0	; () banked
 10019  004236  6F63               	movwf	has_passwords@address& (0+255),b
 10020                           
 10021                           ;main.c: 515:     while (address < 200) {
 10022  004238  EF32  F021         	goto	l5111
 10023  00423C                     l5103:
 10024                           
 10025                           ; BSR set to: 0
 10026                           ;main.c: 516:         if (EEPROM_read(address) != 0xFF) {
 10027  00423C  5163               	movf	has_passwords@address& (0+255),w,b
 10028  00423E  EC11  F024         	call	_EEPROM_read
 10029  004242  0AFF               	xorlw	255
 10030  004244  B4D8               	btfsc	status,2,c
 10031  004246  EF27  F021         	goto	u5711
 10032  00424A  EF29  F021         	goto	u5710
 10033  00424E                     u5711:
 10034  00424E  EF30  F021         	goto	l5109
 10035  004252                     u5710:
 10036  004252                     
 10037                           ;main.c: 517:             return 1;
 10038  004252  0E00               	movlw	0
 10039  004254  0100               	movlb	0	; () banked
 10040  004256  6F62               	movwf	(?_has_passwords+1)& (0+255),b
 10041  004258  0E01               	movlw	1
 10042  00425A  6F61               	movwf	?_has_passwords& (0+255),b
 10043  00425C  EF3E  F021         	goto	l263
 10044  004260                     l5109:
 10045                           
 10046                           ;main.c: 519:         address++;
 10047  004260  0100               	movlb	0	; () banked
 10048  004262  2B63               	incf	has_passwords@address& (0+255),f,b
 10049  004264                     l5111:
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;main.c: 515:     while (address < 200) {
 10053  004264  0EC7               	movlw	199
 10054  004266  6563               	cpfsgt	has_passwords@address& (0+255),b
 10055  004268  EF38  F021         	goto	u5721
 10056  00426C  EF3A  F021         	goto	u5720
 10057  004270                     u5721:
 10058  004270  EF1E  F021         	goto	l5103
 10059  004274                     u5720:
 10060  004274                     
 10061                           ; BSR set to: 0
 10062                           ;main.c: 522:     return 0;
 10063  004274  0E00               	movlw	0
 10064  004276  6F62               	movwf	(?_has_passwords+1)& (0+255),b
 10065  004278  0E00               	movlw	0
 10066  00427A  6F61               	movwf	?_has_passwords& (0+255),b
 10067  00427C                     l263:
 10068                           
 10069                           ; BSR set to: 0
 10070  00427C  0012               	return		;funcret
 10071  00427E                     __end_of_has_passwords:
 10072                           	callstack 0
 10073                           
 10074 ;; *************** function _EEPROM_read *****************
 10075 ;; Defined at:
 10076 ;;		line 466 in file "main.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;  address         1    wreg     unsigned char 
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;  address         1    0[BANK0 ] unsigned char 
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      unsigned char 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10090 ;;      Params:         0       0       0       0       0       0       0       0       0
 10091 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10093 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10094 ;;Total ram usage:        1 bytes
 10095 ;; Hardware stack levels used: 1
 10096 ;; Hardware stack levels required when called: 5
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_show_status_relay
 10101 ;;		_toggle_relay
 10102 ;;		_update_status_relay
 10103 ;;		_EEPROM_read_user
 10104 ;;		_has_status_relay
 10105 ;;		_has_passwords
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109                           	psect	text55
 10110  004822                     __ptext55:
 10111                           	callstack 0
 10112  004822                     _EEPROM_read:
 10113                           	callstack 24
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;incstack = 0
 10117                           ;EEPROM_read@address stored from wreg
 10118  004822  0100               	movlb	0	; () banked
 10119  004824  6F60               	movwf	EEPROM_read@address& (0+255),b
 10120  004826                     
 10121                           ;main.c: 466: unsigned char EEPROM_read( unsigned char address );main.c: 467: {;main.c: 
      +                          469:     EEADR = address;
 10122  004826  C060  FFA9         	movff	EEPROM_read@address,4009	;volatile
 10123  00482A                     
 10124                           ;main.c: 470:     EECON1bits.EEPGD = 0;
 10125  00482A  9EA6               	bcf	166,7,c	;volsfr
 10126  00482C                     
 10127                           ;main.c: 471:     EECON1bits.CFGS = 0;
 10128  00482C  9CA6               	bcf	166,6,c	;volsfr
 10129  00482E                     
 10130                           ;main.c: 472:     EECON1bits.RD = 1;
 10131  00482E  80A6               	bsf	166,0,c	;volsfr
 10132  004830                     
 10133                           ;main.c: 473:     return( EEDATA );
 10134  004830  50A8               	movf	168,w,c	;volatile
 10135  004832  0012               	return		;funcret
 10136  004834                     __end_of_EEPROM_read:
 10137                           	callstack 0
 10138                           
 10139 ;; *************** function _EEPROM_write_user *****************
 10140 ;; Defined at:
 10141 ;;		line 414 in file "main.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  user            2    2[BANK0 ] PTR const struct .
 10144 ;;		 -> assign_default_passwords@user3(6), assign_default_passwords@user2(6), assign_default_passwords@user1(6), update_
      +password@user(6), 
 10145 ;;  start_addres    1    4[BANK0 ] unsigned char 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  i               1    6[BANK0 ] unsigned char 
 10148 ;;  address         1    5[BANK0 ] unsigned char 
 10149 ;; Return value:  Size  Location     Type
 10150 ;;                  1    wreg      void 
 10151 ;; Registers used:
 10152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10158 ;;      Params:         0       3       0       0       0       0       0       0       0
 10159 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10160 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10161 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10162 ;;Total ram usage:        5 bytes
 10163 ;; Hardware stack levels used: 1
 10164 ;; Hardware stack levels required when called: 6
 10165 ;; This function calls:
 10166 ;;		_EEPROM_write
 10167 ;; This function is called by:
 10168 ;;		_update_password
 10169 ;;		_assign_default_passwords
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text56
 10174  004198                     __ptext56:
 10175                           	callstack 0
 10176  004198                     _EEPROM_write_user:
 10177                           	callstack 22
 10178  004198                     
 10179                           ;main.c: 415:     unsigned char address = start_address;
 10180  004198  C064  F065         	movff	EEPROM_write_user@start_address,EEPROM_write_user@address
 10181  00419C                     
 10182                           ;main.c: 417:     for (unsigned char i = 0; i < 5; i++) {
 10183  00419C  0E00               	movlw	0
 10184  00419E  0100               	movlb	0	; () banked
 10185  0041A0  6F66               	movwf	EEPROM_write_user@i& (0+255),b
 10186  0041A2                     l4543:
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;main.c: 418:         EEPROM_write(user->password[i], address);
 10190  0041A2  C065  F060         	movff	EEPROM_write_user@address,EEPROM_write@address
 10191  0041A6  5166               	movf	EEPROM_write_user@i& (0+255),w,b
 10192  0041A8  2562               	addwf	EEPROM_write_user@user& (0+255),w,b
 10193  0041AA  6ED9               	movwf	fsr2l,c
 10194  0041AC  0E00               	movlw	0
 10195  0041AE  2163               	addwfc	(EEPROM_write_user@user+1)& (0+255),w,b
 10196  0041B0  6EDA               	movwf	fsr2h,c
 10197  0041B2  50DF               	movf	indf2,w,c
 10198  0041B4  EC8D  F023         	call	_EEPROM_write
 10199  0041B8                     
 10200                           ;main.c: 419:         address++;
 10201  0041B8  0100               	movlb	0	; () banked
 10202  0041BA  2B65               	incf	EEPROM_write_user@address& (0+255),f,b
 10203  0041BC                     
 10204                           ; BSR set to: 0
 10205                           ;main.c: 420:     }
 10206  0041BC  2B66               	incf	EEPROM_write_user@i& (0+255),f,b
 10207  0041BE                     
 10208                           ; BSR set to: 0
 10209  0041BE  0E04               	movlw	4
 10210  0041C0  6566               	cpfsgt	EEPROM_write_user@i& (0+255),b
 10211  0041C2  EFE5  F020         	goto	u4941
 10212  0041C6  EFE7  F020         	goto	u4940
 10213  0041CA                     u4941:
 10214  0041CA  EFD1  F020         	goto	l4543
 10215  0041CE                     u4940:
 10216  0041CE                     
 10217                           ; BSR set to: 0
 10218                           ;main.c: 421:     EEPROM_write(user->accessLevel, address);
 10219  0041CE  C065  F060         	movff	EEPROM_write_user@address,EEPROM_write@address
 10220  0041D2  EE20 F005          	lfsr	2,5
 10221  0041D6  5162               	movf	EEPROM_write_user@user& (0+255),w,b
 10222  0041D8  26D9               	addwf	fsr2l,f,c
 10223  0041DA  5163               	movf	(EEPROM_write_user@user+1)& (0+255),w,b
 10224  0041DC  22DA               	addwfc	fsr2h,f,c
 10225  0041DE  50DF               	movf	indf2,w,c
 10226  0041E0  EC8D  F023         	call	_EEPROM_write
 10227  0041E4  0012               	return		;funcret
 10228  0041E6                     __end_of_EEPROM_write_user:
 10229                           	callstack 0
 10230                           
 10231 ;; *************** function _EEPROM_write *****************
 10232 ;; Defined at:
 10233 ;;		line 445 in file "main.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  data            1    wreg     unsigned char 
 10236 ;;  address         1    0[BANK0 ] unsigned char 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;  data            1    1[BANK0 ] unsigned char 
 10239 ;; Return value:  Size  Location     Type
 10240 ;;                  1    wreg      void 
 10241 ;; Registers used:
 10242 ;;		wreg, status,2
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10248 ;;      Params:         0       1       0       0       0       0       0       0       0
 10249 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10250 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10251 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10252 ;;Total ram usage:        2 bytes
 10253 ;; Hardware stack levels used: 1
 10254 ;; Hardware stack levels required when called: 5
 10255 ;; This function calls:
 10256 ;;		Nothing
 10257 ;; This function is called by:
 10258 ;;		_toggle_relay
 10259 ;;		_update_status_relay
 10260 ;;		_EEPROM_write_user
 10261 ;;		_assign_default_status_relay
 10262 ;;		_clear_EEPROM
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           	psect	text57
 10267  00471A                     __ptext57:
 10268                           	callstack 0
 10269  00471A                     _EEPROM_write:
 10270                           	callstack 24
 10271                           
 10272                           ;incstack = 0
 10273                           ;EEPROM_write@data stored from wreg
 10274  00471A  0100               	movlb	0	; () banked
 10275  00471C  6F61               	movwf	EEPROM_write@data& (0+255),b
 10276  00471E                     
 10277                           ;main.c: 445: void EEPROM_write( unsigned char data, unsigned char address );main.c: 446
      +                          : {;main.c: 448:     EEADR = address;
 10278  00471E  C060  FFA9         	movff	EEPROM_write@address,4009	;volatile
 10279  004722                     
 10280                           ;main.c: 449:     EEDATA = data;
 10281  004722  C061  FFA8         	movff	EEPROM_write@data,4008	;volatile
 10282  004726                     
 10283                           ;main.c: 450:     EECON1bits.EEPGD = 0;
 10284  004726  9EA6               	bcf	166,7,c	;volsfr
 10285  004728                     
 10286                           ;main.c: 451:     EECON1bits.CFGS = 0;
 10287  004728  9CA6               	bcf	166,6,c	;volsfr
 10288  00472A                     
 10289                           ;main.c: 452:     EECON1bits.WREN = 1;
 10290  00472A  84A6               	bsf	166,2,c	;volsfr
 10291  00472C                     
 10292                           ;main.c: 453:     INTCONbits.GIE = 0;
 10293  00472C  9EF2               	bcf	242,7,c	;volatile
 10294  00472E                     
 10295                           ;main.c: 455:     EECON2 = 0x55;
 10296  00472E  0E55               	movlw	85
 10297  004730  6EA7               	movwf	167,c	;volsfr
 10298  004732                     
 10299                           ;main.c: 456:     EECON2 = 0xAA;
 10300  004732  0EAA               	movlw	170
 10301  004734  6EA7               	movwf	167,c	;volsfr
 10302  004736                     
 10303                           ;main.c: 457:     EECON1bits.WR = 1;
 10304  004736  82A6               	bsf	166,1,c	;volsfr
 10305  004738                     l237:
 10306  004738  A8A1               	btfss	161,4,c	;volatile
 10307  00473A  EFA1  F023         	goto	u3391
 10308  00473E  EFA3  F023         	goto	u3390
 10309  004742                     u3391:
 10310  004742  EF9C  F023         	goto	l237
 10311  004746                     u3390:
 10312  004746                     
 10313                           ;main.c: 460:     INTCONbits.GIE = 1;
 10314  004746  8EF2               	bsf	242,7,c	;volatile
 10315                           
 10316                           ;main.c: 461:     PIR2bits.EEIF = 0;
 10317  004748  98A1               	bcf	161,4,c	;volatile
 10318                           
 10319                           ;main.c: 462:     EECON1bits.WREN=0;
 10320  00474A  94A6               	bcf	166,2,c	;volsfr
 10321  00474C  0012               	return		;funcret
 10322  00474E                     __end_of_EEPROM_write:
 10323                           	callstack 0
 10324                           
 10325 ;; *************** function _high_isr *****************
 10326 ;; Defined at:
 10327 ;;		line 149 in file "main.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;		None
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;		None
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  1    wreg      void 
 10334 ;; Registers used:
 10335 ;;		wreg, status,2, status,0, cstack
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10341 ;;      Params:         0       0       0       0       0       0       0       0       0
 10342 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10343 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10344 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10345 ;;Total ram usage:        1 bytes
 10346 ;; Hardware stack levels used: 1
 10347 ;; Hardware stack levels required when called: 4
 10348 ;; This function calls:
 10349 ;;		i2_convert_temp
 10350 ;; This function is called by:
 10351 ;;		Interrupt level 2
 10352 ;; This function uses a non-reentrant model
 10353 ;;
 10354                           
 10355                           	psect	intcode
 10356  000008                     __pintcode:
 10357                           	callstack 0
 10358  000008                     _high_isr:
 10359                           	callstack 17
 10360                           
 10361                           ;incstack = 0
 10362  000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10363  00000A  EDC6  F01B         	call	int_func,f	;refresh shadow registers
 10364                           
 10365                           	psect	intcode_body
 10366  00378C                     __pintcode_body:
 10367                           	callstack 17
 10368  00378C                     int_func:
 10369                           	callstack 17
 10370  00378C  0006               	pop		; remove dummy address from shadow register refresh
 10371  00378E                     
 10372                           ;main.c: 150:     if (PIR1bits.ADIF) {
 10373  00378E  AC9E               	btfss	158,6,c	;volatile
 10374  003790  EFCC  F01B         	goto	i2u613_41
 10375  003794  EFCE  F01B         	goto	i2u613_40
 10376  003798                     i2u613_41:
 10377  003798  EFFE  F01B         	goto	i2l5423
 10378  00379C                     i2u613_40:
 10379  00379C                     
 10380                           ;main.c: 151:         flag_status_relay = convert_temp() > 70;
 10381  00379C  EC55  F023         	call	i2_convert_temp	;wreg free
 10382  0037A0  BE4D               	btfsc	(?i2_convert_temp+1)^0,7,c
 10383  0037A2  EFDF  F01B         	goto	i2u614_40
 10384  0037A6  504D               	movf	(?i2_convert_temp+1)^0,w,c
 10385  0037A8  E107               	bnz	i2u614_41
 10386  0037AA  0E47               	movlw	71
 10387  0037AC  5C4C               	subwf	?i2_convert_temp^0,w,c
 10388  0037AE  B0D8               	btfsc	status,0,c
 10389  0037B0  EFDC  F01B         	goto	i2u614_41
 10390  0037B4  EFDF  F01B         	goto	i2u614_40
 10391  0037B8                     i2u614_41:
 10392  0037B8  0E01               	movlw	1
 10393  0037BA  EFE0  F01B         	goto	i2u615_40
 10394  0037BE                     i2u614_40:
 10395  0037BE  0E00               	movlw	0
 10396  0037C0                     i2u615_40:
 10397  0037C0  0100               	movlb	0	; () banked
 10398  0037C2  6FFC               	movwf	_flag_status_relay& (0+255),b
 10399  0037C4  6BFD               	clrf	(_flag_status_relay+1)& (0+255),b
 10400                           
 10401                           ;main.c: 152:         PORTCbits.RC2 = convert_temp() > 50;
 10402  0037C6  EC55  F023         	call	i2_convert_temp	;wreg free
 10403  0037CA  BE4D               	btfsc	(?i2_convert_temp+1)^0,7,c
 10404  0037CC  EFF5  F01B         	goto	i2u616_40
 10405  0037D0  504D               	movf	(?i2_convert_temp+1)^0,w,c
 10406  0037D2  E107               	bnz	i2u616_41
 10407  0037D4  0E33               	movlw	51
 10408  0037D6  5C4C               	subwf	?i2_convert_temp^0,w,c
 10409  0037D8  B0D8               	btfsc	status,0,c
 10410  0037DA  EFF1  F01B         	goto	i2u616_41
 10411  0037DE  EFF5  F01B         	goto	i2u616_40
 10412  0037E2                     i2u616_41:
 10413  0037E2  6A50               	clrf	??_high_isr^0,c
 10414  0037E4  2A50               	incf	??_high_isr^0,f,c
 10415  0037E6  EFF6  F01B         	goto	i2u617_48
 10416  0037EA                     i2u616_40:
 10417  0037EA  6A50               	clrf	??_high_isr^0,c
 10418  0037EC                     i2u617_48:
 10419  0037EC  4650               	rlncf	??_high_isr^0,f,c
 10420  0037EE  4650               	rlncf	??_high_isr^0,f,c
 10421  0037F0  5082               	movf	130,w,c	;volatile
 10422  0037F2  1850               	xorwf	??_high_isr^0,w,c
 10423  0037F4  0BFB               	andlw	-5
 10424  0037F6  1850               	xorwf	??_high_isr^0,w,c
 10425  0037F8  6E82               	movwf	130,c	;volatile
 10426  0037FA                     
 10427                           ;main.c: 153:         PIR1bits.ADIF = 0;
 10428  0037FA  9C9E               	bcf	158,6,c	;volatile
 10429  0037FC                     i2l5423:
 10430                           
 10431                           ;main.c: 155:     if (INTCONbits.RBIF == 1){
 10432  0037FC  A0F2               	btfss	242,0,c	;volatile
 10433  0037FE  EF03  F01C         	goto	i2u618_41
 10434  003802  EF05  F01C         	goto	i2u618_40
 10435  003806                     i2u618_41:
 10436  003806  EF32  F01C         	goto	i2l121
 10437  00380A                     i2u618_40:
 10438  00380A                     
 10439                           ;main.c: 156:      if (PORTBbits.RB4 == 0) row = 1;
 10440  00380A  B881               	btfsc	129,4,c	;volatile
 10441  00380C  EF0A  F01C         	goto	i2u619_41
 10442  003810  EF0C  F01C         	goto	i2u619_40
 10443  003814                     i2u619_41:
 10444  003814  EF10  F01C         	goto	i2l5429
 10445  003818                     i2u619_40:
 10446  003818  0E00               	movlw	0
 10447  00381A  6E52               	movwf	(_row+1)^0,c
 10448  00381C  0E01               	movlw	1
 10449  00381E  6E51               	movwf	_row^0,c
 10450  003820                     i2l5429:
 10451                           
 10452                           ;main.c: 157:      if (PORTBbits.RB5 == 0) row = 2;
 10453  003820  BA81               	btfsc	129,5,c	;volatile
 10454  003822  EF15  F01C         	goto	i2u620_41
 10455  003826  EF17  F01C         	goto	i2u620_40
 10456  00382A                     i2u620_41:
 10457  00382A  EF1B  F01C         	goto	i2l5433
 10458  00382E                     i2u620_40:
 10459  00382E  0E00               	movlw	0
 10460  003830  6E52               	movwf	(_row+1)^0,c
 10461  003832  0E02               	movlw	2
 10462  003834  6E51               	movwf	_row^0,c
 10463  003836                     i2l5433:
 10464                           
 10465                           ;main.c: 158:      if (PORTBbits.RB6 == 0) row = 3;
 10466  003836  BC81               	btfsc	129,6,c	;volatile
 10467  003838  EF20  F01C         	goto	i2u621_41
 10468  00383C  EF22  F01C         	goto	i2u621_40
 10469  003840                     i2u621_41:
 10470  003840  EF26  F01C         	goto	i2l5437
 10471  003844                     i2u621_40:
 10472  003844  0E00               	movlw	0
 10473  003846  6E52               	movwf	(_row+1)^0,c
 10474  003848  0E03               	movlw	3
 10475  00384A  6E51               	movwf	_row^0,c
 10476  00384C                     i2l5437:
 10477                           
 10478                           ;main.c: 159:      if (PORTBbits.RB7 == 0) row = 4;
 10479  00384C  BE81               	btfsc	129,7,c	;volatile
 10480  00384E  EF2B  F01C         	goto	i2u622_41
 10481  003852  EF2D  F01C         	goto	i2u622_40
 10482  003856                     i2u622_41:
 10483  003856  EF31  F01C         	goto	i2l5441
 10484  00385A                     i2u622_40:
 10485  00385A  0E00               	movlw	0
 10486  00385C  6E52               	movwf	(_row+1)^0,c
 10487  00385E  0E04               	movlw	4
 10488  003860  6E51               	movwf	_row^0,c
 10489  003862                     i2l5441:
 10490                           
 10491                           ;main.c: 160:      INTCONbits.RBIF = 0;
 10492  003862  90F2               	bcf	242,0,c	;volatile
 10493  003864                     i2l121:
 10494  003864  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10495  003866  0011               	retfie		f
 10496  003868                     __end_of_high_isr:
 10497                           	callstack 0
 10498                           
 10499 ;; *************** function i2_convert_temp *****************
 10500 ;; Defined at:
 10501 ;;		line 358 in file "main.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;		None
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  resultado       4    0        void 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  2   75[COMRAM] int 
 10508 ;; Registers used:
 10509 ;;		wreg, status,2, status,0, cstack
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10515 ;;      Params:         2       0       0       0       0       0       0       0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10517 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10518 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10519 ;;Total ram usage:        4 bytes
 10520 ;; Hardware stack levels used: 1
 10521 ;; Hardware stack levels required when called: 3
 10522 ;; This function calls:
 10523 ;;		i2___awdiv
 10524 ;;		i2___flmul
 10525 ;;		i2___fltol
 10526 ;;		i2___xxtofl
 10527 ;;		i2_roundf
 10528 ;; This function is called by:
 10529 ;;		_high_isr
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           	psect	text59
 10534  0046AA                     __ptext59:
 10535                           	callstack 0
 10536  0046AA                     i2_convert_temp:
 10537                           	callstack 17
 10538  0046AA                     
 10539                           ;main.c: 359:     ADCON0bits.GO_DONE = 1;
 10540  0046AA  82C2               	bsf	194,1,c	;volatile
 10541  0046AC                     i2l205:
 10542  0046AC  B2C2               	btfsc	194,1,c	;volatile
 10543  0046AE  EF5B  F023         	goto	i2u612_41
 10544  0046B2  EF5D  F023         	goto	i2u612_40
 10545  0046B6                     i2u612_41:
 10546  0046B6  EF56  F023         	goto	i2l205
 10547  0046BA                     i2u612_40:
 10548  0046BA                     
 10549                           ;main.c: 362:         return (ADRESH * 256 + ADRESL)/10;
 10550  0046BA  50C4               	movf	196,w,c	;volatile
 10551  0046BC  6E4F               	movwf	(??i2_convert_temp+1)^0,c
 10552  0046BE  6A4E               	clrf	??i2_convert_temp^0,c
 10553  0046C0  50C3               	movf	195,w,c	;volatile
 10554  0046C2  244E               	addwf	??i2_convert_temp^0,w,c
 10555  0046C4  6E01               	movwf	i2___awdiv@dividend^0,c
 10556  0046C6  0E00               	movlw	0
 10557  0046C8  204F               	addwfc	(??i2_convert_temp+1)^0,w,c
 10558  0046CA  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
 10559  0046CC  0E00               	movlw	0
 10560  0046CE  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
 10561  0046D0  0E0A               	movlw	10
 10562  0046D2  6E03               	movwf	i2___awdiv@divisor^0,c
 10563  0046D4  EC62  F01D         	call	i2___awdiv	;wreg free
 10564  0046D8  C001  F04C         	movff	?i2___awdiv,?i2_convert_temp
 10565  0046DC  C002  F04D         	movff	?i2___awdiv+1,?i2_convert_temp+1
 10566  0046E0  0012               	return		;funcret
 10567  0046E2                     __end_ofi2_convert_temp:
 10568                           	callstack 0
 10569                           
 10570 ;; *************** function i2_roundf *****************
 10571 ;; Defined at:
 10572 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\roundf.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  x               4   39[COMRAM] float 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;  y               4   61[COMRAM] float 
 10577 ;;  u               4   57[COMRAM] struct .
 10578 ;;  e               2   51[COMRAM] int 
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  4   39[COMRAM] float 
 10581 ;; Registers used:
 10582 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10588 ;;      Params:         4       0       0       0       0       0       0       0       0
 10589 ;;      Locals:        18       0       0       0       0       0       0       0       0
 10590 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10591 ;;      Totals:        26       0       0       0       0       0       0       0       0
 10592 ;;Total ram usage:       26 bytes
 10593 ;; Hardware stack levels used: 1
 10594 ;; Hardware stack levels required when called: 2
 10595 ;; This function calls:
 10596 ;;		i2___fladd
 10597 ;;		i2___flge
 10598 ;;		i2___flmul
 10599 ;;		i2___flneg
 10600 ;;		i2___flsub
 10601 ;; This function is called by:
 10602 ;;		i2_convert_temp
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	text60
 10607  001E38                     __ptext60:
 10608                           	callstack 0
 10609  001E38                     i2_roundf:
 10610                           	callstack 17
 10611  001E38  C0F0  F03A         	movff	roundf@F528,i2roundf@u
 10612  001E3C  C0F1  F03B         	movff	roundf@F528+1,i2roundf@u+1
 10613  001E40  C0F2  F03C         	movff	roundf@F528+2,i2roundf@u+2
 10614  001E44  C0F3  F03D         	movff	roundf@F528+3,i2roundf@u+3
 10615  001E48  C028  F03A         	movff	i2roundf@x,i2roundf@u
 10616  001E4C  C029  F03B         	movff	i2roundf@x+1,i2roundf@u+1
 10617  001E50  C02A  F03C         	movff	i2roundf@x+2,i2roundf@u+2
 10618  001E54  C02B  F03D         	movff	i2roundf@x+3,i2roundf@u+3
 10619  001E58  C03A  F02C         	movff	i2roundf@u,??i2_roundf
 10620  001E5C  C03B  F02D         	movff	i2roundf@u+1,??i2_roundf+1
 10621  001E60  C03C  F02E         	movff	i2roundf@u+2,??i2_roundf+2
 10622  001E64  C03D  F02F         	movff	i2roundf@u+3,??i2_roundf+3
 10623  001E68  0E18               	movlw	24
 10624  001E6A  EF3C  F00F         	goto	i2u596_40
 10625  001E6E                     i2u596_45:
 10626  001E6E  90D8               	bcf	status,0,c
 10627  001E70  322F               	rrcf	(??i2_roundf+3)^0,f,c
 10628  001E72  322E               	rrcf	(??i2_roundf+2)^0,f,c
 10629  001E74  322D               	rrcf	(??i2_roundf+1)^0,f,c
 10630  001E76  322C               	rrcf	??i2_roundf^0,f,c
 10631  001E78                     i2u596_40:
 10632  001E78  2EE8               	decfsz	wreg,f,c
 10633  001E7A  EF37  F00F         	goto	i2u596_45
 10634  001E7E  502C               	movf	??i2_roundf^0,w,c
 10635  001E80  6E34               	movwf	i2roundf@e^0,c
 10636  001E82  6A35               	clrf	(i2roundf@e+1)^0,c
 10637  001E84  BE35               	btfsc	(i2roundf@e+1)^0,7,c
 10638  001E86  EF4E  F00F         	goto	i2u597_41
 10639  001E8A  5035               	movf	(i2roundf@e+1)^0,w,c
 10640  001E8C  E109               	bnz	i2u597_40
 10641  001E8E  0E96               	movlw	150
 10642  001E90  5C34               	subwf	i2roundf@e^0,w,c
 10643  001E92  A0D8               	btfss	status,0,c
 10644  001E94  EF4E  F00F         	goto	i2u597_41
 10645  001E98  EF50  F00F         	goto	i2u597_40
 10646  001E9C                     i2u597_41:
 10647  001E9C  EF5A  F00F         	goto	i2l5257
 10648  001EA0                     i2u597_40:
 10649  001EA0  C028  F028         	movff	i2roundf@x,?i2_roundf
 10650  001EA4  C029  F029         	movff	i2roundf@x+1,?i2_roundf+1
 10651  001EA8  C02A  F02A         	movff	i2roundf@x+2,?i2_roundf+2
 10652  001EAC  C02B  F02B         	movff	i2roundf@x+3,?i2_roundf+3
 10653  001EB0  EFF2  F010         	goto	i2l1188
 10654  001EB4                     i2l5257:
 10655  001EB4  C03A  F02C         	movff	i2roundf@u,??i2_roundf
 10656  001EB8  C03B  F02D         	movff	i2roundf@u+1,??i2_roundf+1
 10657  001EBC  C03C  F02E         	movff	i2roundf@u+2,??i2_roundf+2
 10658  001EC0  C03D  F02F         	movff	i2roundf@u+3,??i2_roundf+3
 10659  001EC4  0E20               	movlw	32
 10660  001EC6  EF6A  F00F         	goto	i2u598_40
 10661  001ECA                     i2u598_45:
 10662  001ECA  90D8               	bcf	status,0,c
 10663  001ECC  322F               	rrcf	(??i2_roundf+3)^0,f,c
 10664  001ECE  322E               	rrcf	(??i2_roundf+2)^0,f,c
 10665  001ED0  322D               	rrcf	(??i2_roundf+1)^0,f,c
 10666  001ED2  322C               	rrcf	??i2_roundf^0,f,c
 10667  001ED4                     i2u598_40:
 10668  001ED4  2EE8               	decfsz	wreg,f,c
 10669  001ED6  EF65  F00F         	goto	i2u598_45
 10670  001EDA  502C               	movf	??i2_roundf^0,w,c
 10671  001EDC  102D               	iorwf	(??i2_roundf+1)^0,w,c
 10672  001EDE  102E               	iorwf	(??i2_roundf+2)^0,w,c
 10673  001EE0  102F               	iorwf	(??i2_roundf+3)^0,w,c
 10674  001EE2  B4D8               	btfsc	status,2,c
 10675  001EE4  EF76  F00F         	goto	i2u599_41
 10676  001EE8  EF78  F00F         	goto	i2u599_40
 10677  001EEC                     i2u599_41:
 10678  001EEC  EF8A  F00F         	goto	i2l5261
 10679  001EF0                     i2u599_40:
 10680  001EF0  C028  F001         	movff	i2roundf@x,i2___flneg@f1
 10681  001EF4  C029  F002         	movff	i2roundf@x+1,i2___flneg@f1+1
 10682  001EF8  C02A  F003         	movff	i2roundf@x+2,i2___flneg@f1+2
 10683  001EFC  C02B  F004         	movff	i2roundf@x+3,i2___flneg@f1+3
 10684  001F00  EC71  F023         	call	i2___flneg	;wreg free
 10685  001F04  C001  F028         	movff	?i2___flneg,i2roundf@x
 10686  001F08  C002  F029         	movff	?i2___flneg+1,i2roundf@x+1
 10687  001F0C  C003  F02A         	movff	?i2___flneg+2,i2roundf@x+2
 10688  001F10  C004  F02B         	movff	?i2___flneg+3,i2roundf@x+3
 10689  001F14                     i2l5261:
 10690  001F14  BE35               	btfsc	(i2roundf@e+1)^0,7,c
 10691  001F16  EF98  F00F         	goto	i2u600_40
 10692  001F1A  5035               	movf	(i2roundf@e+1)^0,w,c
 10693  001F1C  E107               	bnz	i2u600_41
 10694  001F1E  0E7E               	movlw	126
 10695  001F20  5C34               	subwf	i2roundf@e^0,w,c
 10696  001F22  B0D8               	btfsc	status,0,c
 10697  001F24  EF96  F00F         	goto	i2u600_41
 10698  001F28  EF98  F00F         	goto	i2u600_40
 10699  001F2C                     i2u600_41:
 10700  001F2C  EFB4  F00F         	goto	i2l5267
 10701  001F30                     i2u600_40:
 10702  001F30  C03A  F00F         	movff	i2roundf@u,i2___flmul@b
 10703  001F34  C03B  F010         	movff	i2roundf@u+1,i2___flmul@b+1
 10704  001F38  C03C  F011         	movff	i2roundf@u+2,i2___flmul@b+2
 10705  001F3C  C03D  F012         	movff	i2roundf@u+3,i2___flmul@b+3
 10706  001F40  0E00               	movlw	0
 10707  001F42  6E13               	movwf	i2___flmul@a^0,c
 10708  001F44  0E00               	movlw	0
 10709  001F46  6E14               	movwf	(i2___flmul@a+1)^0,c
 10710  001F48  0E00               	movlw	0
 10711  001F4A  6E15               	movwf	(i2___flmul@a+2)^0,c
 10712  001F4C  0E00               	movlw	0
 10713  001F4E  6E16               	movwf	(i2___flmul@a+3)^0,c
 10714  001F50  EC27  F00B         	call	i2___flmul	;wreg free
 10715  001F54  C00F  F028         	movff	?i2___flmul,?i2_roundf
 10716  001F58  C010  F029         	movff	?i2___flmul+1,?i2_roundf+1
 10717  001F5C  C011  F02A         	movff	?i2___flmul+2,?i2_roundf+2
 10718  001F60  C012  F02B         	movff	?i2___flmul+3,?i2_roundf+3
 10719  001F64  EFF2  F010         	goto	i2l1188
 10720  001F68                     i2l5267:
 10721  001F68  0E00               	movlw	0
 10722  001F6A  6E05               	movwf	i2___fladd@a^0,c
 10723  001F6C  0E00               	movlw	0
 10724  001F6E  6E06               	movwf	(i2___fladd@a+1)^0,c
 10725  001F70  0E00               	movlw	0
 10726  001F72  6E07               	movwf	(i2___fladd@a+2)^0,c
 10727  001F74  0E4B               	movlw	75
 10728  001F76  6E08               	movwf	(i2___fladd@a+3)^0,c
 10729  001F78  C028  F001         	movff	i2roundf@x,i2___fladd@b
 10730  001F7C  C029  F002         	movff	i2roundf@x+1,i2___fladd@b+1
 10731  001F80  C02A  F003         	movff	i2roundf@x+2,i2___fladd@b+2
 10732  001F84  C02B  F004         	movff	i2roundf@x+3,i2___fladd@b+3
 10733  001F88  ECB1  F006         	call	i2___fladd	;wreg free
 10734  001F8C  C001  F036         	movff	?i2___fladd,i2_roundf$1960
 10735  001F90  C002  F037         	movff	?i2___fladd+1,i2_roundf$1960+1
 10736  001F94  C003  F038         	movff	?i2___fladd+2,i2_roundf$1960+2
 10737  001F98  C004  F039         	movff	?i2___fladd+3,i2_roundf$1960+3
 10738  001F9C  0E00               	movlw	0
 10739  001F9E  6E05               	movwf	i2___fladd@a^0,c
 10740  001FA0  0E00               	movlw	0
 10741  001FA2  6E06               	movwf	(i2___fladd@a+1)^0,c
 10742  001FA4  0E00               	movlw	0
 10743  001FA6  6E07               	movwf	(i2___fladd@a+2)^0,c
 10744  001FA8  0ECB               	movlw	203
 10745  001FAA  6E08               	movwf	(i2___fladd@a+3)^0,c
 10746  001FAC  C036  F001         	movff	i2_roundf$1960,i2___fladd@b
 10747  001FB0  C037  F002         	movff	i2_roundf$1960+1,i2___fladd@b+1
 10748  001FB4  C038  F003         	movff	i2_roundf$1960+2,i2___fladd@b+2
 10749  001FB8  C039  F004         	movff	i2_roundf$1960+3,i2___fladd@b+3
 10750  001FBC  ECB1  F006         	call	i2___fladd	;wreg free
 10751  001FC0  C001  F030         	movff	?i2___fladd,i2_roundf$1961
 10752  001FC4  C002  F031         	movff	?i2___fladd+1,i2_roundf$1961+1
 10753  001FC8  C003  F032         	movff	?i2___fladd+2,i2_roundf$1961+2
 10754  001FCC  C004  F033         	movff	?i2___fladd+3,i2_roundf$1961+3
 10755  001FD0  C030  F011         	movff	i2_roundf$1961,i2___flsub@b
 10756  001FD4  C031  F012         	movff	i2_roundf$1961+1,i2___flsub@b+1
 10757  001FD8  C032  F013         	movff	i2_roundf$1961+2,i2___flsub@b+2
 10758  001FDC  C033  F014         	movff	i2_roundf$1961+3,i2___flsub@b+3
 10759  001FE0  C028  F015         	movff	i2roundf@x,i2___flsub@a
 10760  001FE4  C029  F016         	movff	i2roundf@x+1,i2___flsub@a+1
 10761  001FE8  C02A  F017         	movff	i2roundf@x+2,i2___flsub@a+2
 10762  001FEC  C02B  F018         	movff	i2roundf@x+3,i2___flsub@a+3
 10763  001FF0  EC17  F022         	call	i2___flsub	;wreg free
 10764  001FF4  C011  F03E         	movff	?i2___flsub,i2roundf@y
 10765  001FF8  C012  F03F         	movff	?i2___flsub+1,i2roundf@y+1
 10766  001FFC  C013  F040         	movff	?i2___flsub+2,i2roundf@y+2
 10767  002000  C014  F041         	movff	?i2___flsub+3,i2roundf@y+3
 10768  002004  0E00               	movlw	0
 10769  002006  6E01               	movwf	i2___flge@ff1^0,c
 10770  002008  0E00               	movlw	0
 10771  00200A  6E02               	movwf	(i2___flge@ff1+1)^0,c
 10772  00200C  0E00               	movlw	0
 10773  00200E  6E03               	movwf	(i2___flge@ff1+2)^0,c
 10774  002010  0E3F               	movlw	63
 10775  002012  6E04               	movwf	(i2___flge@ff1+3)^0,c
 10776  002014  C03E  F005         	movff	i2roundf@y,i2___flge@ff2
 10777  002018  C03F  F006         	movff	i2roundf@y+1,i2___flge@ff2+1
 10778  00201C  C040  F007         	movff	i2roundf@y+2,i2___flge@ff2+2
 10779  002020  C041  F008         	movff	i2roundf@y+3,i2___flge@ff2+3
 10780  002024  EC50  F01A         	call	i2___flge	;wreg free
 10781  002028  B0D8               	btfsc	status,0,c
 10782  00202A  EF19  F010         	goto	i2u601_41
 10783  00202E  EF1B  F010         	goto	i2u601_40
 10784  002032                     i2u601_41:
 10785  002032  EF51  F010         	goto	i2l5271
 10786  002036                     i2u601_40:
 10787  002036  C028  F005         	movff	i2roundf@x,i2___fladd@a
 10788  00203A  C029  F006         	movff	i2roundf@x+1,i2___fladd@a+1
 10789  00203E  C02A  F007         	movff	i2roundf@x+2,i2___fladd@a+2
 10790  002042  C02B  F008         	movff	i2roundf@x+3,i2___fladd@a+3
 10791  002046  C03E  F001         	movff	i2roundf@y,i2___fladd@b
 10792  00204A  C03F  F002         	movff	i2roundf@y+1,i2___fladd@b+1
 10793  00204E  C040  F003         	movff	i2roundf@y+2,i2___fladd@b+2
 10794  002052  C041  F004         	movff	i2roundf@y+3,i2___fladd@b+3
 10795  002056  ECB1  F006         	call	i2___fladd	;wreg free
 10796  00205A  C001  F036         	movff	?i2___fladd,i2_roundf$1960
 10797  00205E  C002  F037         	movff	?i2___fladd+1,i2_roundf$1960+1
 10798  002062  C003  F038         	movff	?i2___fladd+2,i2_roundf$1960+2
 10799  002066  C004  F039         	movff	?i2___fladd+3,i2_roundf$1960+3
 10800  00206A  C036  F001         	movff	i2_roundf$1960,i2___fladd@b
 10801  00206E  C037  F002         	movff	i2_roundf$1960+1,i2___fladd@b+1
 10802  002072  C038  F003         	movff	i2_roundf$1960+2,i2___fladd@b+2
 10803  002076  C039  F004         	movff	i2_roundf$1960+3,i2___fladd@b+3
 10804  00207A  0E00               	movlw	0
 10805  00207C  6E05               	movwf	i2___fladd@a^0,c
 10806  00207E  0E00               	movlw	0
 10807  002080  6E06               	movwf	(i2___fladd@a+1)^0,c
 10808  002082  0E80               	movlw	128
 10809  002084  6E07               	movwf	(i2___fladd@a+2)^0,c
 10810  002086  0EBF               	movlw	191
 10811  002088  6E08               	movwf	(i2___fladd@a+3)^0,c
 10812  00208A  ECB1  F006         	call	i2___fladd	;wreg free
 10813  00208E  C001  F03E         	movff	?i2___fladd,i2roundf@y
 10814  002092  C002  F03F         	movff	?i2___fladd+1,i2roundf@y+1
 10815  002096  C003  F040         	movff	?i2___fladd+2,i2roundf@y+2
 10816  00209A  C004  F041         	movff	?i2___fladd+3,i2roundf@y+3
 10817  00209E  EFBA  F010         	goto	i2l5277
 10818  0020A2                     i2l5271:
 10819  0020A2  0E00               	movlw	0
 10820  0020A4  6E01               	movwf	i2___flge@ff1^0,c
 10821  0020A6  0E00               	movlw	0
 10822  0020A8  6E02               	movwf	(i2___flge@ff1+1)^0,c
 10823  0020AA  0E00               	movlw	0
 10824  0020AC  6E03               	movwf	(i2___flge@ff1+2)^0,c
 10825  0020AE  0EBF               	movlw	191
 10826  0020B0  6E04               	movwf	(i2___flge@ff1+3)^0,c
 10827  0020B2  C03E  F005         	movff	i2roundf@y,i2___flge@ff2
 10828  0020B6  C03F  F006         	movff	i2roundf@y+1,i2___flge@ff2+1
 10829  0020BA  C040  F007         	movff	i2roundf@y+2,i2___flge@ff2+2
 10830  0020BE  C041  F008         	movff	i2roundf@y+3,i2___flge@ff2+3
 10831  0020C2  EC50  F01A         	call	i2___flge	;wreg free
 10832  0020C6  A0D8               	btfss	status,0,c
 10833  0020C8  EF68  F010         	goto	i2u602_41
 10834  0020CC  EF6A  F010         	goto	i2u602_40
 10835  0020D0                     i2u602_41:
 10836  0020D0  EFA0  F010         	goto	i2l5275
 10837  0020D4                     i2u602_40:
 10838  0020D4  C028  F005         	movff	i2roundf@x,i2___fladd@a
 10839  0020D8  C029  F006         	movff	i2roundf@x+1,i2___fladd@a+1
 10840  0020DC  C02A  F007         	movff	i2roundf@x+2,i2___fladd@a+2
 10841  0020E0  C02B  F008         	movff	i2roundf@x+3,i2___fladd@a+3
 10842  0020E4  C03E  F001         	movff	i2roundf@y,i2___fladd@b
 10843  0020E8  C03F  F002         	movff	i2roundf@y+1,i2___fladd@b+1
 10844  0020EC  C040  F003         	movff	i2roundf@y+2,i2___fladd@b+2
 10845  0020F0  C041  F004         	movff	i2roundf@y+3,i2___fladd@b+3
 10846  0020F4  ECB1  F006         	call	i2___fladd	;wreg free
 10847  0020F8  C001  F036         	movff	?i2___fladd,i2_roundf$1960
 10848  0020FC  C002  F037         	movff	?i2___fladd+1,i2_roundf$1960+1
 10849  002100  C003  F038         	movff	?i2___fladd+2,i2_roundf$1960+2
 10850  002104  C004  F039         	movff	?i2___fladd+3,i2_roundf$1960+3
 10851  002108  C036  F001         	movff	i2_roundf$1960,i2___fladd@b
 10852  00210C  C037  F002         	movff	i2_roundf$1960+1,i2___fladd@b+1
 10853  002110  C038  F003         	movff	i2_roundf$1960+2,i2___fladd@b+2
 10854  002114  C039  F004         	movff	i2_roundf$1960+3,i2___fladd@b+3
 10855  002118  0E00               	movlw	0
 10856  00211A  6E05               	movwf	i2___fladd@a^0,c
 10857  00211C  0E00               	movlw	0
 10858  00211E  6E06               	movwf	(i2___fladd@a+1)^0,c
 10859  002120  0E80               	movlw	128
 10860  002122  6E07               	movwf	(i2___fladd@a+2)^0,c
 10861  002124  0E3F               	movlw	63
 10862  002126  6E08               	movwf	(i2___fladd@a+3)^0,c
 10863  002128  ECB1  F006         	call	i2___fladd	;wreg free
 10864  00212C  C001  F03E         	movff	?i2___fladd,i2roundf@y
 10865  002130  C002  F03F         	movff	?i2___fladd+1,i2roundf@y+1
 10866  002134  C003  F040         	movff	?i2___fladd+2,i2roundf@y+2
 10867  002138  C004  F041         	movff	?i2___fladd+3,i2roundf@y+3
 10868  00213C  EFBA  F010         	goto	i2l5277
 10869  002140                     i2l5275:
 10870  002140  C03E  F001         	movff	i2roundf@y,i2___fladd@b
 10871  002144  C03F  F002         	movff	i2roundf@y+1,i2___fladd@b+1
 10872  002148  C040  F003         	movff	i2roundf@y+2,i2___fladd@b+2
 10873  00214C  C041  F004         	movff	i2roundf@y+3,i2___fladd@b+3
 10874  002150  C028  F005         	movff	i2roundf@x,i2___fladd@a
 10875  002154  C029  F006         	movff	i2roundf@x+1,i2___fladd@a+1
 10876  002158  C02A  F007         	movff	i2roundf@x+2,i2___fladd@a+2
 10877  00215C  C02B  F008         	movff	i2roundf@x+3,i2___fladd@a+3
 10878  002160  ECB1  F006         	call	i2___fladd	;wreg free
 10879  002164  C001  F03E         	movff	?i2___fladd,i2roundf@y
 10880  002168  C002  F03F         	movff	?i2___fladd+1,i2roundf@y+1
 10881  00216C  C003  F040         	movff	?i2___fladd+2,i2roundf@y+2
 10882  002170  C004  F041         	movff	?i2___fladd+3,i2roundf@y+3
 10883  002174                     i2l5277:
 10884  002174  C03A  F02C         	movff	i2roundf@u,??i2_roundf
 10885  002178  C03B  F02D         	movff	i2roundf@u+1,??i2_roundf+1
 10886  00217C  C03C  F02E         	movff	i2roundf@u+2,??i2_roundf+2
 10887  002180  C03D  F02F         	movff	i2roundf@u+3,??i2_roundf+3
 10888  002184  0E20               	movlw	32
 10889  002186  EFCA  F010         	goto	i2u603_40
 10890  00218A                     i2u603_45:
 10891  00218A  90D8               	bcf	status,0,c
 10892  00218C  322F               	rrcf	(??i2_roundf+3)^0,f,c
 10893  00218E  322E               	rrcf	(??i2_roundf+2)^0,f,c
 10894  002190  322D               	rrcf	(??i2_roundf+1)^0,f,c
 10895  002192  322C               	rrcf	??i2_roundf^0,f,c
 10896  002194                     i2u603_40:
 10897  002194  2EE8               	decfsz	wreg,f,c
 10898  002196  EFC5  F010         	goto	i2u603_45
 10899  00219A  502C               	movf	??i2_roundf^0,w,c
 10900  00219C  102D               	iorwf	(??i2_roundf+1)^0,w,c
 10901  00219E  102E               	iorwf	(??i2_roundf+2)^0,w,c
 10902  0021A0  102F               	iorwf	(??i2_roundf+3)^0,w,c
 10903  0021A2  B4D8               	btfsc	status,2,c
 10904  0021A4  EFD6  F010         	goto	i2u604_41
 10905  0021A8  EFD8  F010         	goto	i2u604_40
 10906  0021AC                     i2u604_41:
 10907  0021AC  EFEA  F010         	goto	i2l5281
 10908  0021B0                     i2u604_40:
 10909  0021B0  C03E  F001         	movff	i2roundf@y,i2___flneg@f1
 10910  0021B4  C03F  F002         	movff	i2roundf@y+1,i2___flneg@f1+1
 10911  0021B8  C040  F003         	movff	i2roundf@y+2,i2___flneg@f1+2
 10912  0021BC  C041  F004         	movff	i2roundf@y+3,i2___flneg@f1+3
 10913  0021C0  EC71  F023         	call	i2___flneg	;wreg free
 10914  0021C4  C001  F03E         	movff	?i2___flneg,i2roundf@y
 10915  0021C8  C002  F03F         	movff	?i2___flneg+1,i2roundf@y+1
 10916  0021CC  C003  F040         	movff	?i2___flneg+2,i2roundf@y+2
 10917  0021D0  C004  F041         	movff	?i2___flneg+3,i2roundf@y+3
 10918  0021D4                     i2l5281:
 10919  0021D4  C03E  F028         	movff	i2roundf@y,?i2_roundf
 10920  0021D8  C03F  F029         	movff	i2roundf@y+1,?i2_roundf+1
 10921  0021DC  C040  F02A         	movff	i2roundf@y+2,?i2_roundf+2
 10922  0021E0  C041  F02B         	movff	i2roundf@y+3,?i2_roundf+3
 10923  0021E4                     i2l1188:
 10924  0021E4  0012               	return		;funcret
 10925  0021E6                     __end_ofi2_roundf:
 10926                           	callstack 0
 10927                           
 10928 ;; *************** function i2___flsub *****************
 10929 ;; Defined at:
 10930 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  b               4   16[COMRAM] float 
 10933 ;;  a               4   20[COMRAM] float 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;		None
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  4   16[COMRAM] float 
 10938 ;; Registers used:
 10939 ;;		wreg, status,2, status,0, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10945 ;;      Params:         8       0       0       0       0       0       0       0       0
 10946 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10947 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10948 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10949 ;;Total ram usage:        8 bytes
 10950 ;; Hardware stack levels used: 1
 10951 ;; Hardware stack levels required when called: 1
 10952 ;; This function calls:
 10953 ;;		i2___fladd
 10954 ;; This function is called by:
 10955 ;;		i2_roundf
 10956 ;; This function uses a non-reentrant model
 10957 ;;
 10958                           
 10959                           	psect	text61
 10960  00442E                     __ptext61:
 10961                           	callstack 0
 10962  00442E                     i2___flsub:
 10963                           	callstack 17
 10964  00442E  0E00               	movlw	0
 10965  004430  1A15               	xorwf	i2___flsub@a^0,f,c
 10966  004432  0E00               	movlw	0
 10967  004434  1A16               	xorwf	(i2___flsub@a+1)^0,f,c
 10968  004436  0E00               	movlw	0
 10969  004438  1A17               	xorwf	(i2___flsub@a+2)^0,f,c
 10970  00443A  0E80               	movlw	128
 10971  00443C  1A18               	xorwf	(i2___flsub@a+3)^0,f,c
 10972  00443E  C011  F001         	movff	i2___flsub@b,i2___fladd@b
 10973  004442  C012  F002         	movff	i2___flsub@b+1,i2___fladd@b+1
 10974  004446  C013  F003         	movff	i2___flsub@b+2,i2___fladd@b+2
 10975  00444A  C014  F004         	movff	i2___flsub@b+3,i2___fladd@b+3
 10976  00444E  C015  F005         	movff	i2___flsub@a,i2___fladd@a
 10977  004452  C016  F006         	movff	i2___flsub@a+1,i2___fladd@a+1
 10978  004456  C017  F007         	movff	i2___flsub@a+2,i2___fladd@a+2
 10979  00445A  C018  F008         	movff	i2___flsub@a+3,i2___fladd@a+3
 10980  00445E  ECB1  F006         	call	i2___fladd	;wreg free
 10981  004462  C001  F011         	movff	?i2___fladd,?i2___flsub
 10982  004466  C002  F012         	movff	?i2___fladd+1,?i2___flsub+1
 10983  00446A  C003  F013         	movff	?i2___fladd+2,?i2___flsub+2
 10984  00446E  C004  F014         	movff	?i2___fladd+3,?i2___flsub+3
 10985  004472  0012               	return		;funcret
 10986  004474                     __end_ofi2___flsub:
 10987                           	callstack 0
 10988                           
 10989 ;; *************** function i2___fladd *****************
 10990 ;; Defined at:
 10991 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;  b               4    0[COMRAM] float 
 10994 ;;  a               4    4[COMRAM] float 
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;  grs             1   15[COMRAM] unsigned char 
 10997 ;;  bexp            1   14[COMRAM] unsigned char 
 10998 ;;  aexp            1   13[COMRAM] unsigned char 
 10999 ;;  signs           1   12[COMRAM] unsigned char 
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  4    0[COMRAM] unsigned char 
 11002 ;; Registers used:
 11003 ;;		wreg, status,2, status,0
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11009 ;;      Params:         8       0       0       0       0       0       0       0       0
 11010 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11011 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11012 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11013 ;;Total ram usage:       16 bytes
 11014 ;; Hardware stack levels used: 1
 11015 ;; This function calls:
 11016 ;;		Nothing
 11017 ;; This function is called by:
 11018 ;;		i2___flsub
 11019 ;;		i2_roundf
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text62
 11024  000D62                     __ptext62:
 11025                           	callstack 0
 11026  000D62                     i2___fladd:
 11027                           	callstack 17
 11028  000D62  5004               	movf	(i2___fladd@b+3)^0,w,c
 11029  000D64  0B80               	andlw	128
 11030  000D66  6E0D               	movwf	i2___fladd@signs^0,c
 11031  000D68  5004               	movf	(i2___fladd@b+3)^0,w,c
 11032  000D6A  2404               	addwf	(i2___fladd@b+3)^0,w,c
 11033  000D6C  6E0F               	movwf	i2___fladd@bexp^0,c
 11034  000D6E  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 11035  000D70  EFBC  F006         	goto	i2u427_41
 11036  000D74  EFBE  F006         	goto	i2u427_40
 11037  000D78                     i2u427_41:
 11038  000D78  EFBF  F006         	goto	i2l4163
 11039  000D7C                     i2u427_40:
 11040  000D7C  800F               	bsf	i2___fladd@bexp^0,0,c
 11041  000D7E                     i2l4163:
 11042  000D7E  500F               	movf	i2___fladd@bexp^0,w,c
 11043  000D80  B4D8               	btfsc	status,2,c
 11044  000D82  EFC5  F006         	goto	i2u428_41
 11045  000D86  EFC7  F006         	goto	i2u428_40
 11046  000D8A                     i2u428_41:
 11047  000D8A  EFDC  F006         	goto	i2l4173
 11048  000D8E                     i2u428_40:
 11049  000D8E  280F               	incf	i2___fladd@bexp^0,w,c
 11050  000D90  A4D8               	btfss	status,2,c
 11051  000D92  EFCD  F006         	goto	i2u429_41
 11052  000D96  EFCF  F006         	goto	i2u429_40
 11053  000D9A                     i2u429_41:
 11054  000D9A  EFD7  F006         	goto	i2l4169
 11055  000D9E                     i2u429_40:
 11056  000D9E  0E00               	movlw	0
 11057  000DA0  6E01               	movwf	i2___fladd@b^0,c
 11058  000DA2  0E00               	movlw	0
 11059  000DA4  6E02               	movwf	(i2___fladd@b+1)^0,c
 11060  000DA6  0E00               	movlw	0
 11061  000DA8  6E03               	movwf	(i2___fladd@b+2)^0,c
 11062  000DAA  0E00               	movlw	0
 11063  000DAC  6E04               	movwf	(i2___fladd@b+3)^0,c
 11064  000DAE                     i2l4169:
 11065  000DAE  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 11066  000DB0  0E00               	movlw	0
 11067  000DB2  6E04               	movwf	(i2___fladd@b+3)^0,c
 11068  000DB4  EFE4  F006         	goto	i2l4175
 11069  000DB8                     i2l4173:
 11070  000DB8  0E00               	movlw	0
 11071  000DBA  6E01               	movwf	i2___fladd@b^0,c
 11072  000DBC  0E00               	movlw	0
 11073  000DBE  6E02               	movwf	(i2___fladd@b+1)^0,c
 11074  000DC0  0E00               	movlw	0
 11075  000DC2  6E03               	movwf	(i2___fladd@b+2)^0,c
 11076  000DC4  0E00               	movlw	0
 11077  000DC6  6E04               	movwf	(i2___fladd@b+3)^0,c
 11078  000DC8                     i2l4175:
 11079  000DC8  5008               	movf	(i2___fladd@a+3)^0,w,c
 11080  000DCA  0B80               	andlw	128
 11081  000DCC  6E0E               	movwf	i2___fladd@aexp^0,c
 11082  000DCE  500D               	movf	i2___fladd@signs^0,w,c
 11083  000DD0  180E               	xorwf	i2___fladd@aexp^0,w,c
 11084  000DD2  B4D8               	btfsc	status,2,c
 11085  000DD4  EFEE  F006         	goto	i2u430_41
 11086  000DD8  EFF0  F006         	goto	i2u430_40
 11087  000DDC                     i2u430_41:
 11088  000DDC  EFF1  F006         	goto	i2l4181
 11089  000DE0                     i2u430_40:
 11090  000DE0  8C0D               	bsf	i2___fladd@signs^0,6,c
 11091  000DE2                     i2l4181:
 11092  000DE2  5008               	movf	(i2___fladd@a+3)^0,w,c
 11093  000DE4  2408               	addwf	(i2___fladd@a+3)^0,w,c
 11094  000DE6  6E0E               	movwf	i2___fladd@aexp^0,c
 11095  000DE8  AE07               	btfss	(i2___fladd@a+2)^0,7,c
 11096  000DEA  EFF9  F006         	goto	i2u431_41
 11097  000DEE  EFFB  F006         	goto	i2u431_40
 11098  000DF2                     i2u431_41:
 11099  000DF2  EFFC  F006         	goto	i2l4187
 11100  000DF6                     i2u431_40:
 11101  000DF6  800E               	bsf	i2___fladd@aexp^0,0,c
 11102  000DF8                     i2l4187:
 11103  000DF8  500E               	movf	i2___fladd@aexp^0,w,c
 11104  000DFA  B4D8               	btfsc	status,2,c
 11105  000DFC  EF02  F007         	goto	i2u432_41
 11106  000E00  EF04  F007         	goto	i2u432_40
 11107  000E04                     i2u432_41:
 11108  000E04  EF19  F007         	goto	i2l4197
 11109  000E08                     i2u432_40:
 11110  000E08  280E               	incf	i2___fladd@aexp^0,w,c
 11111  000E0A  A4D8               	btfss	status,2,c
 11112  000E0C  EF0A  F007         	goto	i2u433_41
 11113  000E10  EF0C  F007         	goto	i2u433_40
 11114  000E14                     i2u433_41:
 11115  000E14  EF14  F007         	goto	i2l4193
 11116  000E18                     i2u433_40:
 11117  000E18  0E00               	movlw	0
 11118  000E1A  6E05               	movwf	i2___fladd@a^0,c
 11119  000E1C  0E00               	movlw	0
 11120  000E1E  6E06               	movwf	(i2___fladd@a+1)^0,c
 11121  000E20  0E00               	movlw	0
 11122  000E22  6E07               	movwf	(i2___fladd@a+2)^0,c
 11123  000E24  0E00               	movlw	0
 11124  000E26  6E08               	movwf	(i2___fladd@a+3)^0,c
 11125  000E28                     i2l4193:
 11126  000E28  8E07               	bsf	(i2___fladd@a+2)^0,7,c
 11127  000E2A  0E00               	movlw	0
 11128  000E2C  6E08               	movwf	(i2___fladd@a+3)^0,c
 11129  000E2E  EF21  F007         	goto	i2l4199
 11130  000E32                     i2l4197:
 11131  000E32  0E00               	movlw	0
 11132  000E34  6E05               	movwf	i2___fladd@a^0,c
 11133  000E36  0E00               	movlw	0
 11134  000E38  6E06               	movwf	(i2___fladd@a+1)^0,c
 11135  000E3A  0E00               	movlw	0
 11136  000E3C  6E07               	movwf	(i2___fladd@a+2)^0,c
 11137  000E3E  0E00               	movlw	0
 11138  000E40  6E08               	movwf	(i2___fladd@a+3)^0,c
 11139  000E42                     i2l4199:
 11140  000E42  500F               	movf	i2___fladd@bexp^0,w,c
 11141  000E44  5C0E               	subwf	i2___fladd@aexp^0,w,c
 11142  000E46  B0D8               	btfsc	status,0,c
 11143  000E48  EF28  F007         	goto	i2u434_41
 11144  000E4C  EF2A  F007         	goto	i2u434_40
 11145  000E50                     i2u434_41:
 11146  000E50  EF51  F007         	goto	i2l4235
 11147  000E54                     i2u434_40:
 11148  000E54  AC0D               	btfss	i2___fladd@signs^0,6,c
 11149  000E56  EF2F  F007         	goto	i2u435_41
 11150  000E5A  EF31  F007         	goto	i2u435_40
 11151  000E5E                     i2u435_41:
 11152  000E5E  EF33  F007         	goto	i2l4205
 11153  000E62                     i2u435_40:
 11154  000E62  0E80               	movlw	128
 11155  000E64  1A0D               	xorwf	i2___fladd@signs^0,f,c
 11156  000E66                     i2l4205:
 11157  000E66  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 11158  000E6A  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 11159  000E6E  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 11160  000E72  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 11161  000E76  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 11162  000E7A  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 11163  000E7E  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 11164  000E82  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 11165  000E86  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 11166  000E8A  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 11167  000E8E  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 11168  000E92  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 11169  000E96  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 11170  000E9A  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 11171  000E9E  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 11172  000EA2                     i2l4235:
 11173  000EA2  0E00               	movlw	0
 11174  000EA4  6E10               	movwf	i2___fladd@grs^0,c
 11175  000EA6  500F               	movf	i2___fladd@bexp^0,w,c
 11176  000EA8  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 11177  000EAC  6A0A               	clrf	(??i2___fladd+1)^0,c
 11178  000EAE  5E09               	subwf	??i2___fladd^0,f,c
 11179  000EB0  0E00               	movlw	0
 11180  000EB2  5A0A               	subwfb	(??i2___fladd+1)^0,f,c
 11181  000EB4  BE0A               	btfsc	(??i2___fladd+1)^0,7,c
 11182  000EB6  EF66  F007         	goto	i2u436_41
 11183  000EBA  500A               	movf	(??i2___fladd+1)^0,w,c
 11184  000EBC  E109               	bnz	i2u436_40
 11185  000EBE  0E1A               	movlw	26
 11186  000EC0  5C09               	subwf	??i2___fladd^0,w,c
 11187  000EC2  A0D8               	btfss	status,0,c
 11188  000EC4  EF66  F007         	goto	i2u436_41
 11189  000EC8  EF68  F007         	goto	i2u436_40
 11190  000ECC                     i2u436_41:
 11191  000ECC  EF9F  F007         	goto	i2l923
 11192  000ED0                     i2u436_40:
 11193  000ED0  5001               	movf	i2___fladd@b^0,w,c
 11194  000ED2  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 11195  000ED4  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 11196  000ED6  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 11197  000ED8  A4D8               	btfss	status,2,c
 11198  000EDA  EF71  F007         	goto	i2u437_41
 11199  000EDE  EF74  F007         	goto	i2u437_40
 11200  000EE2                     i2u437_41:
 11201  000EE2  0E01               	movlw	1
 11202  000EE4  EF75  F007         	goto	i2u438_40
 11203  000EE8                     i2u437_40:
 11204  000EE8  0E00               	movlw	0
 11205  000EEA                     i2u438_40:
 11206  000EEA  6E10               	movwf	i2___fladd@grs^0,c
 11207  000EEC  0E00               	movlw	0
 11208  000EEE  6E01               	movwf	i2___fladd@b^0,c
 11209  000EF0  0E00               	movlw	0
 11210  000EF2  6E02               	movwf	(i2___fladd@b+1)^0,c
 11211  000EF4  0E00               	movlw	0
 11212  000EF6  6E03               	movwf	(i2___fladd@b+2)^0,c
 11213  000EF8  0E00               	movlw	0
 11214  000EFA  6E04               	movwf	(i2___fladd@b+3)^0,c
 11215  000EFC  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 11216  000F00  EFA8  F007         	goto	i2l922
 11217  000F04                     i2l924:
 11218  000F04  A010               	btfss	i2___fladd@grs^0,0,c
 11219  000F06  EF87  F007         	goto	i2u439_41
 11220  000F0A  EF89  F007         	goto	i2u439_40
 11221  000F0E                     i2u439_41:
 11222  000F0E  EF8F  F007         	goto	i2l4247
 11223  000F12                     i2u439_40:
 11224  000F12  90D8               	bcf	status,0,c
 11225  000F14  3010               	rrcf	i2___fladd@grs^0,w,c
 11226  000F16  0901               	iorlw	1
 11227  000F18  6E10               	movwf	i2___fladd@grs^0,c
 11228  000F1A  EF91  F007         	goto	i2l4249
 11229  000F1E                     i2l4247:
 11230  000F1E  90D8               	bcf	status,0,c
 11231  000F20  3210               	rrcf	i2___fladd@grs^0,f,c
 11232  000F22                     i2l4249:
 11233  000F22  A001               	btfss	i2___fladd@b^0,0,c
 11234  000F24  EF96  F007         	goto	i2u440_41
 11235  000F28  EF98  F007         	goto	i2u440_40
 11236  000F2C                     i2u440_41:
 11237  000F2C  EF99  F007         	goto	i2l4253
 11238  000F30                     i2u440_40:
 11239  000F30  8E10               	bsf	i2___fladd@grs^0,7,c
 11240  000F32                     i2l4253:
 11241  000F32  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 11242  000F34  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 11243  000F36  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 11244  000F38  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 11245  000F3A  3201               	rrcf	i2___fladd@b^0,f,c
 11246  000F3C  2A0F               	incf	i2___fladd@bexp^0,f,c
 11247  000F3E                     i2l923:
 11248  000F3E  500E               	movf	i2___fladd@aexp^0,w,c
 11249  000F40  5C0F               	subwf	i2___fladd@bexp^0,w,c
 11250  000F42  A0D8               	btfss	status,0,c
 11251  000F44  EFA6  F007         	goto	i2u441_41
 11252  000F48  EFA8  F007         	goto	i2u441_40
 11253  000F4C                     i2u441_41:
 11254  000F4C  EF82  F007         	goto	i2l924
 11255  000F50                     i2u441_40:
 11256  000F50                     i2l922:
 11257  000F50  BC0D               	btfsc	i2___fladd@signs^0,6,c
 11258  000F52  EFAD  F007         	goto	i2u442_41
 11259  000F56  EFAF  F007         	goto	i2u442_40
 11260  000F5A                     i2u442_41:
 11261  000F5A  EFEF  F007         	goto	i2l4281
 11262  000F5E                     i2u442_40:
 11263  000F5E  500F               	movf	i2___fladd@bexp^0,w,c
 11264  000F60  A4D8               	btfss	status,2,c
 11265  000F62  EFB5  F007         	goto	i2u443_41
 11266  000F66  EFB7  F007         	goto	i2u443_40
 11267  000F6A                     i2u443_41:
 11268  000F6A  EFC1  F007         	goto	i2l4263
 11269  000F6E                     i2u443_40:
 11270  000F6E  0E00               	movlw	0
 11271  000F70  6E01               	movwf	?i2___fladd^0,c
 11272  000F72  0E00               	movlw	0
 11273  000F74  6E02               	movwf	(?i2___fladd+1)^0,c
 11274  000F76  0E00               	movlw	0
 11275  000F78  6E03               	movwf	(?i2___fladd+2)^0,c
 11276  000F7A  0E00               	movlw	0
 11277  000F7C  6E04               	movwf	(?i2___fladd+3)^0,c
 11278  000F7E  EF10  F009         	goto	i2l931
 11279  000F82                     i2l4263:
 11280  000F82  5005               	movf	i2___fladd@a^0,w,c
 11281  000F84  2601               	addwf	i2___fladd@b^0,f,c
 11282  000F86  5006               	movf	(i2___fladd@a+1)^0,w,c
 11283  000F88  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 11284  000F8A  5007               	movf	(i2___fladd@a+2)^0,w,c
 11285  000F8C  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 11286  000F8E  5008               	movf	(i2___fladd@a+3)^0,w,c
 11287  000F90  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 11288  000F92  A004               	btfss	(i2___fladd@b+3)^0,0,c
 11289  000F94  EFCE  F007         	goto	i2u444_41
 11290  000F98  EFD0  F007         	goto	i2u444_40
 11291  000F9C                     i2u444_41:
 11292  000F9C  EF7C  F008         	goto	i2l4317
 11293  000FA0                     i2u444_40:
 11294  000FA0  A010               	btfss	i2___fladd@grs^0,0,c
 11295  000FA2  EFD5  F007         	goto	i2u445_41
 11296  000FA6  EFD7  F007         	goto	i2u445_40
 11297  000FAA                     i2u445_41:
 11298  000FAA  EFDD  F007         	goto	i2l4271
 11299  000FAE                     i2u445_40:
 11300  000FAE  90D8               	bcf	status,0,c
 11301  000FB0  3010               	rrcf	i2___fladd@grs^0,w,c
 11302  000FB2  0901               	iorlw	1
 11303  000FB4  6E10               	movwf	i2___fladd@grs^0,c
 11304  000FB6  EFDF  F007         	goto	i2l4273
 11305  000FBA                     i2l4271:
 11306  000FBA  90D8               	bcf	status,0,c
 11307  000FBC  3210               	rrcf	i2___fladd@grs^0,f,c
 11308  000FBE                     i2l4273:
 11309  000FBE  A001               	btfss	i2___fladd@b^0,0,c
 11310  000FC0  EFE4  F007         	goto	i2u446_41
 11311  000FC4  EFE6  F007         	goto	i2u446_40
 11312  000FC8                     i2u446_41:
 11313  000FC8  EFE7  F007         	goto	i2l4277
 11314  000FCC                     i2u446_40:
 11315  000FCC  8E10               	bsf	i2___fladd@grs^0,7,c
 11316  000FCE                     i2l4277:
 11317  000FCE  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 11318  000FD0  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 11319  000FD2  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 11320  000FD4  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 11321  000FD6  3201               	rrcf	i2___fladd@b^0,f,c
 11322  000FD8  2A0F               	incf	i2___fladd@bexp^0,f,c
 11323  000FDA  EF7C  F008         	goto	i2l4317
 11324  000FDE                     i2l4281:
 11325  000FDE  5005               	movf	i2___fladd@a^0,w,c
 11326  000FE0  5C01               	subwf	i2___fladd@b^0,w,c
 11327  000FE2  5006               	movf	(i2___fladd@a+1)^0,w,c
 11328  000FE4  5802               	subwfb	(i2___fladd@b+1)^0,w,c
 11329  000FE6  5007               	movf	(i2___fladd@a+2)^0,w,c
 11330  000FE8  5803               	subwfb	(i2___fladd@b+2)^0,w,c
 11331  000FEA  5004               	movf	(i2___fladd@b+3)^0,w,c
 11332  000FEC  0A80               	xorlw	128
 11333  000FEE  6E09               	movwf	??i2___fladd^0,c
 11334  000FF0  5008               	movf	(i2___fladd@a+3)^0,w,c
 11335  000FF2  0A80               	xorlw	128
 11336  000FF4  5809               	subwfb	??i2___fladd^0,w,c
 11337  000FF6  B0D8               	btfsc	status,0,c
 11338  000FF8  EF00  F008         	goto	i2u447_41
 11339  000FFC  EF02  F008         	goto	i2u447_40
 11340  001000                     i2u447_41:
 11341  001000  EF2D  F008         	goto	i2l4291
 11342  001004                     i2u447_40:
 11343  001004  5001               	movf	i2___fladd@b^0,w,c
 11344  001006  5C05               	subwf	i2___fladd@a^0,w,c
 11345  001008  6E09               	movwf	??i2___fladd^0,c
 11346  00100A  5002               	movf	(i2___fladd@b+1)^0,w,c
 11347  00100C  5806               	subwfb	(i2___fladd@a+1)^0,w,c
 11348  00100E  6E0A               	movwf	(??i2___fladd+1)^0,c
 11349  001010  5003               	movf	(i2___fladd@b+2)^0,w,c
 11350  001012  5807               	subwfb	(i2___fladd@a+2)^0,w,c
 11351  001014  6E0B               	movwf	(??i2___fladd+2)^0,c
 11352  001016  5004               	movf	(i2___fladd@b+3)^0,w,c
 11353  001018  5808               	subwfb	(i2___fladd@a+3)^0,w,c
 11354  00101A  6E0C               	movwf	(??i2___fladd+3)^0,c
 11355  00101C  0EFF               	movlw	255
 11356  00101E  2409               	addwf	??i2___fladd^0,w,c
 11357  001020  6E01               	movwf	i2___fladd@b^0,c
 11358  001022  0EFF               	movlw	255
 11359  001024  200A               	addwfc	(??i2___fladd+1)^0,w,c
 11360  001026  6E02               	movwf	(i2___fladd@b+1)^0,c
 11361  001028  0EFF               	movlw	255
 11362  00102A  200B               	addwfc	(??i2___fladd+2)^0,w,c
 11363  00102C  6E03               	movwf	(i2___fladd@b+2)^0,c
 11364  00102E  0EFF               	movlw	255
 11365  001030  200C               	addwfc	(??i2___fladd+3)^0,w,c
 11366  001032  6E04               	movwf	(i2___fladd@b+3)^0,c
 11367  001034  0E80               	movlw	128
 11368  001036  1A0D               	xorwf	i2___fladd@signs^0,f,c
 11369  001038  6C10               	negf	i2___fladd@grs^0,c
 11370  00103A  5010               	movf	i2___fladd@grs^0,w,c
 11371  00103C  A4D8               	btfss	status,2,c
 11372  00103E  EF23  F008         	goto	i2u448_41
 11373  001042  EF25  F008         	goto	i2u448_40
 11374  001046                     i2u448_41:
 11375  001046  EF35  F008         	goto	i2l939
 11376  00104A                     i2u448_40:
 11377  00104A  0E01               	movlw	1
 11378  00104C  2601               	addwf	i2___fladd@b^0,f,c
 11379  00104E  0E00               	movlw	0
 11380  001050  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 11381  001052  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 11382  001054  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 11383  001056  EF35  F008         	goto	i2l939
 11384  00105A                     i2l4291:
 11385  00105A  5005               	movf	i2___fladd@a^0,w,c
 11386  00105C  5E01               	subwf	i2___fladd@b^0,f,c
 11387  00105E  5006               	movf	(i2___fladd@a+1)^0,w,c
 11388  001060  5A02               	subwfb	(i2___fladd@b+1)^0,f,c
 11389  001062  5007               	movf	(i2___fladd@a+2)^0,w,c
 11390  001064  5A03               	subwfb	(i2___fladd@b+2)^0,f,c
 11391  001066  5008               	movf	(i2___fladd@a+3)^0,w,c
 11392  001068  5A04               	subwfb	(i2___fladd@b+3)^0,f,c
 11393  00106A                     i2l939:
 11394  00106A  5001               	movf	i2___fladd@b^0,w,c
 11395  00106C  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 11396  00106E  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 11397  001070  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 11398  001072  A4D8               	btfss	status,2,c
 11399  001074  EF3E  F008         	goto	i2u449_41
 11400  001078  EF40  F008         	goto	i2u449_40
 11401  00107C                     i2u449_41:
 11402  00107C  EF75  F008         	goto	i2l4315
 11403  001080                     i2u449_40:
 11404  001080  5010               	movf	i2___fladd@grs^0,w,c
 11405  001082  A4D8               	btfss	status,2,c
 11406  001084  EF46  F008         	goto	i2u450_41
 11407  001088  EF48  F008         	goto	i2u450_40
 11408  00108C                     i2u450_41:
 11409  00108C  EF75  F008         	goto	i2l4315
 11410  001090                     i2u450_40:
 11411  001090  0E00               	movlw	0
 11412  001092  6E01               	movwf	?i2___fladd^0,c
 11413  001094  0E00               	movlw	0
 11414  001096  6E02               	movwf	(?i2___fladd+1)^0,c
 11415  001098  0E00               	movlw	0
 11416  00109A  6E03               	movwf	(?i2___fladd+2)^0,c
 11417  00109C  0E00               	movlw	0
 11418  00109E  6E04               	movwf	(?i2___fladd+3)^0,c
 11419  0010A0  EF10  F009         	goto	i2l931
 11420  0010A4                     i2l4299:
 11421  0010A4  90D8               	bcf	status,0,c
 11422  0010A6  3601               	rlcf	i2___fladd@b^0,f,c
 11423  0010A8  3602               	rlcf	(i2___fladd@b+1)^0,f,c
 11424  0010AA  3603               	rlcf	(i2___fladd@b+2)^0,f,c
 11425  0010AC  3604               	rlcf	(i2___fladd@b+3)^0,f,c
 11426  0010AE  AE10               	btfss	i2___fladd@grs^0,7,c
 11427  0010B0  EF5C  F008         	goto	i2u451_41
 11428  0010B4  EF5E  F008         	goto	i2u451_40
 11429  0010B8                     i2u451_41:
 11430  0010B8  EF5F  F008         	goto	i2l4305
 11431  0010BC                     i2u451_40:
 11432  0010BC  8001               	bsf	i2___fladd@b^0,0,c
 11433  0010BE                     i2l4305:
 11434  0010BE  A010               	btfss	i2___fladd@grs^0,0,c
 11435  0010C0  EF64  F008         	goto	i2u452_41
 11436  0010C4  EF66  F008         	goto	i2u452_40
 11437  0010C8                     i2u452_41:
 11438  0010C8  EF6A  F008         	goto	i2l4309
 11439  0010CC                     i2u452_40:
 11440  0010CC  80D8               	bsf	status,0,c
 11441  0010CE  3610               	rlcf	i2___fladd@grs^0,f,c
 11442  0010D0  EF6C  F008         	goto	i2l4311
 11443  0010D4                     i2l4309:
 11444  0010D4  90D8               	bcf	status,0,c
 11445  0010D6  3610               	rlcf	i2___fladd@grs^0,f,c
 11446  0010D8                     i2l4311:
 11447  0010D8  500F               	movf	i2___fladd@bexp^0,w,c
 11448  0010DA  B4D8               	btfsc	status,2,c
 11449  0010DC  EF72  F008         	goto	i2u453_41
 11450  0010E0  EF74  F008         	goto	i2u453_40
 11451  0010E4                     i2u453_41:
 11452  0010E4  EF75  F008         	goto	i2l4315
 11453  0010E8                     i2u453_40:
 11454  0010E8  060F               	decf	i2___fladd@bexp^0,f,c
 11455  0010EA                     i2l4315:
 11456  0010EA  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 11457  0010EC  EF7A  F008         	goto	i2u454_41
 11458  0010F0  EF7C  F008         	goto	i2u454_40
 11459  0010F4                     i2u454_41:
 11460  0010F4  EF52  F008         	goto	i2l4299
 11461  0010F8                     i2u454_40:
 11462  0010F8                     i2l4317:
 11463  0010F8  0E00               	movlw	0
 11464  0010FA  6E0E               	movwf	i2___fladd@aexp^0,c
 11465  0010FC  AE10               	btfss	i2___fladd@grs^0,7,c
 11466  0010FE  EF83  F008         	goto	i2u455_41
 11467  001102  EF85  F008         	goto	i2u455_40
 11468  001106                     i2u455_41:
 11469  001106  EF9D  F008         	goto	i2l948
 11470  00110A                     i2u455_40:
 11471  00110A  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 11472  00110E  0E7F               	movlw	127
 11473  001110  1609               	andwf	??i2___fladd^0,f,c
 11474  001112  B4D8               	btfsc	status,2,c
 11475  001114  EF8E  F008         	goto	i2u456_41
 11476  001118  EF90  F008         	goto	i2u456_40
 11477  00111C                     i2u456_41:
 11478  00111C  EF94  F008         	goto	i2l949
 11479  001120                     i2u456_40:
 11480  001120                     i2l4323:
 11481  001120  0E01               	movlw	1
 11482  001122  6E0E               	movwf	i2___fladd@aexp^0,c
 11483  001124  EF9D  F008         	goto	i2l948
 11484  001128                     i2l949:
 11485  001128  A001               	btfss	i2___fladd@b^0,0,c
 11486  00112A  EF99  F008         	goto	i2u457_41
 11487  00112E  EF9B  F008         	goto	i2u457_40
 11488  001132                     i2u457_41:
 11489  001132  EF9D  F008         	goto	i2l948
 11490  001136                     i2u457_40:
 11491  001136  EF90  F008         	goto	i2l4323
 11492  00113A                     i2l948:
 11493  00113A  500E               	movf	i2___fladd@aexp^0,w,c
 11494  00113C  B4D8               	btfsc	status,2,c
 11495  00113E  EFA3  F008         	goto	i2u458_41
 11496  001142  EFA5  F008         	goto	i2u458_40
 11497  001146                     i2u458_41:
 11498  001146  EFD0  F008         	goto	i2l4335
 11499  00114A                     i2u458_40:
 11500  00114A  0E01               	movlw	1
 11501  00114C  2601               	addwf	i2___fladd@b^0,f,c
 11502  00114E  0E00               	movlw	0
 11503  001150  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 11504  001152  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 11505  001154  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 11506  001156  A004               	btfss	(i2___fladd@b+3)^0,0,c
 11507  001158  EFB0  F008         	goto	i2u459_41
 11508  00115C  EFB2  F008         	goto	i2u459_40
 11509  001160                     i2u459_41:
 11510  001160  EFD0  F008         	goto	i2l4335
 11511  001164                     i2u459_40:
 11512  001164  C001  F009         	movff	i2___fladd@b,??i2___fladd
 11513  001168  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 11514  00116C  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 11515  001170  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 11516  001174  340C               	rlcf	(??i2___fladd+3)^0,w,c
 11517  001176  320C               	rrcf	(??i2___fladd+3)^0,f,c
 11518  001178  320B               	rrcf	(??i2___fladd+2)^0,f,c
 11519  00117A  320A               	rrcf	(??i2___fladd+1)^0,f,c
 11520  00117C  3209               	rrcf	??i2___fladd^0,f,c
 11521  00117E  C009  F001         	movff	??i2___fladd,i2___fladd@b
 11522  001182  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 11523  001186  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 11524  00118A  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 11525  00118E  280F               	incf	i2___fladd@bexp^0,w,c
 11526  001190  B4D8               	btfsc	status,2,c
 11527  001192  EFCD  F008         	goto	i2u460_41
 11528  001196  EFCF  F008         	goto	i2u460_40
 11529  00119A                     i2u460_41:
 11530  00119A  EFD0  F008         	goto	i2l4335
 11531  00119E                     i2u460_40:
 11532  00119E  2A0F               	incf	i2___fladd@bexp^0,f,c
 11533  0011A0                     i2l4335:
 11534  0011A0  280F               	incf	i2___fladd@bexp^0,w,c
 11535  0011A2  B4D8               	btfsc	status,2,c
 11536  0011A4  EFD6  F008         	goto	i2u461_41
 11537  0011A8  EFD8  F008         	goto	i2u461_40
 11538  0011AC                     i2u461_41:
 11539  0011AC  EFE0  F008         	goto	i2l4339
 11540  0011B0                     i2u461_40:
 11541  0011B0  500F               	movf	i2___fladd@bexp^0,w,c
 11542  0011B2  A4D8               	btfss	status,2,c
 11543  0011B4  EFDE  F008         	goto	i2u462_41
 11544  0011B8  EFE0  F008         	goto	i2u462_40
 11545  0011BC                     i2u462_41:
 11546  0011BC  EFF2  F008         	goto	i2l4343
 11547  0011C0                     i2u462_40:
 11548  0011C0                     i2l4339:
 11549  0011C0  0E00               	movlw	0
 11550  0011C2  6E01               	movwf	i2___fladd@b^0,c
 11551  0011C4  0E00               	movlw	0
 11552  0011C6  6E02               	movwf	(i2___fladd@b+1)^0,c
 11553  0011C8  0E00               	movlw	0
 11554  0011CA  6E03               	movwf	(i2___fladd@b+2)^0,c
 11555  0011CC  0E00               	movlw	0
 11556  0011CE  6E04               	movwf	(i2___fladd@b+3)^0,c
 11557  0011D0  500F               	movf	i2___fladd@bexp^0,w,c
 11558  0011D2  A4D8               	btfss	status,2,c
 11559  0011D4  EFEE  F008         	goto	i2u463_41
 11560  0011D8  EFF0  F008         	goto	i2u463_40
 11561  0011DC                     i2u463_41:
 11562  0011DC  EFF2  F008         	goto	i2l4343
 11563  0011E0                     i2u463_40:
 11564  0011E0  0E00               	movlw	0
 11565  0011E2  6E0D               	movwf	i2___fladd@signs^0,c
 11566  0011E4                     i2l4343:
 11567  0011E4  A00F               	btfss	i2___fladd@bexp^0,0,c
 11568  0011E6  EFF7  F008         	goto	i2u464_41
 11569  0011EA  EFF9  F008         	goto	i2u464_40
 11570  0011EE                     i2u464_41:
 11571  0011EE  EFFC  F008         	goto	i2l4347
 11572  0011F2                     i2u464_40:
 11573  0011F2  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 11574  0011F4  EFFD  F008         	goto	i2l4349
 11575  0011F8                     i2l4347:
 11576  0011F8  9E03               	bcf	(i2___fladd@b+2)^0,7,c
 11577  0011FA                     i2l4349:
 11578  0011FA  90D8               	bcf	status,0,c
 11579  0011FC  300F               	rrcf	i2___fladd@bexp^0,w,c
 11580  0011FE  6E04               	movwf	(i2___fladd@b+3)^0,c
 11581  001200  AE0D               	btfss	i2___fladd@signs^0,7,c
 11582  001202  EF05  F009         	goto	i2u465_41
 11583  001206  EF07  F009         	goto	i2u465_40
 11584  00120A                     i2u465_41:
 11585  00120A  EF08  F009         	goto	i2l4355
 11586  00120E                     i2u465_40:
 11587  00120E  8E04               	bsf	(i2___fladd@b+3)^0,7,c
 11588  001210                     i2l4355:
 11589  001210  C001  F001         	movff	i2___fladd@b,?i2___fladd
 11590  001214  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 11591  001218  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 11592  00121C  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 11593  001220                     i2l931:
 11594  001220  0012               	return		;funcret
 11595  001222                     __end_ofi2___fladd:
 11596                           	callstack 0
 11597                           
 11598 ;; *************** function i2___flneg *****************
 11599 ;; Defined at:
 11600 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  f1              4    0[COMRAM] unsigned char 
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  4    0[COMRAM] unsigned char 
 11607 ;; Registers used:
 11608 ;;		wreg, status,2, status,0
 11609 ;; Tracked objects:
 11610 ;;		On entry : 0/0
 11611 ;;		On exit  : 0/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11614 ;;      Params:         4       0       0       0       0       0       0       0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11617 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11618 ;;Total ram usage:        4 bytes
 11619 ;; Hardware stack levels used: 1
 11620 ;; This function calls:
 11621 ;;		Nothing
 11622 ;; This function is called by:
 11623 ;;		i2_roundf
 11624 ;; This function uses a non-reentrant model
 11625 ;;
 11626                           
 11627                           	psect	text63
 11628  0046E2                     __ptext63:
 11629                           	callstack 0
 11630  0046E2                     i2___flneg:
 11631                           	callstack 18
 11632  0046E2  5001               	movf	i2___flneg@f1^0,w,c
 11633  0046E4  1002               	iorwf	(i2___flneg@f1+1)^0,w,c
 11634  0046E6  1003               	iorwf	(i2___flneg@f1+2)^0,w,c
 11635  0046E8  1004               	iorwf	(i2___flneg@f1+3)^0,w,c
 11636  0046EA  B4D8               	btfsc	status,2,c
 11637  0046EC  EF7A  F023         	goto	i2u524_41
 11638  0046F0  EF7C  F023         	goto	i2u524_40
 11639  0046F4                     i2u524_41:
 11640  0046F4  EF84  F023         	goto	i2l4749
 11641  0046F8                     i2u524_40:
 11642  0046F8  0E00               	movlw	0
 11643  0046FA  1A01               	xorwf	i2___flneg@f1^0,f,c
 11644  0046FC  0E00               	movlw	0
 11645  0046FE  1A02               	xorwf	(i2___flneg@f1+1)^0,f,c
 11646  004700  0E00               	movlw	0
 11647  004702  1A03               	xorwf	(i2___flneg@f1+2)^0,f,c
 11648  004704  0E80               	movlw	128
 11649  004706  1A04               	xorwf	(i2___flneg@f1+3)^0,f,c
 11650  004708                     i2l4749:
 11651  004708  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 11652  00470C  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 11653  004710  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 11654  004714  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 11655  004718  0012               	return		;funcret
 11656  00471A                     __end_ofi2___flneg:
 11657                           	callstack 0
 11658                           
 11659 ;; *************** function i2___flmul *****************
 11660 ;; Defined at:
 11661 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 11662 ;; Parameters:    Size  Location     Type
 11663 ;;  b               4   14[COMRAM] unsigned char 
 11664 ;;  a               4   18[COMRAM] unsigned char 
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;  prod            4   33[COMRAM] struct .
 11667 ;;  grs             4   27[COMRAM] unsigned long 
 11668 ;;  temp            2   37[COMRAM] struct .
 11669 ;;  bexp            1   32[COMRAM] unsigned char 
 11670 ;;  aexp            1   31[COMRAM] unsigned char 
 11671 ;;  sign            1   26[COMRAM] unsigned char 
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  4   14[COMRAM] unsigned char 
 11674 ;; Registers used:
 11675 ;;		wreg, status,2, status,0, prodl, prodh
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11681 ;;      Params:         8       0       0       0       0       0       0       0       0
 11682 ;;      Locals:        13       0       0       0       0       0       0       0       0
 11683 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11684 ;;      Totals:        25       0       0       0       0       0       0       0       0
 11685 ;;Total ram usage:       25 bytes
 11686 ;; Hardware stack levels used: 1
 11687 ;; This function calls:
 11688 ;;		Nothing
 11689 ;; This function is called by:
 11690 ;;		i2_convert_temp
 11691 ;;		i2_roundf
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695                           	psect	text64
 11696  00164E                     __ptext64:
 11697                           	callstack 0
 11698  00164E                     i2___flmul:
 11699                           	callstack 18
 11700  00164E  5012               	movf	(i2___flmul@b+3)^0,w,c
 11701  001650  0B80               	andlw	128
 11702  001652  6E1B               	movwf	i2___flmul@sign^0,c
 11703  001654  5012               	movf	(i2___flmul@b+3)^0,w,c
 11704  001656  2412               	addwf	(i2___flmul@b+3)^0,w,c
 11705  001658  6E21               	movwf	i2___flmul@bexp^0,c
 11706  00165A  AE11               	btfss	(i2___flmul@b+2)^0,7,c
 11707  00165C  EF32  F00B         	goto	i2u525_41
 11708  001660  EF34  F00B         	goto	i2u525_40
 11709  001664                     i2u525_41:
 11710  001664  EF35  F00B         	goto	i2l4765
 11711  001668                     i2u525_40:
 11712  001668  8021               	bsf	i2___flmul@bexp^0,0,c
 11713  00166A                     i2l4765:
 11714  00166A  5021               	movf	i2___flmul@bexp^0,w,c
 11715  00166C  B4D8               	btfsc	status,2,c
 11716  00166E  EF3B  F00B         	goto	i2u526_41
 11717  001672  EF3D  F00B         	goto	i2u526_40
 11718  001676                     i2u526_41:
 11719  001676  EF50  F00B         	goto	i2l4773
 11720  00167A                     i2u526_40:
 11721  00167A  2821               	incf	i2___flmul@bexp^0,w,c
 11722  00167C  A4D8               	btfss	status,2,c
 11723  00167E  EF43  F00B         	goto	i2u527_41
 11724  001682  EF45  F00B         	goto	i2u527_40
 11725  001686                     i2u527_41:
 11726  001686  EF4D  F00B         	goto	i2l4771
 11727  00168A                     i2u527_40:
 11728  00168A  0E00               	movlw	0
 11729  00168C  6E0F               	movwf	i2___flmul@b^0,c
 11730  00168E  0E00               	movlw	0
 11731  001690  6E10               	movwf	(i2___flmul@b+1)^0,c
 11732  001692  0E00               	movlw	0
 11733  001694  6E11               	movwf	(i2___flmul@b+2)^0,c
 11734  001696  0E00               	movlw	0
 11735  001698  6E12               	movwf	(i2___flmul@b+3)^0,c
 11736  00169A                     i2l4771:
 11737  00169A  8E11               	bsf	(i2___flmul@b+2)^0,7,c
 11738  00169C  EF58  F00B         	goto	i2l4775
 11739  0016A0                     i2l4773:
 11740  0016A0  0E00               	movlw	0
 11741  0016A2  6E0F               	movwf	i2___flmul@b^0,c
 11742  0016A4  0E00               	movlw	0
 11743  0016A6  6E10               	movwf	(i2___flmul@b+1)^0,c
 11744  0016A8  0E00               	movlw	0
 11745  0016AA  6E11               	movwf	(i2___flmul@b+2)^0,c
 11746  0016AC  0E00               	movlw	0
 11747  0016AE  6E12               	movwf	(i2___flmul@b+3)^0,c
 11748  0016B0                     i2l4775:
 11749  0016B0  5016               	movf	(i2___flmul@a+3)^0,w,c
 11750  0016B2  0B80               	andlw	128
 11751  0016B4  1A1B               	xorwf	i2___flmul@sign^0,f,c
 11752  0016B6  5016               	movf	(i2___flmul@a+3)^0,w,c
 11753  0016B8  2416               	addwf	(i2___flmul@a+3)^0,w,c
 11754  0016BA  6E20               	movwf	i2___flmul@aexp^0,c
 11755  0016BC  AE15               	btfss	(i2___flmul@a+2)^0,7,c
 11756  0016BE  EF63  F00B         	goto	i2u528_41
 11757  0016C2  EF65  F00B         	goto	i2u528_40
 11758  0016C6                     i2u528_41:
 11759  0016C6  EF66  F00B         	goto	i2l4783
 11760  0016CA                     i2u528_40:
 11761  0016CA  8020               	bsf	i2___flmul@aexp^0,0,c
 11762  0016CC                     i2l4783:
 11763  0016CC  5020               	movf	i2___flmul@aexp^0,w,c
 11764  0016CE  B4D8               	btfsc	status,2,c
 11765  0016D0  EF6C  F00B         	goto	i2u529_41
 11766  0016D4  EF6E  F00B         	goto	i2u529_40
 11767  0016D8                     i2u529_41:
 11768  0016D8  EF81  F00B         	goto	i2l4791
 11769  0016DC                     i2u529_40:
 11770  0016DC  2820               	incf	i2___flmul@aexp^0,w,c
 11771  0016DE  A4D8               	btfss	status,2,c
 11772  0016E0  EF74  F00B         	goto	i2u530_41
 11773  0016E4  EF76  F00B         	goto	i2u530_40
 11774  0016E8                     i2u530_41:
 11775  0016E8  EF7E  F00B         	goto	i2l4789
 11776  0016EC                     i2u530_40:
 11777  0016EC  0E00               	movlw	0
 11778  0016EE  6E13               	movwf	i2___flmul@a^0,c
 11779  0016F0  0E00               	movlw	0
 11780  0016F2  6E14               	movwf	(i2___flmul@a+1)^0,c
 11781  0016F4  0E00               	movlw	0
 11782  0016F6  6E15               	movwf	(i2___flmul@a+2)^0,c
 11783  0016F8  0E00               	movlw	0
 11784  0016FA  6E16               	movwf	(i2___flmul@a+3)^0,c
 11785  0016FC                     i2l4789:
 11786  0016FC  8E15               	bsf	(i2___flmul@a+2)^0,7,c
 11787  0016FE  EF89  F00B         	goto	i2l1008
 11788  001702                     i2l4791:
 11789  001702  0E00               	movlw	0
 11790  001704  6E13               	movwf	i2___flmul@a^0,c
 11791  001706  0E00               	movlw	0
 11792  001708  6E14               	movwf	(i2___flmul@a+1)^0,c
 11793  00170A  0E00               	movlw	0
 11794  00170C  6E15               	movwf	(i2___flmul@a+2)^0,c
 11795  00170E  0E00               	movlw	0
 11796  001710  6E16               	movwf	(i2___flmul@a+3)^0,c
 11797  001712                     i2l1008:
 11798  001712  5020               	movf	i2___flmul@aexp^0,w,c
 11799  001714  B4D8               	btfsc	status,2,c
 11800  001716  EF8F  F00B         	goto	i2u531_41
 11801  00171A  EF91  F00B         	goto	i2u531_40
 11802  00171E                     i2u531_41:
 11803  00171E  EF99  F00B         	goto	i2l4795
 11804  001722                     i2u531_40:
 11805  001722  5021               	movf	i2___flmul@bexp^0,w,c
 11806  001724  A4D8               	btfss	status,2,c
 11807  001726  EF97  F00B         	goto	i2u532_41
 11808  00172A  EF99  F00B         	goto	i2u532_40
 11809  00172E                     i2u532_41:
 11810  00172E  EFA3  F00B         	goto	i2l4799
 11811  001732                     i2u532_40:
 11812  001732                     i2l4795:
 11813  001732  0E00               	movlw	0
 11814  001734  6E0F               	movwf	?i2___flmul^0,c
 11815  001736  0E00               	movlw	0
 11816  001738  6E10               	movwf	(?i2___flmul+1)^0,c
 11817  00173A  0E00               	movlw	0
 11818  00173C  6E11               	movwf	(?i2___flmul+2)^0,c
 11819  00173E  0E00               	movlw	0
 11820  001740  6E12               	movwf	(?i2___flmul+3)^0,c
 11821  001742  EF3B  F00D         	goto	i2l1012
 11822  001746                     i2l4799:
 11823  001746  5015               	movf	(i2___flmul@a+2)^0,w,c
 11824  001748  020F               	mulwf	i2___flmul@b^0,c
 11825  00174A  CFF3 F026          	movff	prodl,i2___flmul@temp
 11826  00174E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11827  001752  5026               	movf	i2___flmul@temp^0,w,c
 11828  001754  6E1C               	movwf	i2___flmul@grs^0,c
 11829  001756  6A1D               	clrf	(i2___flmul@grs+1)^0,c
 11830  001758  6A1E               	clrf	(i2___flmul@grs+2)^0,c
 11831  00175A  6A1F               	clrf	(i2___flmul@grs+3)^0,c
 11832  00175C  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11833  00175E  6E22               	movwf	i2___flmul@prod^0,c
 11834  001760  6A23               	clrf	(i2___flmul@prod+1)^0,c
 11835  001762  6A24               	clrf	(i2___flmul@prod+2)^0,c
 11836  001764  6A25               	clrf	(i2___flmul@prod+3)^0,c
 11837  001766  5014               	movf	(i2___flmul@a+1)^0,w,c
 11838  001768  0210               	mulwf	(i2___flmul@b+1)^0,c
 11839  00176A  CFF3 F026          	movff	prodl,i2___flmul@temp
 11840  00176E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11841  001772  5026               	movf	i2___flmul@temp^0,w,c
 11842  001774  261C               	addwf	i2___flmul@grs^0,f,c
 11843  001776  0E00               	movlw	0
 11844  001778  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 11845  00177A  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 11846  00177C  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 11847  00177E  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11848  001780  2622               	addwf	i2___flmul@prod^0,f,c
 11849  001782  0E00               	movlw	0
 11850  001784  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 11851  001786  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 11852  001788  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 11853  00178A  5013               	movf	i2___flmul@a^0,w,c
 11854  00178C  0211               	mulwf	(i2___flmul@b+2)^0,c
 11855  00178E  CFF3 F026          	movff	prodl,i2___flmul@temp
 11856  001792  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11857  001796  5026               	movf	i2___flmul@temp^0,w,c
 11858  001798  261C               	addwf	i2___flmul@grs^0,f,c
 11859  00179A  0E00               	movlw	0
 11860  00179C  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 11861  00179E  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 11862  0017A0  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 11863  0017A2  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11864  0017A4  2622               	addwf	i2___flmul@prod^0,f,c
 11865  0017A6  0E00               	movlw	0
 11866  0017A8  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 11867  0017AA  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 11868  0017AC  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 11869  0017AE  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11870  0017B2  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11871  0017B6  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 11872  0017BA  6A1C               	clrf	i2___flmul@grs^0,c
 11873  0017BC  5013               	movf	i2___flmul@a^0,w,c
 11874  0017BE  0210               	mulwf	(i2___flmul@b+1)^0,c
 11875  0017C0  CFF3 F026          	movff	prodl,i2___flmul@temp
 11876  0017C4  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11877  0017C8  5026               	movf	i2___flmul@temp^0,w,c
 11878  0017CA  261C               	addwf	i2___flmul@grs^0,f,c
 11879  0017CC  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11880  0017CE  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 11881  0017D0  0E00               	movlw	0
 11882  0017D2  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 11883  0017D4  0E00               	movlw	0
 11884  0017D6  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 11885  0017D8  5014               	movf	(i2___flmul@a+1)^0,w,c
 11886  0017DA  020F               	mulwf	i2___flmul@b^0,c
 11887  0017DC  CFF3 F026          	movff	prodl,i2___flmul@temp
 11888  0017E0  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11889  0017E4  5026               	movf	i2___flmul@temp^0,w,c
 11890  0017E6  261C               	addwf	i2___flmul@grs^0,f,c
 11891  0017E8  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11892  0017EA  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 11893  0017EC  0E00               	movlw	0
 11894  0017EE  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 11895  0017F0  0E00               	movlw	0
 11896  0017F2  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 11897  0017F4  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11898  0017F8  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11899  0017FC  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 11900  001800  6A1C               	clrf	i2___flmul@grs^0,c
 11901  001802  5013               	movf	i2___flmul@a^0,w,c
 11902  001804  020F               	mulwf	i2___flmul@b^0,c
 11903  001806  CFF3 F026          	movff	prodl,i2___flmul@temp
 11904  00180A  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11905  00180E  5026               	movf	i2___flmul@temp^0,w,c
 11906  001810  261C               	addwf	i2___flmul@grs^0,f,c
 11907  001812  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11908  001814  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 11909  001816  0E00               	movlw	0
 11910  001818  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 11911  00181A  0E00               	movlw	0
 11912  00181C  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 11913  00181E  5015               	movf	(i2___flmul@a+2)^0,w,c
 11914  001820  0210               	mulwf	(i2___flmul@b+1)^0,c
 11915  001822  CFF3 F026          	movff	prodl,i2___flmul@temp
 11916  001826  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11917  00182A  5026               	movf	i2___flmul@temp^0,w,c
 11918  00182C  2622               	addwf	i2___flmul@prod^0,f,c
 11919  00182E  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11920  001830  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 11921  001832  0E00               	movlw	0
 11922  001834  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 11923  001836  0E00               	movlw	0
 11924  001838  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 11925  00183A  5014               	movf	(i2___flmul@a+1)^0,w,c
 11926  00183C  0211               	mulwf	(i2___flmul@b+2)^0,c
 11927  00183E  CFF3 F026          	movff	prodl,i2___flmul@temp
 11928  001842  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11929  001846  5026               	movf	i2___flmul@temp^0,w,c
 11930  001848  2622               	addwf	i2___flmul@prod^0,f,c
 11931  00184A  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11932  00184C  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 11933  00184E  0E00               	movlw	0
 11934  001850  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 11935  001852  0E00               	movlw	0
 11936  001854  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 11937  001856  5015               	movf	(i2___flmul@a+2)^0,w,c
 11938  001858  0211               	mulwf	(i2___flmul@b+2)^0,c
 11939  00185A  CFF3 F026          	movff	prodl,i2___flmul@temp
 11940  00185E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11941  001862  5026               	movf	i2___flmul@temp^0,w,c
 11942  001864  6E17               	movwf	??i2___flmul^0,c
 11943  001866  5027               	movf	(i2___flmul@temp+1)^0,w,c
 11944  001868  6E18               	movwf	(??i2___flmul+1)^0,c
 11945  00186A  6A19               	clrf	(??i2___flmul+2)^0,c
 11946  00186C  6A1A               	clrf	(??i2___flmul+3)^0,c
 11947  00186E  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 11948  001872  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 11949  001876  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 11950  00187A  6A17               	clrf	??i2___flmul^0,c
 11951  00187C  5017               	movf	??i2___flmul^0,w,c
 11952  00187E  2622               	addwf	i2___flmul@prod^0,f,c
 11953  001880  5018               	movf	(??i2___flmul+1)^0,w,c
 11954  001882  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 11955  001884  5019               	movf	(??i2___flmul+2)^0,w,c
 11956  001886  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 11957  001888  501A               	movf	(??i2___flmul+3)^0,w,c
 11958  00188A  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 11959  00188C  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 11960  001890  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 11961  001894  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 11962  001898  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 11963  00189C  0E19               	movlw	25
 11964  00189E  EF56  F00C         	goto	i2u533_40
 11965  0018A2                     i2u533_45:
 11966  0018A2  90D8               	bcf	status,0,c
 11967  0018A4  321A               	rrcf	(??i2___flmul+3)^0,f,c
 11968  0018A6  3219               	rrcf	(??i2___flmul+2)^0,f,c
 11969  0018A8  3218               	rrcf	(??i2___flmul+1)^0,f,c
 11970  0018AA  3217               	rrcf	??i2___flmul^0,f,c
 11971  0018AC                     i2u533_40:
 11972  0018AC  2EE8               	decfsz	wreg,f,c
 11973  0018AE  EF51  F00C         	goto	i2u533_45
 11974  0018B2  5017               	movf	??i2___flmul^0,w,c
 11975  0018B4  2622               	addwf	i2___flmul@prod^0,f,c
 11976  0018B6  5018               	movf	(??i2___flmul+1)^0,w,c
 11977  0018B8  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 11978  0018BA  5019               	movf	(??i2___flmul+2)^0,w,c
 11979  0018BC  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 11980  0018BE  501A               	movf	(??i2___flmul+3)^0,w,c
 11981  0018C0  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 11982  0018C2  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11983  0018C6  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11984  0018CA  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 11985  0018CE  6A1C               	clrf	i2___flmul@grs^0,c
 11986  0018D0  5020               	movf	i2___flmul@aexp^0,w,c
 11987  0018D2  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 11988  0018D6  6A18               	clrf	(??i2___flmul+1)^0,c
 11989  0018D8  2617               	addwf	??i2___flmul^0,f,c
 11990  0018DA  0E00               	movlw	0
 11991  0018DC  2218               	addwfc	(??i2___flmul+1)^0,f,c
 11992  0018DE  0E82               	movlw	130
 11993  0018E0  2417               	addwf	??i2___flmul^0,w,c
 11994  0018E2  6E26               	movwf	i2___flmul@temp^0,c
 11995  0018E4  0EFF               	movlw	255
 11996  0018E6  2018               	addwfc	(??i2___flmul+1)^0,w,c
 11997  0018E8  6E27               	movwf	(i2___flmul@temp+1)^0,c
 11998  0018EA  EF8C  F00C         	goto	i2l4847
 11999  0018EE                     i2l4841:
 12000  0018EE  90D8               	bcf	status,0,c
 12001  0018F0  3622               	rlcf	i2___flmul@prod^0,f,c
 12002  0018F2  3623               	rlcf	(i2___flmul@prod+1)^0,f,c
 12003  0018F4  3624               	rlcf	(i2___flmul@prod+2)^0,f,c
 12004  0018F6  3625               	rlcf	(i2___flmul@prod+3)^0,f,c
 12005  0018F8  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 12006  0018FA  EF81  F00C         	goto	i2u534_41
 12007  0018FE  EF83  F00C         	goto	i2u534_40
 12008  001902                     i2u534_41:
 12009  001902  EF84  F00C         	goto	i2l1015
 12010  001906                     i2u534_40:
 12011  001906  8022               	bsf	i2___flmul@prod^0,0,c
 12012  001908                     i2l1015:
 12013  001908  90D8               	bcf	status,0,c
 12014  00190A  361C               	rlcf	i2___flmul@grs^0,f,c
 12015  00190C  361D               	rlcf	(i2___flmul@grs+1)^0,f,c
 12016  00190E  361E               	rlcf	(i2___flmul@grs+2)^0,f,c
 12017  001910  361F               	rlcf	(i2___flmul@grs+3)^0,f,c
 12018  001912  0626               	decf	i2___flmul@temp^0,f,c
 12019  001914  A0D8               	btfss	status,0,c
 12020  001916  0627               	decf	(i2___flmul@temp+1)^0,f,c
 12021  001918                     i2l4847:
 12022  001918  AE24               	btfss	(i2___flmul@prod+2)^0,7,c
 12023  00191A  EF91  F00C         	goto	i2u535_41
 12024  00191E  EF93  F00C         	goto	i2u535_40
 12025  001922                     i2u535_41:
 12026  001922  EF77  F00C         	goto	i2l4841
 12027  001926                     i2u535_40:
 12028  001926  0E00               	movlw	0
 12029  001928  6E20               	movwf	i2___flmul@aexp^0,c
 12030  00192A  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 12031  00192C  EF9A  F00C         	goto	i2u536_41
 12032  001930  EF9C  F00C         	goto	i2u536_40
 12033  001934                     i2u536_41:
 12034  001934  EFC0  F00C         	goto	i2l1017
 12035  001938                     i2u536_40:
 12036  001938  0EFF               	movlw	255
 12037  00193A  141C               	andwf	i2___flmul@grs^0,w,c
 12038  00193C  6E17               	movwf	??i2___flmul^0,c
 12039  00193E  0EFF               	movlw	255
 12040  001940  141D               	andwf	(i2___flmul@grs+1)^0,w,c
 12041  001942  6E18               	movwf	(??i2___flmul+1)^0,c
 12042  001944  0EFF               	movlw	255
 12043  001946  141E               	andwf	(i2___flmul@grs+2)^0,w,c
 12044  001948  6E19               	movwf	(??i2___flmul+2)^0,c
 12045  00194A  0E7F               	movlw	127
 12046  00194C  141F               	andwf	(i2___flmul@grs+3)^0,w,c
 12047  00194E  6E1A               	movwf	(??i2___flmul+3)^0,c
 12048  001950  5017               	movf	??i2___flmul^0,w,c
 12049  001952  1018               	iorwf	(??i2___flmul+1)^0,w,c
 12050  001954  1019               	iorwf	(??i2___flmul+2)^0,w,c
 12051  001956  101A               	iorwf	(??i2___flmul+3)^0,w,c
 12052  001958  B4D8               	btfsc	status,2,c
 12053  00195A  EFB1  F00C         	goto	i2u537_41
 12054  00195E  EFB3  F00C         	goto	i2u537_40
 12055  001962                     i2u537_41:
 12056  001962  EFB7  F00C         	goto	i2l1018
 12057  001966                     i2u537_40:
 12058  001966                     i2l4855:
 12059  001966  0E01               	movlw	1
 12060  001968  6E20               	movwf	i2___flmul@aexp^0,c
 12061  00196A  EFC0  F00C         	goto	i2l1017
 12062  00196E                     i2l1018:
 12063  00196E  A022               	btfss	i2___flmul@prod^0,0,c
 12064  001970  EFBC  F00C         	goto	i2u538_41
 12065  001974  EFBE  F00C         	goto	i2u538_40
 12066  001978                     i2u538_41:
 12067  001978  EFC0  F00C         	goto	i2l1017
 12068  00197C                     i2u538_40:
 12069  00197C  EFB3  F00C         	goto	i2l4855
 12070  001980                     i2l1017:
 12071  001980  5020               	movf	i2___flmul@aexp^0,w,c
 12072  001982  B4D8               	btfsc	status,2,c
 12073  001984  EFC6  F00C         	goto	i2u539_41
 12074  001988  EFC8  F00C         	goto	i2u539_40
 12075  00198C                     i2u539_41:
 12076  00198C  EFEC  F00C         	goto	i2l4867
 12077  001990                     i2u539_40:
 12078  001990  0E01               	movlw	1
 12079  001992  2622               	addwf	i2___flmul@prod^0,f,c
 12080  001994  0E00               	movlw	0
 12081  001996  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 12082  001998  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 12083  00199A  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 12084  00199C  A025               	btfss	(i2___flmul@prod+3)^0,0,c
 12085  00199E  EFD3  F00C         	goto	i2u540_41
 12086  0019A2  EFD5  F00C         	goto	i2u540_40
 12087  0019A6                     i2u540_41:
 12088  0019A6  EFEC  F00C         	goto	i2l4867
 12089  0019AA                     i2u540_40:
 12090  0019AA  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 12091  0019AE  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 12092  0019B2  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 12093  0019B6  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 12094  0019BA  341A               	rlcf	(??i2___flmul+3)^0,w,c
 12095  0019BC  321A               	rrcf	(??i2___flmul+3)^0,f,c
 12096  0019BE  3219               	rrcf	(??i2___flmul+2)^0,f,c
 12097  0019C0  3218               	rrcf	(??i2___flmul+1)^0,f,c
 12098  0019C2  3217               	rrcf	??i2___flmul^0,f,c
 12099  0019C4  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 12100  0019C8  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 12101  0019CC  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 12102  0019D0  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 12103  0019D4  4A26               	infsnz	i2___flmul@temp^0,f,c
 12104  0019D6  2A27               	incf	(i2___flmul@temp+1)^0,f,c
 12105  0019D8                     i2l4867:
 12106  0019D8  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 12107  0019DA  EFF7  F00C         	goto	i2u541_41
 12108  0019DE  5027               	movf	(i2___flmul@temp+1)^0,w,c
 12109  0019E0  E108               	bnz	i2u541_40
 12110  0019E2  2826               	incf	i2___flmul@temp^0,w,c
 12111  0019E4  A0D8               	btfss	status,0,c
 12112  0019E6  EFF7  F00C         	goto	i2u541_41
 12113  0019EA  EFF9  F00C         	goto	i2u541_40
 12114  0019EE                     i2u541_41:
 12115  0019EE  EF03  F00D         	goto	i2l4871
 12116  0019F2                     i2u541_40:
 12117  0019F2  0E00               	movlw	0
 12118  0019F4  6E22               	movwf	i2___flmul@prod^0,c
 12119  0019F6  0E00               	movlw	0
 12120  0019F8  6E23               	movwf	(i2___flmul@prod+1)^0,c
 12121  0019FA  0E80               	movlw	128
 12122  0019FC  6E24               	movwf	(i2___flmul@prod+2)^0,c
 12123  0019FE  0E7F               	movlw	127
 12124  001A00  6E25               	movwf	(i2___flmul@prod+3)^0,c
 12125  001A02  EF31  F00D         	goto	i2l4883
 12126  001A06                     i2l4871:
 12127  001A06  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 12128  001A08  EF10  F00D         	goto	i2u542_40
 12129  001A0C  5027               	movf	(i2___flmul@temp+1)^0,w,c
 12130  001A0E  E106               	bnz	i2u542_41
 12131  001A10  0426               	decf	i2___flmul@temp^0,w,c
 12132  001A12  B0D8               	btfsc	status,0,c
 12133  001A14  EF0E  F00D         	goto	i2u542_41
 12134  001A18  EF10  F00D         	goto	i2u542_40
 12135  001A1C                     i2u542_41:
 12136  001A1C  EF1C  F00D         	goto	i2l1025
 12137  001A20                     i2u542_40:
 12138  001A20  0E00               	movlw	0
 12139  001A22  6E22               	movwf	i2___flmul@prod^0,c
 12140  001A24  0E00               	movlw	0
 12141  001A26  6E23               	movwf	(i2___flmul@prod+1)^0,c
 12142  001A28  0E00               	movlw	0
 12143  001A2A  6E24               	movwf	(i2___flmul@prod+2)^0,c
 12144  001A2C  0E00               	movlw	0
 12145  001A2E  6E25               	movwf	(i2___flmul@prod+3)^0,c
 12146  001A30  0E00               	movlw	0
 12147  001A32  6E1B               	movwf	i2___flmul@sign^0,c
 12148  001A34  EF31  F00D         	goto	i2l4883
 12149  001A38                     i2l1025:
 12150  001A38  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 12151  001A3C  0EFF               	movlw	255
 12152  001A3E  1622               	andwf	i2___flmul@prod^0,f,c
 12153  001A40  0EFF               	movlw	255
 12154  001A42  1623               	andwf	(i2___flmul@prod+1)^0,f,c
 12155  001A44  0E7F               	movlw	127
 12156  001A46  1624               	andwf	(i2___flmul@prod+2)^0,f,c
 12157  001A48  0E00               	movlw	0
 12158  001A4A  1625               	andwf	(i2___flmul@prod+3)^0,f,c
 12159  001A4C  A021               	btfss	i2___flmul@bexp^0,0,c
 12160  001A4E  EF2B  F00D         	goto	i2u543_41
 12161  001A52  EF2D  F00D         	goto	i2u543_40
 12162  001A56                     i2u543_41:
 12163  001A56  EF2E  F00D         	goto	i2l4881
 12164  001A5A                     i2u543_40:
 12165  001A5A  8E24               	bsf	(i2___flmul@prod+2)^0,7,c
 12166  001A5C                     i2l4881:
 12167  001A5C  90D8               	bcf	status,0,c
 12168  001A5E  3021               	rrcf	i2___flmul@bexp^0,w,c
 12169  001A60  6E25               	movwf	(i2___flmul@prod+3)^0,c
 12170  001A62                     i2l4883:
 12171  001A62  501B               	movf	i2___flmul@sign^0,w,c
 12172  001A64  1225               	iorwf	(i2___flmul@prod+3)^0,f,c
 12173  001A66  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 12174  001A6A  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 12175  001A6E  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 12176  001A72  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 12177  001A76                     i2l1012:
 12178  001A76  0012               	return		;funcret
 12179  001A78                     __end_ofi2___flmul:
 12180                           	callstack 0
 12181                           
 12182 ;; *************** function i2___flge *****************
 12183 ;; Defined at:
 12184 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;  ff1             4    0[COMRAM] unsigned char 
 12187 ;;  ff2             4    4[COMRAM] unsigned char 
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;		None
 12190 ;; Return value:  Size  Location     Type
 12191 ;;		None               void
 12192 ;; Registers used:
 12193 ;;		wreg, status,2, status,0
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12199 ;;      Params:         8       0       0       0       0       0       0       0       0
 12200 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12201 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12202 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12203 ;;Total ram usage:       12 bytes
 12204 ;; Hardware stack levels used: 1
 12205 ;; This function calls:
 12206 ;;		Nothing
 12207 ;; This function is called by:
 12208 ;;		i2_roundf
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text65
 12213  0034A0                     __ptext65:
 12214                           	callstack 0
 12215  0034A0                     i2___flge:
 12216                           	callstack 18
 12217  0034A0  0E00               	movlw	0
 12218  0034A2  1401               	andwf	i2___flge@ff1^0,w,c
 12219  0034A4  6E09               	movwf	??i2___flge^0,c
 12220  0034A6  0E00               	movlw	0
 12221  0034A8  1402               	andwf	(i2___flge@ff1+1)^0,w,c
 12222  0034AA  6E0A               	movwf	(??i2___flge+1)^0,c
 12223  0034AC  0E80               	movlw	128
 12224  0034AE  1403               	andwf	(i2___flge@ff1+2)^0,w,c
 12225  0034B0  6E0B               	movwf	(??i2___flge+2)^0,c
 12226  0034B2  0E7F               	movlw	127
 12227  0034B4  1404               	andwf	(i2___flge@ff1+3)^0,w,c
 12228  0034B6  6E0C               	movwf	(??i2___flge+3)^0,c
 12229  0034B8  5009               	movf	??i2___flge^0,w,c
 12230  0034BA  100A               	iorwf	(??i2___flge+1)^0,w,c
 12231  0034BC  100B               	iorwf	(??i2___flge+2)^0,w,c
 12232  0034BE  100C               	iorwf	(??i2___flge+3)^0,w,c
 12233  0034C0  A4D8               	btfss	status,2,c
 12234  0034C2  EF65  F01A         	goto	i2u519_41
 12235  0034C6  EF67  F01A         	goto	i2u519_40
 12236  0034CA                     i2u519_41:
 12237  0034CA  EF6F  F01A         	goto	i2l4727
 12238  0034CE                     i2u519_40:
 12239  0034CE  0E00               	movlw	0
 12240  0034D0  6E01               	movwf	i2___flge@ff1^0,c
 12241  0034D2  0E00               	movlw	0
 12242  0034D4  6E02               	movwf	(i2___flge@ff1+1)^0,c
 12243  0034D6  0E00               	movlw	0
 12244  0034D8  6E03               	movwf	(i2___flge@ff1+2)^0,c
 12245  0034DA  0E00               	movlw	0
 12246  0034DC  6E04               	movwf	(i2___flge@ff1+3)^0,c
 12247  0034DE                     i2l4727:
 12248  0034DE  0E00               	movlw	0
 12249  0034E0  1405               	andwf	i2___flge@ff2^0,w,c
 12250  0034E2  6E09               	movwf	??i2___flge^0,c
 12251  0034E4  0E00               	movlw	0
 12252  0034E6  1406               	andwf	(i2___flge@ff2+1)^0,w,c
 12253  0034E8  6E0A               	movwf	(??i2___flge+1)^0,c
 12254  0034EA  0E80               	movlw	128
 12255  0034EC  1407               	andwf	(i2___flge@ff2+2)^0,w,c
 12256  0034EE  6E0B               	movwf	(??i2___flge+2)^0,c
 12257  0034F0  0E7F               	movlw	127
 12258  0034F2  1408               	andwf	(i2___flge@ff2+3)^0,w,c
 12259  0034F4  6E0C               	movwf	(??i2___flge+3)^0,c
 12260  0034F6  5009               	movf	??i2___flge^0,w,c
 12261  0034F8  100A               	iorwf	(??i2___flge+1)^0,w,c
 12262  0034FA  100B               	iorwf	(??i2___flge+2)^0,w,c
 12263  0034FC  100C               	iorwf	(??i2___flge+3)^0,w,c
 12264  0034FE  A4D8               	btfss	status,2,c
 12265  003500  EF84  F01A         	goto	i2u520_41
 12266  003504  EF86  F01A         	goto	i2u520_40
 12267  003508                     i2u520_41:
 12268  003508  EF8E  F01A         	goto	i2l4731
 12269  00350C                     i2u520_40:
 12270  00350C  0E00               	movlw	0
 12271  00350E  6E05               	movwf	i2___flge@ff2^0,c
 12272  003510  0E00               	movlw	0
 12273  003512  6E06               	movwf	(i2___flge@ff2+1)^0,c
 12274  003514  0E00               	movlw	0
 12275  003516  6E07               	movwf	(i2___flge@ff2+2)^0,c
 12276  003518  0E00               	movlw	0
 12277  00351A  6E08               	movwf	(i2___flge@ff2+3)^0,c
 12278  00351C                     i2l4731:
 12279  00351C  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
 12280  00351E  EF93  F01A         	goto	i2u521_41
 12281  003522  EF95  F01A         	goto	i2u521_40
 12282  003526                     i2u521_41:
 12283  003526  EF9E  F01A         	goto	i2l4735
 12284  00352A                     i2u521_40:
 12285  00352A  6C01               	negf	i2___flge@ff1^0,c
 12286  00352C  1E02               	comf	(i2___flge@ff1+1)^0,f,c
 12287  00352E  B0D8               	btfsc	status,0,c
 12288  003530  2A02               	incf	(i2___flge@ff1+1)^0,f,c
 12289  003532  1E03               	comf	(i2___flge@ff1+2)^0,f,c
 12290  003534  B0D8               	btfsc	status,0,c
 12291  003536  2A03               	incf	(i2___flge@ff1+2)^0,f,c
 12292  003538  0E80               	movlw	128
 12293  00353A  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
 12294  00353C                     i2l4735:
 12295  00353C  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
 12296  00353E  EFA3  F01A         	goto	i2u522_41
 12297  003542  EFA5  F01A         	goto	i2u522_40
 12298  003546                     i2u522_41:
 12299  003546  EFAE  F01A         	goto	i2l659
 12300  00354A                     i2u522_40:
 12301  00354A  6C05               	negf	i2___flge@ff2^0,c
 12302  00354C  1E06               	comf	(i2___flge@ff2+1)^0,f,c
 12303  00354E  B0D8               	btfsc	status,0,c
 12304  003550  2A06               	incf	(i2___flge@ff2+1)^0,f,c
 12305  003552  1E07               	comf	(i2___flge@ff2+2)^0,f,c
 12306  003554  B0D8               	btfsc	status,0,c
 12307  003556  2A07               	incf	(i2___flge@ff2+2)^0,f,c
 12308  003558  0E80               	movlw	128
 12309  00355A  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
 12310  00355C                     i2l659:
 12311  00355C  0E00               	movlw	0
 12312  00355E  1A01               	xorwf	i2___flge@ff1^0,f,c
 12313  003560  0E00               	movlw	0
 12314  003562  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
 12315  003564  0E00               	movlw	0
 12316  003566  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
 12317  003568  0E80               	movlw	128
 12318  00356A  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
 12319  00356C  0E00               	movlw	0
 12320  00356E  1A05               	xorwf	i2___flge@ff2^0,f,c
 12321  003570  0E00               	movlw	0
 12322  003572  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
 12323  003574  0E00               	movlw	0
 12324  003576  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
 12325  003578  0E80               	movlw	128
 12326  00357A  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
 12327  00357C  5005               	movf	i2___flge@ff2^0,w,c
 12328  00357E  5C01               	subwf	i2___flge@ff1^0,w,c
 12329  003580  5006               	movf	(i2___flge@ff2+1)^0,w,c
 12330  003582  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
 12331  003584  5007               	movf	(i2___flge@ff2+2)^0,w,c
 12332  003586  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
 12333  003588  5008               	movf	(i2___flge@ff2+3)^0,w,c
 12334  00358A  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
 12335  00358C  B0D8               	btfsc	status,0,c
 12336  00358E  EFCB  F01A         	goto	i2u523_41
 12337  003592  EFCD  F01A         	goto	i2u523_40
 12338  003596                     i2u523_41:
 12339  003596  EFD0  F01A         	goto	i2l4741
 12340  00359A                     i2u523_40:
 12341  00359A  90D8               	bcf	status,0,c
 12342  00359C  EFD1  F01A         	goto	i2l664
 12343  0035A0                     i2l4741:
 12344  0035A0  80D8               	bsf	status,0,c
 12345  0035A2                     i2l664:
 12346  0035A2  0012               	return		;funcret
 12347  0035A4                     __end_ofi2___flge:
 12348                           	callstack 0
 12349                           
 12350 ;; *************** function i2___xxtofl *****************
 12351 ;; Defined at:
 12352 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12353 ;; Parameters:    Size  Location     Type
 12354 ;;  sign            1    wreg     unsigned char 
 12355 ;;  val             4    0[COMRAM] long 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  sign            1    8[COMRAM] unsigned char 
 12358 ;;  arg             4   10[COMRAM] unsigned long 
 12359 ;;  exp             1    9[COMRAM] unsigned char 
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  4    0[COMRAM] unsigned char 
 12362 ;; Registers used:
 12363 ;;		wreg, status,2, status,0
 12364 ;; Tracked objects:
 12365 ;;		On entry : 0/0
 12366 ;;		On exit  : 0/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12369 ;;      Params:         4       0       0       0       0       0       0       0       0
 12370 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12371 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12372 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12373 ;;Total ram usage:       14 bytes
 12374 ;; Hardware stack levels used: 1
 12375 ;; This function calls:
 12376 ;;		Nothing
 12377 ;; This function is called by:
 12378 ;;		i2_convert_temp
 12379 ;; This function uses a non-reentrant model
 12380 ;;
 12381                           
 12382                           	psect	text66
 12383  002A10                     __ptext66:
 12384                           	callstack 0
 12385  002A10                     i2___xxtofl:
 12386                           	callstack 19
 12387                           
 12388                           ;incstack = 0
 12389                           ;i2___xxtofl@sign stored from wreg
 12390  002A10  6E09               	movwf	i2___xxtofl@sign^0,c
 12391  002A12  5009               	movf	i2___xxtofl@sign^0,w,c
 12392  002A14  B4D8               	btfsc	status,2,c
 12393  002A16  EF0F  F015         	goto	i2u586_41
 12394  002A1A  EF11  F015         	goto	i2u586_40
 12395  002A1E                     i2u586_41:
 12396  002A1E  EF33  F015         	goto	i2l1049
 12397  002A22                     i2u586_40:
 12398  002A22  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 12399  002A24  EF18  F015         	goto	i2u587_40
 12400  002A28  EF16  F015         	goto	i2u587_41
 12401  002A2C                     i2u587_41:
 12402  002A2C  EF33  F015         	goto	i2l1049
 12403  002A30                     i2u587_40:
 12404  002A30  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 12405  002A34  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 12406  002A38  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 12407  002A3C  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 12408  002A40  1E05               	comf	??i2___xxtofl^0,f,c
 12409  002A42  1E06               	comf	(??i2___xxtofl+1)^0,f,c
 12410  002A44  1E07               	comf	(??i2___xxtofl+2)^0,f,c
 12411  002A46  1E08               	comf	(??i2___xxtofl+3)^0,f,c
 12412  002A48  2A05               	incf	??i2___xxtofl^0,f,c
 12413  002A4A  0E00               	movlw	0
 12414  002A4C  2206               	addwfc	(??i2___xxtofl+1)^0,f,c
 12415  002A4E  2207               	addwfc	(??i2___xxtofl+2)^0,f,c
 12416  002A50  2208               	addwfc	(??i2___xxtofl+3)^0,f,c
 12417  002A52  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 12418  002A56  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 12419  002A5A  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 12420  002A5E  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 12421  002A62  EF3B  F015         	goto	i2l5211
 12422  002A66                     i2l1049:
 12423  002A66  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 12424  002A6A  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 12425  002A6E  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 12426  002A72  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 12427  002A76                     i2l5211:
 12428  002A76  5001               	movf	i2___xxtofl@val^0,w,c
 12429  002A78  1002               	iorwf	(i2___xxtofl@val+1)^0,w,c
 12430  002A7A  1003               	iorwf	(i2___xxtofl@val+2)^0,w,c
 12431  002A7C  1004               	iorwf	(i2___xxtofl@val+3)^0,w,c
 12432  002A7E  A4D8               	btfss	status,2,c
 12433  002A80  EF44  F015         	goto	i2u588_41
 12434  002A84  EF46  F015         	goto	i2u588_40
 12435  002A88                     i2u588_41:
 12436  002A88  EF50  F015         	goto	i2l5217
 12437  002A8C                     i2u588_40:
 12438  002A8C  0E00               	movlw	0
 12439  002A8E  6E01               	movwf	?i2___xxtofl^0,c
 12440  002A90  0E00               	movlw	0
 12441  002A92  6E02               	movwf	(?i2___xxtofl+1)^0,c
 12442  002A94  0E00               	movlw	0
 12443  002A96  6E03               	movwf	(?i2___xxtofl+2)^0,c
 12444  002A98  0E00               	movlw	0
 12445  002A9A  6E04               	movwf	(?i2___xxtofl+3)^0,c
 12446  002A9C  EFE1  F015         	goto	i2l1052
 12447  002AA0                     i2l5217:
 12448  002AA0  0E96               	movlw	150
 12449  002AA2  6E0A               	movwf	i2___xxtofl@exp^0,c
 12450  002AA4  EF5A  F015         	goto	i2l5221
 12451  002AA8                     i2l5219:
 12452  002AA8  2A0A               	incf	i2___xxtofl@exp^0,f,c
 12453  002AAA  90D8               	bcf	status,0,c
 12454  002AAC  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 12455  002AAE  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 12456  002AB0  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 12457  002AB2  320B               	rrcf	i2___xxtofl@arg^0,f,c
 12458  002AB4                     i2l5221:
 12459  002AB4  0E00               	movlw	0
 12460  002AB6  140B               	andwf	i2___xxtofl@arg^0,w,c
 12461  002AB8  6E05               	movwf	??i2___xxtofl^0,c
 12462  002ABA  0E00               	movlw	0
 12463  002ABC  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 12464  002ABE  6E06               	movwf	(??i2___xxtofl+1)^0,c
 12465  002AC0  0E00               	movlw	0
 12466  002AC2  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 12467  002AC4  6E07               	movwf	(??i2___xxtofl+2)^0,c
 12468  002AC6  0EFE               	movlw	254
 12469  002AC8  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 12470  002ACA  6E08               	movwf	(??i2___xxtofl+3)^0,c
 12471  002ACC  5005               	movf	??i2___xxtofl^0,w,c
 12472  002ACE  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 12473  002AD0  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 12474  002AD2  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 12475  002AD4  A4D8               	btfss	status,2,c
 12476  002AD6  EF6F  F015         	goto	i2u589_41
 12477  002ADA  EF71  F015         	goto	i2u589_40
 12478  002ADE                     i2u589_41:
 12479  002ADE  EF54  F015         	goto	i2l5219
 12480  002AE2                     i2u589_40:
 12481  002AE2  EF7F  F015         	goto	i2l1056
 12482  002AE6                     i2l5223:
 12483  002AE6  2A0A               	incf	i2___xxtofl@exp^0,f,c
 12484  002AE8  0E01               	movlw	1
 12485  002AEA  260B               	addwf	i2___xxtofl@arg^0,f,c
 12486  002AEC  0E00               	movlw	0
 12487  002AEE  220C               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 12488  002AF0  220D               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 12489  002AF2  220E               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 12490  002AF4  90D8               	bcf	status,0,c
 12491  002AF6  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 12492  002AF8  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 12493  002AFA  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 12494  002AFC  320B               	rrcf	i2___xxtofl@arg^0,f,c
 12495  002AFE                     i2l1056:
 12496  002AFE  0E00               	movlw	0
 12497  002B00  140B               	andwf	i2___xxtofl@arg^0,w,c
 12498  002B02  6E05               	movwf	??i2___xxtofl^0,c
 12499  002B04  0E00               	movlw	0
 12500  002B06  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 12501  002B08  6E06               	movwf	(??i2___xxtofl+1)^0,c
 12502  002B0A  0E00               	movlw	0
 12503  002B0C  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 12504  002B0E  6E07               	movwf	(??i2___xxtofl+2)^0,c
 12505  002B10  0EFF               	movlw	255
 12506  002B12  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 12507  002B14  6E08               	movwf	(??i2___xxtofl+3)^0,c
 12508  002B16  5005               	movf	??i2___xxtofl^0,w,c
 12509  002B18  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 12510  002B1A  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 12511  002B1C  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 12512  002B1E  A4D8               	btfss	status,2,c
 12513  002B20  EF94  F015         	goto	i2u590_41
 12514  002B24  EF96  F015         	goto	i2u590_40
 12515  002B28                     i2u590_41:
 12516  002B28  EF73  F015         	goto	i2l5223
 12517  002B2C                     i2u590_40:
 12518  002B2C  EF9E  F015         	goto	i2l5231
 12519  002B30                     i2l5229:
 12520  002B30  060A               	decf	i2___xxtofl@exp^0,f,c
 12521  002B32  90D8               	bcf	status,0,c
 12522  002B34  360B               	rlcf	i2___xxtofl@arg^0,f,c
 12523  002B36  360C               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 12524  002B38  360D               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 12525  002B3A  360E               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 12526  002B3C                     i2l5231:
 12527  002B3C  BE0D               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 12528  002B3E  EFA3  F015         	goto	i2u591_41
 12529  002B42  EFA5  F015         	goto	i2u591_40
 12530  002B46                     i2u591_41:
 12531  002B46  EFAD  F015         	goto	i2l1063
 12532  002B4A                     i2u591_40:
 12533  002B4A  0E02               	movlw	2
 12534  002B4C  600A               	cpfslt	i2___xxtofl@exp^0,c
 12535  002B4E  EFAB  F015         	goto	i2u592_41
 12536  002B52  EFAD  F015         	goto	i2u592_40
 12537  002B56                     i2u592_41:
 12538  002B56  EF98  F015         	goto	i2l5229
 12539  002B5A                     i2u592_40:
 12540  002B5A                     i2l1063:
 12541  002B5A  B00A               	btfsc	i2___xxtofl@exp^0,0,c
 12542  002B5C  EFB2  F015         	goto	i2u593_41
 12543  002B60  EFB4  F015         	goto	i2u593_40
 12544  002B64                     i2u593_41:
 12545  002B64  EFB5  F015         	goto	i2l5237
 12546  002B68                     i2u593_40:
 12547  002B68  9E0D               	bcf	(i2___xxtofl@arg+2)^0,7,c
 12548  002B6A                     i2l5237:
 12549  002B6A  90D8               	bcf	status,0,c
 12550  002B6C  320A               	rrcf	i2___xxtofl@exp^0,f,c
 12551  002B6E  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 12552  002B72  6A06               	clrf	(??i2___xxtofl+1)^0,c
 12553  002B74  6A07               	clrf	(??i2___xxtofl+2)^0,c
 12554  002B76  6A08               	clrf	(??i2___xxtofl+3)^0,c
 12555  002B78  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 12556  002B7C  6A07               	clrf	(??i2___xxtofl+2)^0,c
 12557  002B7E  6A06               	clrf	(??i2___xxtofl+1)^0,c
 12558  002B80  6A05               	clrf	??i2___xxtofl^0,c
 12559  002B82  5005               	movf	??i2___xxtofl^0,w,c
 12560  002B84  120B               	iorwf	i2___xxtofl@arg^0,f,c
 12561  002B86  5006               	movf	(??i2___xxtofl+1)^0,w,c
 12562  002B88  120C               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 12563  002B8A  5007               	movf	(??i2___xxtofl+2)^0,w,c
 12564  002B8C  120D               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 12565  002B8E  5008               	movf	(??i2___xxtofl+3)^0,w,c
 12566  002B90  120E               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 12567  002B92  5009               	movf	i2___xxtofl@sign^0,w,c
 12568  002B94  B4D8               	btfsc	status,2,c
 12569  002B96  EFCF  F015         	goto	i2u594_41
 12570  002B9A  EFD1  F015         	goto	i2u594_40
 12571  002B9E                     i2u594_41:
 12572  002B9E  EFD9  F015         	goto	i2l5247
 12573  002BA2                     i2u594_40:
 12574  002BA2  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 12575  002BA4  EFD8  F015         	goto	i2u595_40
 12576  002BA8  EFD6  F015         	goto	i2u595_41
 12577  002BAC                     i2u595_41:
 12578  002BAC  EFD9  F015         	goto	i2l5247
 12579  002BB0                     i2u595_40:
 12580  002BB0  8E0E               	bsf	(i2___xxtofl@arg+3)^0,7,c
 12581  002BB2                     i2l5247:
 12582  002BB2  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 12583  002BB6  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 12584  002BBA  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 12585  002BBE  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 12586  002BC2                     i2l1052:
 12587  002BC2  0012               	return		;funcret
 12588  002BC4                     __end_ofi2___xxtofl:
 12589                           	callstack 0
 12590                           
 12591 ;; *************** function i2___fltol *****************
 12592 ;; Defined at:
 12593 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;  f1              4   65[COMRAM] unsigned char 
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;  exp1            1   74[COMRAM] unsigned char 
 12598 ;;  sign1           1   73[COMRAM] unsigned char 
 12599 ;; Return value:  Size  Location     Type
 12600 ;;                  4   65[COMRAM] long 
 12601 ;; Registers used:
 12602 ;;		wreg, status,2, status,0
 12603 ;; Tracked objects:
 12604 ;;		On entry : 0/0
 12605 ;;		On exit  : 0/0
 12606 ;;		Unchanged: 0/0
 12607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12608 ;;      Params:         4       0       0       0       0       0       0       0       0
 12609 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12610 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12611 ;;      Totals:        10       0       0       0       0       0       0       0       0
 12612 ;;Total ram usage:       10 bytes
 12613 ;; Hardware stack levels used: 1
 12614 ;; This function calls:
 12615 ;;		Nothing
 12616 ;; This function is called by:
 12617 ;;		i2_convert_temp
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           	psect	text67
 12622  00339A                     __ptext67:
 12623                           	callstack 0
 12624  00339A                     i2___fltol:
 12625                           	callstack 19
 12626  00339A  3444               	rlcf	(i2___fltol@f1+2)^0,w,c
 12627  00339C  3445               	rlcf	(i2___fltol@f1+3)^0,w,c
 12628  00339E  6E4B               	movwf	i2___fltol@exp1^0,c
 12629  0033A0  504B               	movf	i2___fltol@exp1^0,w,c
 12630  0033A2  A4D8               	btfss	status,2,c
 12631  0033A4  EFD6  F019         	goto	i2u579_41
 12632  0033A8  EFD8  F019         	goto	i2u579_40
 12633  0033AC                     i2u579_41:
 12634  0033AC  EFE2  F019         	goto	i2l5167
 12635  0033B0                     i2u579_40:
 12636  0033B0                     i2l5163:
 12637  0033B0  0E00               	movlw	0
 12638  0033B2  6E42               	movwf	?i2___fltol^0,c
 12639  0033B4  0E00               	movlw	0
 12640  0033B6  6E43               	movwf	(?i2___fltol+1)^0,c
 12641  0033B8  0E00               	movlw	0
 12642  0033BA  6E44               	movwf	(?i2___fltol+2)^0,c
 12643  0033BC  0E00               	movlw	0
 12644  0033BE  6E45               	movwf	(?i2___fltol+3)^0,c
 12645  0033C0  EF4F  F01A         	goto	i2l691
 12646  0033C4                     i2l5167:
 12647  0033C4  C042  F046         	movff	i2___fltol@f1,??i2___fltol
 12648  0033C8  C043  F047         	movff	i2___fltol@f1+1,??i2___fltol+1
 12649  0033CC  C044  F048         	movff	i2___fltol@f1+2,??i2___fltol+2
 12650  0033D0  C045  F049         	movff	i2___fltol@f1+3,??i2___fltol+3
 12651  0033D4  0E20               	movlw	32
 12652  0033D6  EFF2  F019         	goto	i2u580_40
 12653  0033DA                     i2u580_45:
 12654  0033DA  90D8               	bcf	status,0,c
 12655  0033DC  3249               	rrcf	(??i2___fltol+3)^0,f,c
 12656  0033DE  3248               	rrcf	(??i2___fltol+2)^0,f,c
 12657  0033E0  3247               	rrcf	(??i2___fltol+1)^0,f,c
 12658  0033E2  3246               	rrcf	??i2___fltol^0,f,c
 12659  0033E4                     i2u580_40:
 12660  0033E4  2EE8               	decfsz	wreg,f,c
 12661  0033E6  EFED  F019         	goto	i2u580_45
 12662  0033EA  5046               	movf	??i2___fltol^0,w,c
 12663  0033EC  6E4A               	movwf	i2___fltol@sign1^0,c
 12664  0033EE  8E44               	bsf	(i2___fltol@f1+2)^0,7,c
 12665  0033F0  0EFF               	movlw	255
 12666  0033F2  1642               	andwf	i2___fltol@f1^0,f,c
 12667  0033F4  0EFF               	movlw	255
 12668  0033F6  1643               	andwf	(i2___fltol@f1+1)^0,f,c
 12669  0033F8  0EFF               	movlw	255
 12670  0033FA  1644               	andwf	(i2___fltol@f1+2)^0,f,c
 12671  0033FC  0E00               	movlw	0
 12672  0033FE  1645               	andwf	(i2___fltol@f1+3)^0,f,c
 12673  003400  0E96               	movlw	150
 12674  003402  5E4B               	subwf	i2___fltol@exp1^0,f,c
 12675  003404  BE4B               	btfsc	i2___fltol@exp1^0,7,c
 12676  003406  EF09  F01A         	goto	i2u581_40
 12677  00340A  EF07  F01A         	goto	i2u581_41
 12678  00340E                     i2u581_41:
 12679  00340E  EF1F  F01A         	goto	i2l5187
 12680  003412                     i2u581_40:
 12681  003412  504B               	movf	i2___fltol@exp1^0,w,c
 12682  003414  0A80               	xorlw	128
 12683  003416  0F97               	addlw	151
 12684  003418  B0D8               	btfsc	status,0,c
 12685  00341A  EF11  F01A         	goto	i2u582_41
 12686  00341E  EF13  F01A         	goto	i2u582_40
 12687  003422                     i2u582_41:
 12688  003422  EF15  F01A         	goto	i2l5183
 12689  003426                     i2u582_40:
 12690  003426  EFD8  F019         	goto	i2l5163
 12691  00342A                     i2l5183:
 12692  00342A  90D8               	bcf	status,0,c
 12693  00342C  3245               	rrcf	(i2___fltol@f1+3)^0,f,c
 12694  00342E  3244               	rrcf	(i2___fltol@f1+2)^0,f,c
 12695  003430  3243               	rrcf	(i2___fltol@f1+1)^0,f,c
 12696  003432  3242               	rrcf	i2___fltol@f1^0,f,c
 12697  003434  3E4B               	incfsz	i2___fltol@exp1^0,f,c
 12698  003436  EF15  F01A         	goto	i2l5183
 12699  00343A  EF37  F01A         	goto	i2l5197
 12700  00343E                     i2l5187:
 12701  00343E  0E1F               	movlw	31
 12702  003440  644B               	cpfsgt	i2___fltol@exp1^0,c
 12703  003442  EF25  F01A         	goto	i2u583_41
 12704  003446  EF27  F01A         	goto	i2u583_40
 12705  00344A                     i2u583_41:
 12706  00344A  EF2F  F01A         	goto	i2l5195
 12707  00344E                     i2u583_40:
 12708  00344E  EFD8  F019         	goto	i2l5163
 12709  003452                     i2l5193:
 12710  003452  90D8               	bcf	status,0,c
 12711  003454  3642               	rlcf	i2___fltol@f1^0,f,c
 12712  003456  3643               	rlcf	(i2___fltol@f1+1)^0,f,c
 12713  003458  3644               	rlcf	(i2___fltol@f1+2)^0,f,c
 12714  00345A  3645               	rlcf	(i2___fltol@f1+3)^0,f,c
 12715  00345C  064B               	decf	i2___fltol@exp1^0,f,c
 12716  00345E                     i2l5195:
 12717  00345E  504B               	movf	i2___fltol@exp1^0,w,c
 12718  003460  A4D8               	btfss	status,2,c
 12719  003462  EF35  F01A         	goto	i2u584_41
 12720  003466  EF37  F01A         	goto	i2u584_40
 12721  00346A                     i2u584_41:
 12722  00346A  EF29  F01A         	goto	i2l5193
 12723  00346E                     i2u584_40:
 12724  00346E                     i2l5197:
 12725  00346E  504A               	movf	i2___fltol@sign1^0,w,c
 12726  003470  B4D8               	btfsc	status,2,c
 12727  003472  EF3D  F01A         	goto	i2u585_41
 12728  003476  EF3F  F01A         	goto	i2u585_40
 12729  00347A                     i2u585_41:
 12730  00347A  EF47  F01A         	goto	i2l5201
 12731  00347E                     i2u585_40:
 12732  00347E  1E45               	comf	(i2___fltol@f1+3)^0,f,c
 12733  003480  1E44               	comf	(i2___fltol@f1+2)^0,f,c
 12734  003482  1E43               	comf	(i2___fltol@f1+1)^0,f,c
 12735  003484  6C42               	negf	i2___fltol@f1^0,c
 12736  003486  0E00               	movlw	0
 12737  003488  2243               	addwfc	(i2___fltol@f1+1)^0,f,c
 12738  00348A  2244               	addwfc	(i2___fltol@f1+2)^0,f,c
 12739  00348C  2245               	addwfc	(i2___fltol@f1+3)^0,f,c
 12740  00348E                     i2l5201:
 12741  00348E  C042  F042         	movff	i2___fltol@f1,?i2___fltol
 12742  003492  C043  F043         	movff	i2___fltol@f1+1,?i2___fltol+1
 12743  003496  C044  F044         	movff	i2___fltol@f1+2,?i2___fltol+2
 12744  00349A  C045  F045         	movff	i2___fltol@f1+3,?i2___fltol+3
 12745  00349E                     i2l691:
 12746  00349E  0012               	return		;funcret
 12747  0034A0                     __end_ofi2___fltol:
 12748                           	callstack 0
 12749                           
 12750 ;; *************** function i2___awdiv *****************
 12751 ;; Defined at:
 12752 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;  dividend        2    0[COMRAM] int 
 12755 ;;  divisor         2    2[COMRAM] int 
 12756 ;; Auto vars:     Size  Location     Type
 12757 ;;  quotient        2    6[COMRAM] int 
 12758 ;;  sign            1    5[COMRAM] unsigned char 
 12759 ;;  counter         1    4[COMRAM] unsigned char 
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  2    0[COMRAM] int 
 12762 ;; Registers used:
 12763 ;;		wreg, status,2, status,0
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12769 ;;      Params:         4       0       0       0       0       0       0       0       0
 12770 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12771 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12772 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12773 ;;Total ram usage:        8 bytes
 12774 ;; Hardware stack levels used: 1
 12775 ;; This function calls:
 12776 ;;		Nothing
 12777 ;; This function is called by:
 12778 ;;		i2_convert_temp
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782                           	psect	text68
 12783  003AC4                     __ptext68:
 12784                           	callstack 0
 12785  003AC4                     i2___awdiv:
 12786                           	callstack 19
 12787  003AC4  0E00               	movlw	0
 12788  003AC6  6E06               	movwf	i2___awdiv@sign^0,c
 12789  003AC8  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
 12790  003ACA  EF6B  F01D         	goto	i2u573_40
 12791  003ACE  EF69  F01D         	goto	i2u573_41
 12792  003AD2                     i2u573_41:
 12793  003AD2  EF71  F01D         	goto	i2l5125
 12794  003AD6                     i2u573_40:
 12795  003AD6  6C03               	negf	i2___awdiv@divisor^0,c
 12796  003AD8  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
 12797  003ADA  B0D8               	btfsc	status,0,c
 12798  003ADC  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
 12799  003ADE  0E01               	movlw	1
 12800  003AE0  6E06               	movwf	i2___awdiv@sign^0,c
 12801  003AE2                     i2l5125:
 12802  003AE2  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
 12803  003AE4  EF78  F01D         	goto	i2u574_40
 12804  003AE8  EF76  F01D         	goto	i2u574_41
 12805  003AEC                     i2u574_41:
 12806  003AEC  EF7E  F01D         	goto	i2l5131
 12807  003AF0                     i2u574_40:
 12808  003AF0  6C01               	negf	i2___awdiv@dividend^0,c
 12809  003AF2  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
 12810  003AF4  B0D8               	btfsc	status,0,c
 12811  003AF6  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
 12812  003AF8  0E01               	movlw	1
 12813  003AFA  1A06               	xorwf	i2___awdiv@sign^0,f,c
 12814  003AFC                     i2l5131:
 12815  003AFC  0E00               	movlw	0
 12816  003AFE  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
 12817  003B00  0E00               	movlw	0
 12818  003B02  6E07               	movwf	i2___awdiv@quotient^0,c
 12819  003B04  5003               	movf	i2___awdiv@divisor^0,w,c
 12820  003B06  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 12821  003B08  B4D8               	btfsc	status,2,c
 12822  003B0A  EF89  F01D         	goto	i2u575_41
 12823  003B0E  EF8B  F01D         	goto	i2u575_40
 12824  003B12                     i2u575_41:
 12825  003B12  EFB3  F01D         	goto	i2l5153
 12826  003B16                     i2u575_40:
 12827  003B16  0E01               	movlw	1
 12828  003B18  6E05               	movwf	i2___awdiv@counter^0,c
 12829  003B1A  EF93  F01D         	goto	i2l5139
 12830  003B1E                     i2l5137:
 12831  003B1E  90D8               	bcf	status,0,c
 12832  003B20  3603               	rlcf	i2___awdiv@divisor^0,f,c
 12833  003B22  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 12834  003B24  2A05               	incf	i2___awdiv@counter^0,f,c
 12835  003B26                     i2l5139:
 12836  003B26  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
 12837  003B28  EF98  F01D         	goto	i2u576_41
 12838  003B2C  EF9A  F01D         	goto	i2u576_40
 12839  003B30                     i2u576_41:
 12840  003B30  EF8F  F01D         	goto	i2l5137
 12841  003B34                     i2u576_40:
 12842  003B34                     i2l5141:
 12843  003B34  90D8               	bcf	status,0,c
 12844  003B36  3607               	rlcf	i2___awdiv@quotient^0,f,c
 12845  003B38  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 12846  003B3A  5003               	movf	i2___awdiv@divisor^0,w,c
 12847  003B3C  5C01               	subwf	i2___awdiv@dividend^0,w,c
 12848  003B3E  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 12849  003B40  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 12850  003B42  A0D8               	btfss	status,0,c
 12851  003B44  EFA6  F01D         	goto	i2u577_41
 12852  003B48  EFA8  F01D         	goto	i2u577_40
 12853  003B4C                     i2u577_41:
 12854  003B4C  EFAD  F01D         	goto	i2l5149
 12855  003B50                     i2u577_40:
 12856  003B50  5003               	movf	i2___awdiv@divisor^0,w,c
 12857  003B52  5E01               	subwf	i2___awdiv@dividend^0,f,c
 12858  003B54  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 12859  003B56  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 12860  003B58  8007               	bsf	i2___awdiv@quotient^0,0,c
 12861  003B5A                     i2l5149:
 12862  003B5A  90D8               	bcf	status,0,c
 12863  003B5C  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 12864  003B5E  3203               	rrcf	i2___awdiv@divisor^0,f,c
 12865  003B60  2E05               	decfsz	i2___awdiv@counter^0,f,c
 12866  003B62  EF9A  F01D         	goto	i2l5141
 12867  003B66                     i2l5153:
 12868  003B66  5006               	movf	i2___awdiv@sign^0,w,c
 12869  003B68  B4D8               	btfsc	status,2,c
 12870  003B6A  EFB9  F01D         	goto	i2u578_41
 12871  003B6E  EFBB  F01D         	goto	i2u578_40
 12872  003B72                     i2u578_41:
 12873  003B72  EFBF  F01D         	goto	i2l5157
 12874  003B76                     i2u578_40:
 12875  003B76  6C07               	negf	i2___awdiv@quotient^0,c
 12876  003B78  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
 12877  003B7A  B0D8               	btfsc	status,0,c
 12878  003B7C  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
 12879  003B7E                     i2l5157:
 12880  003B7E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12881  003B82  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12882  003B86  0012               	return		;funcret
 12883  003B88                     __end_ofi2___awdiv:
 12884                           	callstack 0
 12885                           
 12886                           	psect	rparam
 12887  0000                     
 12888                           	psect	temp
 12889  000053                     btemp:
 12890                           	callstack 0
 12891  000053                     	ds	1
 12892  0000                     int$flags	set	btemp
 12893  0000                     wtemp8	set	btemp+1
 12894  0000                     ttemp5	set	btemp+1
 12895  0000                     ttemp6	set	btemp+4
 12896  0000                     ttemp7	set	btemp+8
 12897                           
 12898                           	psect	idloc
 12899                           
 12900                           ;Config register IDLOC0 @ 0x200000
 12901                           ;	unspecified, using default values
 12902  200000                     	org	2097152
 12903  200000  FF                 	db	255
 12904                           
 12905                           ;Config register IDLOC1 @ 0x200001
 12906                           ;	unspecified, using default values
 12907  200001                     	org	2097153
 12908  200001  FF                 	db	255
 12909                           
 12910                           ;Config register IDLOC2 @ 0x200002
 12911                           ;	unspecified, using default values
 12912  200002                     	org	2097154
 12913  200002  FF                 	db	255
 12914                           
 12915                           ;Config register IDLOC3 @ 0x200003
 12916                           ;	unspecified, using default values
 12917  200003                     	org	2097155
 12918  200003  FF                 	db	255
 12919                           
 12920                           ;Config register IDLOC4 @ 0x200004
 12921                           ;	unspecified, using default values
 12922  200004                     	org	2097156
 12923  200004  FF                 	db	255
 12924                           
 12925                           ;Config register IDLOC5 @ 0x200005
 12926                           ;	unspecified, using default values
 12927  200005                     	org	2097157
 12928  200005  FF                 	db	255
 12929                           
 12930                           ;Config register IDLOC6 @ 0x200006
 12931                           ;	unspecified, using default values
 12932  200006                     	org	2097158
 12933  200006  FF                 	db	255
 12934                           
 12935                           ;Config register IDLOC7 @ 0x200007
 12936                           ;	unspecified, using default values
 12937  200007                     	org	2097159
 12938  200007  FF                 	db	255
 12939                           
 12940                           	psect	config
 12941                           
 12942                           ;Config register CONFIG1L @ 0x300000
 12943                           ;	PLL Prescaler Selection bits
 12944                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12945                           ;	System Clock Postscaler Selection bits
 12946                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12947                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12948                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12949  300000                     	org	3145728
 12950  300000  00                 	db	0
 12951                           
 12952                           ;Config register CONFIG1H @ 0x300001
 12953                           ;	Oscillator Selection bits
 12954                           ;	FOSC = HS, HS oscillator (HS)
 12955                           ;	Fail-Safe Clock Monitor Enable bit
 12956                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12957                           ;	Internal/External Oscillator Switchover bit
 12958                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12959  300001                     	org	3145729
 12960  300001  0C                 	db	12
 12961                           
 12962                           ;Config register CONFIG2L @ 0x300002
 12963                           ;	Power-up Timer Enable bit
 12964                           ;	PWRT = OFF, PWRT disabled
 12965                           ;	Brown-out Reset Enable bits
 12966                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12967                           ;	Brown-out Reset Voltage bits
 12968                           ;	BORV = 3, Minimum setting 2.05V
 12969                           ;	USB Voltage Regulator Enable bit
 12970                           ;	VREGEN = OFF, USB voltage regulator disabled
 12971  300002                     	org	3145730
 12972  300002  19                 	db	25
 12973                           
 12974                           ;Config register CONFIG2H @ 0x300003
 12975                           ;	Watchdog Timer Enable bit
 12976                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12977                           ;	Watchdog Timer Postscale Select bits
 12978                           ;	WDTPS = 32768, 1:32768
 12979  300003                     	org	3145731
 12980  300003  1E                 	db	30
 12981                           
 12982                           ; Padding undefined space
 12983  300004                     	org	3145732
 12984  300004  FF                 	db	255
 12985                           
 12986                           ;Config register CONFIG3H @ 0x300005
 12987                           ;	CCP2 MUX bit
 12988                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
 12989                           ;	PORTB A/D Enable bit
 12990                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12991                           ;	Low-Power Timer 1 Oscillator Enable bit
 12992                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12993                           ;	MCLR Pin Enable bit
 12994                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12995  300005                     	org	3145733
 12996  300005  80                 	db	128
 12997                           
 12998                           ;Config register CONFIG4L @ 0x300006
 12999                           ;	Stack Full/Underflow Reset Enable bit
 13000                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 13001                           ;	Single-Supply ICSP Enable bit
 13002                           ;	LVP = OFF, Single-Supply ICSP disabled
 13003                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 13004                           ;	ICPRT = OFF, ICPORT disabled
 13005                           ;	Extended Instruction Set Enable bit
 13006                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13007                           ;	Background Debugger Enable bit
 13008                           ;	DEBUG = 0x1, unprogrammed default
 13009  300006                     	org	3145734
 13010  300006  80                 	db	128
 13011                           
 13012                           ; Padding undefined space
 13013  300007                     	org	3145735
 13014  300007  FF                 	db	255
 13015                           
 13016                           ;Config register CONFIG5L @ 0x300008
 13017                           ;	Code Protection bit
 13018                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 13019                           ;	Code Protection bit
 13020                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 13021                           ;	Code Protection bit
 13022                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 13023                           ;	Code Protection bit
 13024                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 13025  300008                     	org	3145736
 13026  300008  0F                 	db	15
 13027                           
 13028                           ;Config register CONFIG5H @ 0x300009
 13029                           ;	Boot Block Code Protection bit
 13030                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 13031                           ;	Data EEPROM Code Protection bit
 13032                           ;	CPD = OFF, Data EEPROM is not code-protected
 13033  300009                     	org	3145737
 13034  300009  C0                 	db	192
 13035                           
 13036                           ;Config register CONFIG6L @ 0x30000A
 13037                           ;	Write Protection bit
 13038                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 13039                           ;	Write Protection bit
 13040                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 13041                           ;	Write Protection bit
 13042                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 13043                           ;	Write Protection bit
 13044                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 13045  30000A                     	org	3145738
 13046  30000A  0F                 	db	15
 13047                           
 13048                           ;Config register CONFIG6H @ 0x30000B
 13049                           ;	Configuration Register Write Protection bit
 13050                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 13051                           ;	Boot Block Write Protection bit
 13052                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 13053                           ;	Data EEPROM Write Protection bit
 13054                           ;	WRTD = OFF, Data EEPROM is not write-protected
 13055  30000B                     	org	3145739
 13056  30000B  E0                 	db	224
 13057                           
 13058                           ;Config register CONFIG7L @ 0x30000C
 13059                           ;	Table Read Protection bit
 13060                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13061                           ;	Table Read Protection bit
 13062                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13063                           ;	Table Read Protection bit
 13064                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13065                           ;	Table Read Protection bit
 13066                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13067  30000C                     	org	3145740
 13068  30000C  0F                 	db	15
 13069                           
 13070                           ;Config register CONFIG7H @ 0x30000D
 13071                           ;	Boot Block Table Read Protection bit
 13072                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 13073  30000D                     	org	3145741
 13074  30000D  40                 	db	64
 13075                           tosu	equ	0xFFF
 13076                           tosh	equ	0xFFE
 13077                           tosl	equ	0xFFD
 13078                           stkptr	equ	0xFFC
 13079                           pclatu	equ	0xFFB
 13080                           pclath	equ	0xFFA
 13081                           pcl	equ	0xFF9
 13082                           tblptru	equ	0xFF8
 13083                           tblptrh	equ	0xFF7
 13084                           tblptrl	equ	0xFF6
 13085                           tablat	equ	0xFF5
 13086                           prodh	equ	0xFF4
 13087                           prodl	equ	0xFF3
 13088                           indf0	equ	0xFEF
 13089                           postinc0	equ	0xFEE
 13090                           postdec0	equ	0xFED
 13091                           preinc0	equ	0xFEC
 13092                           plusw0	equ	0xFEB
 13093                           fsr0h	equ	0xFEA
 13094                           fsr0l	equ	0xFE9
 13095                           wreg	equ	0xFE8
 13096                           indf1	equ	0xFE7
 13097                           postinc1	equ	0xFE6
 13098                           postdec1	equ	0xFE5
 13099                           preinc1	equ	0xFE4
 13100                           plusw1	equ	0xFE3
 13101                           fsr1h	equ	0xFE2
 13102                           fsr1l	equ	0xFE1
 13103                           bsr	equ	0xFE0
 13104                           indf2	equ	0xFDF
 13105                           postinc2	equ	0xFDE
 13106                           postdec2	equ	0xFDD
 13107                           preinc2	equ	0xFDC
 13108                           plusw2	equ	0xFDB
 13109                           fsr2h	equ	0xFDA
 13110                           fsr2l	equ	0xFD9
 13111                           status	equ	0xFD8

Data Sizes:
    Strings     137
    Constant    20
    Data        20
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      82
    BANK0           160    126     160
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 6
		 -> update_password@user(BANK0[6]), change_password@new_password(BANK0[5]), change_password@current_password(BANK0[5]), start@current_password(BANK0[5]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 6
		 -> update_password@user(BANK0[6]), change_password@new_password(BANK0[5]), change_password@current_password(BANK0[5]), start@current_password(BANK0[5]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 5
		 -> get_password@entered_password(BANK0[5]), change_password@new_password(BANK0[5]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 5
		 -> get_password@entered_password(BANK0[5]), change_password@new_password(BANK0[5]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> user.password(COMRAM[5]), update_password@user(BANK0[6]), user.password(COMRAM[5]), grant_access@user(BANK0[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> change_password@current_password(BANK0[5]), start@current_password(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> show_temp@int_str(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_20(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_20(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_20(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> show_temp@int_str(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1486_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> show_temp@int_str(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> show_temp@int_str(BANK0[20]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> STR_22(CODE[5]), STR_21(CODE[5]), show_temp@int_str(BANK0[20]), STR_19(CODE[15]), 
		 -> STR_18(CODE[6]), STR_17(CODE[9]), STR_16(CODE[6]), STR_15(CODE[13]), 
		 -> STR_14(CODE[14]), STR_13(CODE[5]), STR_12(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[3]), STR_9(CODE[7]), STR_8(CODE[4]), STR_7(CODE[3]), 
		 -> STR_6(CODE[11]), STR_5(CODE[15]), STR_4(CODE[6]), STR_3(CODE[10]), 
		 -> STR_2(CODE[7]), STR_1(CODE[17]), 

    update_password@new_password	PTR const unsigned char  size(2) Largest target is 5
		 -> change_password@new_password(BANK0[5]), 

    update_password@current_password	PTR const unsigned char  size(2) Largest target is 5
		 -> change_password@current_password(BANK0[5]), 

    EEPROM_read_user@user	PTR struct . size(2) Largest target is 6
		 -> update_password@user(BANK0[6]), grant_access@user(BANK0[6]), 

    EEPROM_write_user@user	PTR const struct . size(2) Largest target is 6
		 -> assign_default_passwords@user3(BANK0[6]), assign_default_passwords@user2(BANK0[6]), assign_default_passwords@user1(BANK0[6]), update_password@user(BANK0[6]), 

    grant_access@input_password	PTR const unsigned char  size(2) Largest target is 5
		 -> change_password@current_password(BANK0[5]), start@current_password(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 6
		 -> update_password@user(BANK0[6]), change_password@new_password(BANK0[5]), change_password@current_password(BANK0[5]), start@current_password(BANK0[5]), 

    get_password@password	PTR const unsigned char  size(2) Largest target is 5
		 -> change_password@new_password(BANK0[5]), change_password@current_password(BANK0[5]), start@current_password(BANK0[5]), 

    show_status_relay@rl2	PTR unsigned char  size(2) Largest target is 4
		 -> STR_11(CODE[4]), STR_10(CODE[3]), 

    show_status_relay@rl1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_8(CODE[4]), STR_7(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_convert_temp
    i2_convert_temp->i2___fltol
    i2_roundf->i2___flmul
    i2___flsub->i2___fladd
    i2___flmul->i2___xxtofl
    i2___fltol->i2_roundf

Critical Paths under _main in BANK0

    _main->_show_temp
    _start->_get_password
    _show_status_relay->_read_keypad
    _update_status_relay->_EEPROM_write
    _option_relay->_toggle_relay
    _toggle_relay->_EEPROM_write
    _show_temp->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _convert_temp->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl
    ___fltol->_roundf
    _config->_OpenXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _change_password->_get_password
    _update_password->_strcpy
    _putsXLCD->_WriteDataXLCD
    _grant_access->_EEPROM_read_user
    _grant_access->_strcmp
    _EEPROM_read_user->_EEPROM_read
    _get_password->_read_keypad
    _read_keypad->_delay_ms
    _clean_lcd->_WriteCmdXLCD
    _assign_default_status_relay->_has_status_relay
    _has_status_relay->_EEPROM_read
    _assign_default_passwords->_EEPROM_write_user
    _has_passwords->_EEPROM_read
    _EEPROM_write_user->_EEPROM_write

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   41833
                                            123 BANK0      3     3      0
           _assign_default_passwords
        _assign_default_status_relay
                    _change_password
                          _clean_lcd
                             _config
                        _read_keypad
                          _show_temp
                              _start
                _update_status_relay
 ---------------------------------------------------------------------------------
 (1) _start                                                7     7      0    8861
                                             37 BANK0      7     7      0
                       _WriteCmdXLCD
                          _clean_lcd
                     _delay_show_lcd
                       _get_password
                       _grant_access
                           _putsXLCD
                  _show_status_relay
 ---------------------------------------------------------------------------------
 (2) _show_status_relay                                   11    11      0    4354
                                             25 BANK0     11    11      0
                        _EEPROM_read
                       _WriteCmdXLCD
                          _clean_lcd
                     _delay_show_lcd
                            _isdigit
                       _option_relay
                           _putsXLCD
                        _read_keypad
                _update_status_relay
 ---------------------------------------------------------------------------------
 (1) _update_status_relay                                  1     1      0     674
                                              2 BANK0      1     1      0
                        _EEPROM_read
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (3) _option_relay                                         4     2      2    1035
                                             10 BANK0      4     2      2
                       _toggle_relay
 ---------------------------------------------------------------------------------
 (4) _toggle_relay                                         8     6      2     893
                                              2 BANK0      8     6      2
                        _EEPROM_read
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     161
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _show_temp                                           22    22      0   21493
                                            101 BANK0     22    22      0
                       _WriteCmdXLCD
                          _clean_lcd
                       _convert_temp
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    6456
                                             87 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _convert_temp                                         8     6      2   13267
                                             75 BANK0      4     2      2
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   10193
                                             39 BANK0     26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             16 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3326
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             65 BANK0     10     6      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     110
                           _OpenXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     110
                                              1 BANK0      1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _change_password                                     14    14      0    7700
                                             37 BANK0     14    14      0
                       _WriteCmdXLCD
                          _clean_lcd
                     _delay_show_lcd
                       _get_password
                       _grant_access
                           _putsXLCD
                    _update_password
 ---------------------------------------------------------------------------------
 (2) _update_password                                     11     7      4    3124
                                              8 BANK0     11     7      4
                   _EEPROM_read_user
                  _EEPROM_write_user
                             _strcmp
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _putsXLCD                                             2     0      2    1609
                                              1 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _grant_access                                         9     7      2    1216
                                              6 BANK0      9     7      2
                   _EEPROM_read_user
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4     416
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _EEPROM_read_user                                     5     2      3     506
                                              1 BANK0      5     2      3
                        _EEPROM_read
 ---------------------------------------------------------------------------------
 (2) _get_password                                        12    10      2    1545
                                             25 BANK0     12    10      2
                       _WriteCmdXLCD
                      _WriteDataXLCD
                        _read_keypad
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4     400
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _read_keypad                                         20    20      0     581
                                              5 BANK0     20    20      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             5     3      2     350
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _delay_show_lcd                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _clean_lcd                                            1     1      0      44
                                              1 BANK0      1     1      0
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (4) _WriteCmdXLCD                                         1     1      0      44
                                              0 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _assign_default_status_relay                          0     0      0     720
                       _EEPROM_write
                   _has_status_relay
 ---------------------------------------------------------------------------------
 (2) _has_status_relay                                     3     1      2      68
                                              1 BANK0      3     1      2
                        _EEPROM_read
 ---------------------------------------------------------------------------------
 (1) _assign_default_passwords                            18    18      0    1583
                                              7 BANK0     18    18      0
                  _EEPROM_write_user
                      _has_passwords
 ---------------------------------------------------------------------------------
 (2) _has_passwords                                        3     1      2      68
                                              1 BANK0      3     1      2
                        _EEPROM_read
 ---------------------------------------------------------------------------------
 (2) _EEPROM_read                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_write_user                                    5     2      3    1440
                                              2 BANK0      5     2      3
                       _EEPROM_write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write                                         2     1      1     652
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_isr                                            1     1      0    9987
                                             79 COMRAM     1     1      0
                     i2_convert_temp
 ---------------------------------------------------------------------------------
 (11) i2_convert_temp                                      8     6      2    9987
                                             75 COMRAM     4     2      2
                          i2___awdiv
                          i2___flmul
                          i2___fltol
                         i2___xxtofl
                           i2_roundf
 ---------------------------------------------------------------------------------
 (12) i2_roundf                                           26    22      4    7439
                                             39 COMRAM    26    22      4
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (13) i2___flsub                                           8     0      8    2497
                                             16 COMRAM     8     0      8
                          i2___fladd
 ---------------------------------------------------------------------------------
 (14) i2___fladd                                          16     8      8    2400
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (13) i2___flneg                                           4     0      4      97
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) i2___flmul                                          25    17      8    1570
                                             14 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___flge                                           12     4      8     286
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (12) i2___xxtofl                                         14    10      4     348
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (12) i2___fltol                                          10     6      4     255
                                             65 COMRAM    10     6      4
                           i2_roundf (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _assign_default_passwords
     _EEPROM_write_user
       _EEPROM_write
     _has_passwords
       _EEPROM_read
   _assign_default_status_relay
     _EEPROM_write
     _has_status_relay
       _EEPROM_read
   _change_password
     _WriteCmdXLCD
       _DelayFor18TCY
     _clean_lcd
       _WriteCmdXLCD
     _delay_show_lcd
     _get_password
       _WriteCmdXLCD
       _WriteDataXLCD
         _DelayFor18TCY
       _read_keypad
         _delay_ms
       _strcpy
     _grant_access
       _EEPROM_read_user
         _EEPROM_read
       _strcmp
     _putsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
     _update_password
       _EEPROM_read_user
       _EEPROM_write_user
       _strcmp
       _strcpy
   _clean_lcd
   _config
     _OpenXLCD
       _BusyXLCD
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
   _read_keypad
   _show_temp
     _WriteCmdXLCD
     _clean_lcd
     _convert_temp
       ___awdiv
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl
       _roundf
     _putsXLCD
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _start
     _WriteCmdXLCD
     _clean_lcd
     _delay_show_lcd
     _get_password
     _grant_access
     _putsXLCD
     _show_status_relay
       _EEPROM_read
       _WriteCmdXLCD
       _clean_lcd
       _delay_show_lcd
       _isdigit
       _option_relay
         _toggle_relay
           _EEPROM_read
           _EEPROM_write
       _putsXLCD
       _read_keypad
       _update_status_relay
         _EEPROM_read
         _EEPROM_write
   _update_status_relay

 _high_isr (ROOT)
   i2_convert_temp
     i2___awdiv
     i2___flmul
       i2___xxtofl (ARG)
     i2___fltol
       i2_roundf (ARG)
         i2___fladd
         i2___flge
         i2___flmul
         i2___flneg
         i2___flsub
           i2___fladd
     i2___xxtofl
     i2_roundf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7E      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     112      20        0.0%
DATA                 0      0     112       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 13 14:27:54 2023

                       ?_get_password 0079                          ___awdiv@sign 0065  
                  EEPROM_read@address 0060                     _show_status_relay 2BC4  
                                 l202 4022                                   l212 47AA  
                                 l140 3698                                   l205 4638  
                                 l215 40D4                                   l135 35A4  
                                 l240 474C                                   l224 41E4  
                                 l320 483C                                   l209 466E  
                                 l161 2D6E                                   l218 40E6  
                                 l243 4832                                   l323 480E  
                                 l237 4738                                   l229 4310  
                                 l173 42C6                                   l246 3D4E  
                                 l182 3060                                   l326 47FA  
                                 l350 378A                                   l239 4746  
                                 l263 427C                                   l167 3CDA  
                                 l191 3FB6                                   l256 4230  
                                 l176 47CA                                   l360 442C  
                                 l184 318A                                   l281 4498  
                                 l249 3D5E                                   l521 305E  
                                 l274 3DE2                                   l370 453E  
                                 l179 47E6                                   l291 24F0  
                                 l195 3B96                                   l284 44B6  
                                 l292 255C                                   l356 43E6  
                                 l508 2EF8                                   l373 44FA  
                                 l293 24FC                                   l278 477C  
                                 l294 2508                                   l382 3ED8  
                                 l295 2514                                   l199 3C46  
                                 l359 441A                                   l296 259E  
                                 l297 269E                                   l625 3AC2  
                                 l298 25E8                                   l299 2632  
                                 l664 3398                                   l922 0A90  
                                 l691 3292                                   l659 3352  
                                 l931 0D60                                   l923 0A7E  
                                 l668 46A8                                   l924 0A44  
                                 l939 0BAA                                   l948 0C7A  
                                 l964 43A0                                   l949 0C68  
               EEPROM_write_user@user 0062                           i2___fladd@a 0005  
                         i2___fladd@b 0001                                   _abs 4540  
                  ?_show_status_relay 0001                                   _pad 3934  
                                 _row 0051                 __size_of_WriteCmdXLCD 0044  
                          i2___xxtofl 2A10  __size_of_assign_default_status_relay 0030  
                                 wreg 000FE8                           i2___flmul@a 0013  
                         i2___flmul@b 000F                           i2___flsub@a 0015  
                         i2___flsub@b 0011                          ___flmul@aexp 007F  
                        ___flmul@bexp 0080                          ___flmul@sign 007A  
                        ___flmul@temp 0085                          ___flmul@prod 0081  
             has_status_relay@address 0063                          ___fltol@exp1 00AA  
                 ??_show_status_relay 0079                                  l1012 164C  
                                l1110 39FC                                  l1015 14DE  
                                l1008 12E8                                  l1025 160E  
                                l1017 1556                                  l1105 397C  
                                l1018 1544                                  l1203 3F48  
                                ?_abs 0072                                  l1052 2A0E  
                                l1108 39C0                                  l1116 2286  
                                l1118 228E                                  l1150 4084  
                                l1063 29A6                                  l1215 4634  
                                l1143 2856                                  l1056 294A  
                                l1136 24C8                                  l1209 45C0  
                                l1049 28B2                                  l1154 4578  
                                l1180 4840                                  l1068 45FA  
                                l1157 4580                                  l1149 407C  
                                l1078 4196                                  l4001 1378  
                                l1169 3932                                  l1177 4358  
                                l4011 13BA                                  l4003 1384  
                                l1188 1E36                                  l4101 3390  
                                l4021 141C                                  l4013 13CA  
                                l4005 1392                                  l4103 3396  
                                l4031 14C4                                  l4023 1438  
                                l4015 13E4                                  l4007 139E  
                                l4111 4698                                  l5001 3CDC  
                                l4041 1500                                  l4033 14CE  
                                l4025 1462                                  l4017 13F4  
                                l4009 13AE                                  l4121 26E4  
                                l5003 3CE6                                  l4051 1572  
                                l4043 150E                                  l4035 14DC  
                                l4027 1498                                  l4019 1410  
                                l4107 4670                                  l4123 26E8  
                                l4115 26A0                                  l5101 4232  
                                l5013 3D4A                                  l5005 3CF6  
                                l4061 15DC                                  l4053 1580  
                                l4045 153C                                  l4037 14EE  
                                l4029 14A6                                  l4109 4688  
                                l3501 2F00                                  l4133 27B0  
                                l4125 270C                                  l4117 26C4  
                                l5021 4168                                  l5103 423C  
                                l5111 4264                                  l5007 3D20  
                                l5031 36A8                                  l4071 1632  
                                l4063 15F6                                  l4055 15AA  
                                l4039 14FC                                  l3511 2F60  
                                l3503 2F0E                                  l3431 38B6  
                                l3423 3868                                  l4151 2844  
                                l4135 27D4                                  l4143 2804  
                                l4127 2730                                  l4119 26D2  
                                l5023 4184                                  l5015 4146  
                                l5113 4274                                  l5105 4252  
                                l4401 267C                                  l5009 3D34  
                                l5041 36B2                                  l5033 36AA  
                                l4065 1612                                  l4073 1638  
                                l4049 1566                                  l4057 15AE  
                                l3601 08CE                                  l4081 436C  
                                l3521 2FD6                                  l3513 2F7E  
                                l3505 2F2E                                  l3433 38EC  
                                l3425 387C                                  l3441 4332  
                                l4145 2812                                  l4137 27E2  
                                l4129 2778                                  l5017 4158  
                                l4403 2680                                  l5051 36CA  
                                l5043 36B6                                  l5035 36AC  
                                l5027 369E                                  l4091 3302  
                                l4075 163C                                  l4067 1622  
                                l4059 15C8                                  l3611 0908  
                                l3603 08DE                                  l3531 303E  
                                l3523 2FF6                                  l3515 2F86  
                                l3507 2F32                                  l3427 388E  
                                l3443 4338                                  l3451 4626  
                                l4139 27F6                                  l5019 4160  
                                l5109 4260                                  l4405 269C  
                                l4421 3E66                                  l5061 3700  
                                l5053 36CE                                  l5045 36BC  
                                l5037 36AE                                  l5029 36A6  
                                l5301 47A4                                  l4093 3312  
                                l4085 3294                                  l4069 1630  
                                l3701 0AD2                                  l3621 0936  
                                l3613 090E                                  l3605 08EE  
                                l4501 1E26                                  l3461 2DA4  
                                l3525 3008                                  l3517 2F9A  
                                l3509 2F40                                  l3429 3898  
                                l3437 4312                                  l3445 45FC  
                                l3541 3968                                  l4149 281E  
                                l5311 3DAE                                  l4415 47AC  
                                l4431 47CC                                  l4423 3E6A  
                                l5071 373C                                  l5063 3708  
                                l5055 36D2                                  l5047 36C0  
                                l5039 36B0                                  l5303 47A6  
                                l4095 3320                                  l4087 32C4  
                                l3711 0B0C                                  l3703 0AE0  
                                l3631 096A                                  l3623 0938  
                                l3615 0920                                  l3607 08F0  
                                l4079 435A                                  l3471 2DE6  
                                l3463 2DA8                                  l3455 2D70  
                                l3519 2FA8                                  l3527 300E  
                                l3439 4320                                  l3447 4608  
                                l3551 39CE                                  l3543 3974  
                                l3535 3934                                  l3561 4826  
                                l5313 474E                                  l4417 47B2  
                                l4521 42FC                                  l4513 42D2  
                                l4505 42C8                                  l4425 3E7E  
                                l5401 3160                                  l5081 3784  
                                l5073 3750                                  l5065 371C  
                                l5057 36D8                                  l5049 36C4  
                                l5305 47A8                                  l4601 3A5A  
                                l4097 3332                                  l4089 32D4  
                                l3721 0B78                                  l3713 0B0E  
                                l3705 0AEE                                  l3641 09A6  
                                l3625 0948                                  l3633 0972  
                                l3617 0922                                  l3609 08F8  
                                l3481 2E40                                  l3473 2E04  
                                l3465 2DB6                                  l3457 2D76  
                                l3529 301E                                  l3449 460E  
                                l3553 39E2                                  l3545 3988  
                                l3537 3944                                  l3801 2250  
                                l5321 3FEC                                  l4433 45C2  
                                l4441 3C66                                  l4361 3F5E  
                                l3563 482A                                  l5307 3D60  
                                l5315 4766                                  l4419 47C4  
                                l4371 24E2                                  l4515 42E6  
                                l4507 42CC                                  l4531 3F22  
                                l4523 3EDA                                  l4427 3EA2  
                                l5403 316E                                  l5075 3756  
                                l5067 3722                                  l5059 36EC  
                                l4611 3A94                                  l4603 3A62  
                                l4099 3340                                  l3731 0BD0  
                                l3723 0B7A                                  l3715 0B18  
                                l3707 0AFA                                  l3651 09BA  
                                l3643 09AA                                  l3635 0982  
                                l3627 0958                                  l3619 0928  
                                l3483 2E6E                                  l3475 2E0C  
                                l3491 2EA8                                  l3467 2DD6  
                                l3459 2D84                                  l3547 399C  
                                l3539 3958                                  l3811 22A8  
                                l3803 225E                                  l5323 3FFA  
                                l4443 3C76                                  l4363 3F74  
                                l5331 35A6                                  l3581 472A  
                                l3573 471E                                  l3565 482C  
                                l5309 3D96                                  l5093 4214  
                                l5085 41E6                                  l3901 44F0  
                                l4517 42EA                                  l4525 3EDE  
                                l4429 3EA8                                  l5405 3182  
                                l5077 376A                                  l5069 3736  
                                l4621 3ABA                                  l4613 3A96  
                                l4605 3A70                                  l4701 29B6  
                                l3741 0BFE                                  l3725 0B8A  
                                l3709 0AFE                                  l3717 0B1E  
                                l3661 09CE                                  l3653 09BE  
                                l3645 09AE                                  l3637 0994  
                                l3629 0968                                  l3493 2EB8  
                                l3485 2E8E                                  l3477 2E20  
                                l3469 2DDA                                  l3557 4540  
                                l3549 39A2                                  l3821 22D4  
                                l3813 22B6                                  l3805 2260  
                                l5325 4000                                  l5317 3FB8  
                                l4437 3C48                                  l4365 3F92  
                                l5341 3600                                  l5333 35B0  
                                ?_pad 0070                                  l3583 472C  
                                l3575 4722                                  l4551 41CE  
                                l4543 41A2                                  l4535 4198  
                                l3567 482E                                  l5087 41F0  
                                l5095 4218                                  l3591 4834  
                                l3903 44F4                                  l3911 4492  
                                l4391 2602                                  l4383 25AC  
                                l4375 2520                                  l4519 42EC  
                                l4527 3EE8                                  l5079 3770  
                                l4615 3A9C                                  l4607 3A76  
                                l4631 31B8                                  l4711 29FE  
                                l4703 29BA                                  l3743 0C0C  
                                l3735 0BE4                                  l3751 0C2A  
                                l3719 0B44                                  l3727 0B9A  
                                l3663 09D2                                  l3655 09C2  
                                l3647 09B2                                  l3639 09A2  
                                l3671 09E2                                  l4471 1A78  
                                l3495 2ED8                                  l3487 2E90  
                                l3479 2E2E                                  l3559 455C  
                                l3831 23E4                                  l3823 2358  
                                l3815 22BC                                  l3807 227A  
                                l5327 400E                                  l5319 3FCE  
                                l4447 3C84                                  l4439 3C4C  
                                l4367 3FAE                                  l4359 3F4A  
                                l5351 365E                                  l5343 361E  
                                l5335 35BE                                  l3585 472E  
                                l3577 4726                                  l4545 41B8  
                                l4537 419C                                  l3569 4830  
                                l5097 4228                                  l5089 4206  
                                l4385 25B8                                  l4377 256A  
                                l4369 24CA                                  l4529 3F0A  
                                l3921 4404                                  l3913 43E8  
                                l4553 47FC                                  l4561 43BA  
                                l4609 3A8C                                  l4617 3AA2  
                                l4641 3206                                  l4633 31E2  
                                l4625 318C                                  l4705 29DE  
                                l3745 0C14                                  l3737 0BEE  
                                l3729 0BC0                                  l3753 0C38  
                                l3681 0A52                                  l3673 09E6  
                                l3665 09D6                                  l3657 09C6  
                                l3649 09B6                                  l3593 08A0  
                                l4481 1B56                                  l4473 1A98  
                                l3489 2EA2                                  l3841 2456  
                                l3833 2402                                  l3825 235E  
                                l3817 22C4                                  l3809 2296  
                                l4721 4060                                  l5329 4014  
                                l4457 3CA4                                  l5361 367C  
                                l5353 3662                                  l5345 3638  
                                l5337 35D8                                  l3587 4732  
                                l3579 4728                                  l4547 41BC  
                                l3907 4474                                  l4395 2640  
                                l4379 2576                                  l4467 4582  
                                l3931 4414                                  l3923 4406  
                                l3915 43EC                                  l5371 3088  
                                l4555 47E8                                  l4571 43D6  
                                l4563 43BC                                  l5291 478A  
                                l4619 3AB2                                  l4651 3232  
                                l4635 31E4                                  l4627 31A4  
                                l4707 29EE                                  l3763 0C8A  
                                l3771 0CE0                                  l3755 0C3C  
                                l3747 0C18                                  l3739 0BFC  
                                l3691 0A7C                                  l3683 0A5E  
                                l3675 0A10                                  l3667 09DA  
                                l3659 09CA                                  l3595 08AE  
                                l4491 1CEE                                  l4483 1B74  
                                l4475 1AE2                                  l3499 2EFA  
                                l3851 2490                                  l3843 2464  
                                l3835 241C                                  l3827 2364  
                                l3819 22CE                                  l4715 4024  
                                l4459 3CD2                                  l5363 3690  
                                l5347 363C                                  l5339 35E6  
                                l5451 3E0A                                  l5443 3DE4  
                                l3589 4736                                  l4549 41BE  
                                l3861 4512                                  l3909 4482  
                                l4397 264C                                  l4389 25F6  
                                l4469 4592                                  l4901 3B98  
                                l3941 4426                                  l3925 440A  
                                l3917 43F0                                  l5381 30FE  
                                l5373 30A2                                  l5365 3062  
                                l4573 43DA                                  l4565 43C0  
                                l4557 43A6                                  l5293 4798  
                                l5285 477E                                  l4581 39FE  
                                l4661 3262                                  l4637 31F4  
                                l4709 29FC                                  l3781 0D32  
                                l3773 0CF0                                  l3765 0C96  
                                l3757 0C4A                                  l3749 0C28  
                                l3693 0A9E                                  l3685 0A62  
                                l3677 0A2C                                  l3669 09DE  
                                l3597 08BC                                  l4493 1D22  
                                l4477 1AF6                                  l3845 246A  
                                l3853 24A0                                  l3837 2436  
                                l3829 23C8                                  l4717 402C  
                                l5349 364A                                  l5357 366A  
                                l5461 3E30                                  l5453 3E0E  
                                l5445 3DE8                                  l3871 452E  
                                l3863 4514                                  l4911 3BE4  
                                l4903 3BA0                                  l3943 4428  
                                l3927 4410                                  l3919 43F6  
                                l5391 3146                                  l5383 3118  
                                l5375 30D8                                  l5367 306C  
                                l4575 43DC                                  l4567 43C2  
                                l4559 43B8                                  l5295 479E  
                                l5287 4784                                  l4591 3A2C  
                                l4583 3A04                                  l4663 3272  
                                l4647 321E                                  l4639 31F8  
                                l4671 286E                                  l3951 1230  
                                l3791 0D50                                  l3783 0D38  
                                l3775 0D00                                  l3767 0CA4  
                                l3759 0C60                                  l3695 0AAE  
                                l3687 0A70                                  l3679 0A3C  
                                l3599 08BE                                  l4495 1D90  
                                l4487 1BAC                                  l4479 1B32  
                                l3847 247C                                  l3839 2444  
                                l4719 403A                                  l5359 366E  
                                l5463 3E42                                  l5455 3E16  
                                l5447 3DEC                                  l3873 4532  
                                l3865 4518                                  l3857 4500  
                                l4913 3BEA                                  l4905 3BB0  
                                l4921 3C28                                  l3945 442A  
                                l3937 441C                                  l3929 4412  
                                l5393 3154                                  l5385 312E  
                                l5377 30E2                                  l5369 307A  
                                l4577 43E0                                  l4569 43C6  
                                l5297 47A0                                  l5289 4788  
                                l4593 3A34                                  l4585 3A12  
                                l4665 3282                                  l4657 3246  
                                l4649 3228                                  l4681 28EC  
                                l4673 287C                                  l3961 1270  
                                l3953 123E                                  l3785 0D3A  
                                l3777 0D20                                  l3769 0CDE  
                                l3689 0A72                                  l4497 1DC4  
                                l4489 1C80                                  l3849 2488  
                                l3881 427E                                  l5617 3CBC  
                                l5465 3E46                                  l5457 3E1A  
                                l5449 3DF0                                  l3875 4534  
                                l3867 451A                                  l3859 4510  
                                l3891 44D4                                  l3883 44BC  
                                l5619 2536                                  l4915 3BFC  
                                l4907 3BC0                                  l4923 4086  
                                l3939 4420                                  l5387 3132  
                                l5379 30F0                                  l5299 47A2  
                                l4595 3A38                                  l4587 3A1A  
                                l4659 3252                                  l4691 2940  
                                l4683 28F4                                  l4675 28C2  
                                l3971 12A0                                  l3963 1276  
                                l3955 1240                                  l3787 0D40  
                                l3779 0D24                                  l3699 0AC2  
                                l4499 1E02                                  l3795 21E6  
                                l5467 3E5A                                  l5459 3E1E  
                                l3877 4538                                  l3869 451E  
                                l3893 44D6                                  l3885 44CC  
                                l4917 3C00                                  l4909 3BDA  
                                l4933 40D0                                  l4925 4090  
                                l5389 3140                                  l4597 3A40  
                                l4589 3A1E                                  l4693 297C  
                                l4685 2900                                  l4677 28D8  
                                l4669 285C                                  l3981 12D8  
                                l3973 12A2                                  l3965 1286  
                                l3957 1250                                  l3949 1222  
                                l3789 0D4E                                  l3797 2206  
                                l4941 2BCA                                  l3895 44DA  
                                l3887 44CE                                  l4919 3C14  
                                l4935 40E4                                  l4927 40A0  
                                l5399 315C                                  l4599 3A52  
                                l4695 2988                                  l4687 2932  
                                l3991 1328                                  l3983 12F8  
                                l3975 12B2                                  l3967 128C  
                                l3959 1260                                  l3799 2230  
                                l4951 2C24                                  l4943 2BCC  
                                l3897 44EA                                  l3889 44D0  
                                l4929 40CA                                  l4697 2996  
                                l4689 2934                                  l3993 1332  
                                l3985 1308                                  l3977 12C2  
                                l3969 1292                                  l4961 2C7E  
                                l4953 2C48                                  l3899 44EE  
                                l4699 29B4                                  l3995 1348  
                                l3979 12D2                                  l4891 4646  
                                l4971 2CAE                                  l4955 2C5A  
                                l4963 2C82                                  l4947 2C00  
                                l4939 2BC4                                  l3997 1354  
                                l3989 131C                                  l4981 2CEC  
                                l4973 2CB8                                  l4965 2C86  
                                l4957 2C6C                                  l4949 2C12  
                                l3999 136C                                  l4991 2D22  
                                l4983 2CFA                                  l4975 2CC4  
                                l4967 2C8A                                  l4959 2C70  
                                l4889 4636                                  l4993 2D30  
                                l4985 2D04                                  l4977 2CD0  
                                l4969 2CA0                                  l4899 3B88  
                                l4995 2D3A                                  l4987 2D10  
                                l4979 2CD6                                  l4989 2D1C  
                                l4997 2D54                                  l4999 2D5C  
                                STR_1 0815                                  STR_2 085F  
                                STR_3 0866                                  STR_4 0887  
                                STR_5 0826                                  STR_6 085B  
                                STR_7 089B                                  STR_8 0897  
                                STR_9 0879                                  u4000 1260  
                                u3200 4626                                  u4001 125C  
                                u3201 4622                                  u4010 12A0  
                                u3210 2D84                                  u4011 129C  
                                u3211 2D80                                  u4100 153C  
                                u4020 12B2                                  u3220 2DB6  
                                u3300 2F7E                                  u4101 1538  
                                u4021 12AE                                  u3221 2DB2  
                                u3301 2F7A                                  u4110 1552  
                                u4030 12C2                                  u3310 2FA8  
                                u3150 387C                                  u4111 154E  
                                u4031 12BE                                  u3231 2DE0  
                                u3311 2FA4                                  u3151 3878  
                                u5000 3AB2                                  u4200 3340  
                                u4120 1566                                  u4040 12F8  
                                u3400 08BC                                  u3240 2E04  
                                u3320 2FD6                                  u3160 388E  
                                u5001 3AAE                                  u4201 333C  
                                u4121 1562                                  u4041 12F4  
                                u3401 08B8                                  u3241 2E00  
                                u3321 2FD2                                  u3161 388A  
                                u5010 31A4                                  u4210 3390  
                                u4130 1580                                  u4050 1308  
                                u3410 08CE                                  u3250 2E2E  
                                u3330 301E                                  u3170 38B6  
                                u5011 31A0                                  u4211 338C  
                                u4131 157C                                  u4051 1304  
                                u3411 08CA                                  u3251 2E2A  
                                u3331 301A                                  u3171 38B2  
                                u5020 31D8                                  u5100 28D8  
                                u4140 15C8                                  u4060 1482  
                                u4220 4688                                  u3500 0A28  
                                u3420 08DE                                  u3260 2E6E  
                                u3180 38EC                                  u3340 3944  
                                u5101 28D4                                  u4141 15C4  
                                u4221 4684                                  u3501 0A22  
                                u3421 08DA                                  u3261 2E6A  
                                u3181 38E8                                  u3341 3940  
                                u5030 3206                                  u5110 292E  
                                u4150 15F6                                  u4070 14DC  
                                u3510 0A2A                                  u3430 0920  
                                u3270 2EB8                                  u3190 4358  
                                u3350 3968                                  u4230 26C4  
                                u5031 3202                                  u5111 292A  
                                u4151 15F2                                  u4071 14D8  
                                u3431 091C                                  u3271 2EB4  
                                u3191 4354                                  u3351 3964  
                                u4231 26C0                                  u5040 321A  
                                u5120 2978                                  u4160 1630  
                                u4080 14FC                                  u3600 0B44  
                                u3520 0A52                                  u3440 0936  
                                u3280 2F0E                                  u3360 39C0  
                                u4240 270C                                  u5041 3216  
                                u5025 31CE                                  u5121 2974  
                                u4161 162C                                  u4081 14F8  
                                u4065 1478                                  u3601 0B40  
                                u3521 0A4E                                  u3441 0932  
                                u3281 2F0A                                  u3361 39BC  
                                u4241 2708                                  u5050 3242  
                                u5130 2996                                  u4170 32C4  
                                u4090 150E                                  u3610 0B8A  
                                u3530 0A70                                  u3450 0948  
                                u3290 2F40                                  u3370 39CE  
                                u4250 2730                                  u5051 323E  
                                u5131 2992                                  u4171 32C0  
                                u4091 150A                                  u3611 0B86  
                                u3531 0A6C                                  u3451 0944  
                                u3291 2F3C                                  u3371 39CA  
                                u4251 272C                                  u5060 3262  
                                u5140 29A6                                  u4180 3302  
                                u3700 0C76                                  u3620 0BC0  
                                u3540 0A90                                  u3460 0958  
                                u3380 455C                                  u4260 27D4  
                                u6100 3638                                  u5061 325E  
                                u5141 29A2                                  u4181 32FE  
                                u3701 0C72                                  u3621 0BBC  
                                u3541 0A8C                                  u3461 0954  
                                u3381 4558                                  u4261 27D0  
                                u6101 3634                                  u3390 4746  
                                u6110 30D8                                  u5070 3272  
                                u5150 29B4                                  u4190 3320  
                                u3710 0C8A                                  u3630 0BD0  
                                u3550 0A9E                                  u3470 0994  
                                u3391 4742                                  u6111 30D4  
                                u5071 326E                                  u5151 29B0  
                                u4191 331C                                  u3711 0C86  
                                u3631 0BCC                                  u3551 0A9A  
                                u3471 0990                                  u5160 29EE  
                                u5080 286E                                  u3720 0CA4  
                                u3640 0BFC                                  u3560 0AAE  
                                u3480 09A2                                  u3800 221A  
                                u5161 29EA                                  u5081 286A  
                                u3721 0CA0                                  u3641 0BF8  
                                u3561 0AAA                                  u3481 099E  
                                u5170 29FC                                  u5090 287C  
                                u3730 0CDE                                  u3650 0C0C  
                                u3570 0AE0                                  u3490 0A10  
                                u3810 2230                                  u6051 3D6A  
                                u5171 29F8                                  u5091 2878  
                                u3731 0CDA                                  u3651 0C08  
                                u3571 0ADC                                  u3491 0A0C  
                                u3811 222C                                  u4700 25F6  
                                u3740 0CF0                                  u3660 0C28  
                                u3580 0AEE                                  u3900 2444  
                                u3820 225E                                  u5180 407C  
                                u5500 2BFA                                  u6061 3D7C  
                                u4701 25F2                                  u3741 0CEC  
                                u3661 0C24                                  u3581 0AEA  
                                u3901 2440                                  u3821 225A  
                                u5181 4078                                  u5501 2BF4  
                                u4710 2640                                  u3750 0D00  
                                u3670 0C38                                  u3590 0B0C  
                                u3910 2456                                  u3830 227A  
                                u5510 2BFC                                  u6230 3E30  
                                u6071 3D8E                                  u4711 263C  
                                u3751 0CFC                                  u3671 0C34  
                                u3591 0B08                                  u3911 2452  
                                u3831 2276                                  u6231 3E2C  
                                u6080 3DAE                                  u4720 269C  
                                u5600 3D20                                  u3760 0D20  
                                u3680 0C4A                                  u5440 4646  
                                u3920 2464                                  u3840 22A8  
                                u4800 3CA0                                  u5520 2C12  
                                u6240 3E42                                  u6081 3DAA  
                                u4721 2698                                  u5601 3D1C  
                                u3761 0D1C                                  u3681 0C46  
                                u5441 4642                                  u3921 2460  
                                u3841 22A4                                  u4801 3C9C  
                                u5521 2C0E                                  u6241 3E3E  
                                u6090 4766                                  u4810 45C0  
                                u5450 3BB0                                  u4730 3E7E  
                                u5610 3D5E                                  u3770 0D32  
                                u3690 0C60                                  u3930 247C  
                                u3850 22B6                                  u5530 2C24  
                                u6250 3E5A                                  u6091 4762  
                                u4811 45BC                                  u5451 3BAC  
                                u4731 3E7A                                  u5611 3D5A  
                                u3771 0D2E                                  u3691 0C5C  
                                u3931 2478                                  u3851 22B2  
                                u5531 2C20                                  u6307 35CA  
                                u6251 3E56                                  u5700 4228  
                                u5460 3C14                                  u4740 3E9E  
                                u5620 36EC                                  u3780 0D4E  
                                u4900 1E02                                  u4820 1ABA  
                                u3860 23E4                                  u3940 42B2  
                                u4660 3F5E                                  u5540 2C48  
                                u5701 4224                                  u5461 3C10  
                                u5621 36E8                                  u3781 0D4A  
                                u4901 1DFE                                  u3861 23E0  
                                u3941 42AC                                  u4661 3F5A  
                                u5541 2C44                                  u6317 35F2  
                                u5710 4252                                  u4670 24D8  
                                u5470 3C46                                  u4910 42FC  
                                u4750 3EC8                                  u5630 3700  
                                u4830 1AE2                                  u3870 2402  
                                u3790 2218                                  u3950 42B4  
                                u5550 2C5A                                  u5711 424E  
                                u6407 47BA                                  u5471 3C42  
                                u4911 42F8                                  u5631 36FC  
                                u4831 1ADE                                  u3871 23FE  
                                u3791 2212                                  u6327 2D46  
                                u5551 2C56                                  u5720 4274  
                                u3960 44B6                                  u4680 256A  
                                u4920 3F0A                                  u5480 40CA  
                                u4760 3ED8                                  u5640 371C  
                                u4840 1B16                                  u3880 241C  
                                u5560 2C6C                                  u5721 4270  
                                u6417 4836                                  u3961 44B2  
                                u4681 2566                                  u4921 3F06  
                                u5481 40C6                                  u4761 3ED4  
                                u6337 47F0                                  u5641 3718  
                                u4825 1AAE                                  u3881 2418  
                                u5561 2C68                                  u4690 25AC  
                                u4930 3F22                                  u5490 40E4  
                                u3970 4404                                  u5650 3736  
                                u4850 1B32                                  u3890 2436  
                                u4770 45F4                                  u5570 2CA0  
                                u4691 25A8                                  u4931 3F1E  
                                u5491 40E0                                  u3971 4400  
                                u4747 3E94                                  u6347 4804  
                                u5651 3732                                  u4851 1B2E  
                                u3891 2432                                  u4771 45EE  
                                u5571 2C9C                                  u4940 41CE  
                                u5660 3750                                  u3980 123E  
                                u4860 1B74                                  u4780 45F6  
                                u5580 2CEC                                  u4941 41CA  
                                u4757 3EBE                                  u6357 3094  
                                u5661 374C                                  u3981 123A  
                                u4861 1B70                                  u4845 1B0C  
                                u5581 2CE8                                  u5670 376A  
                                u4950 3A12                                  u3990 1250  
                                u4870 1C80                                  u4790 3C66  
                                u5590 2D6E                                  u6367 310A  
                                u5671 3766                                  u4951 3A0E  
                                u3991 124C                                  u4871 1C7C  
                                u4791 3C62                                  u5591 2D6A  
                                u5680 3784                                  u4960 3A2C  
                                u4880 1D22                                  u6377 3BCC  
                                u5681 3780                                  u4961 3A28  
                                u4881 1D1E                                  u6297 3DFC  
                                u5690 4206                                  u4970 3A52  
                                u4890 1DE6                                  u5691 4202  
                                u6387 448A                                  u4971 3A4E  
                                u4980 3A70                                  u6397 47D8  
                                u4981 3A6C                                  u4990 3A8C  
                                u4991 3A88                                  u4895 1DDA  
                                _RBPU 007F8F                          i2___flge@ff1 0001  
                        i2___flge@ff2 0005                                  abs@a 0072  
                     _update_password 3CDC                                  _dbuf 0100  
                     ??_has_passwords 0063                                  _main 3DE4  
                                _dtoa 21E6                                  _prec 00F8  
                                _nout 00F4                                  pad@i 0077  
                                pad@p 0074                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 0079                                  fsr2l 000FD9  
                                btemp 0053                          i2___flneg@f1 0001  
                        show_temp@adc 00D9                __size_of_WriteDataXLCD 0044  
                    _EEPROM_read_user 42C8                                  prodh 000FF4  
                                prodl 000FF3                                  start 000E  
                        i2___fltol@f1 0042                          ___param_bank 000000  
                      ??_get_password 007B                         ?_convert_temp 00AB  
                               ??_abs 0074                                 ??_pad 0076  
           __end_of_show_status_relay 2D70                          _WriteCmdXLCD 44FC  
                __end_of_EEPROM_write 474E                         ___fltol@sign1 00A9  
                     __end_of___aodiv 2EFA                         ?_SetDDRamAddr 0001  
                     __end_of___fladd 0D62                                 ?_main 0001  
                               ?_dtoa 007B                       __end_of___aomod 3060  
                     __end_of___awdiv 3AC4                       __end_of___flneg 46AA  
                               _EEADR 000FA9                                 STR_10 089B  
                               STR_11 0897                                 STR_12 0880  
                               STR_20 0850                                 STR_13 0892  
                               STR_21 088D                                 STR_22 0892  
                               STR_14 0835                                 STR_15 0843  
                               STR_16 0887                                 STR_17 0870  
                               STR_18 0887                                 STR_19 0826  
                     __end_of___flmul 164E                       __end_of___flsub 43A2  
                     __end_of___fltol 3294                       ___awdiv@divisor 0062  
                               i2l121 3864                                 i2l205 46AC  
                               i2l209 46E0                                 i2l625 3B86  
                               i2l664 35A2                                 i2l922 0F50  
                               i2l691 349E                                 i2l659 355C  
                               i2l931 1220                                 i2l923 0F3E  
                               i2l668 4718                                 i2l924 0F04  
                               i2l939 106A                                 i2l948 113A  
                               i2l964 4472                       ___awdiv@counter 0064  
                               i2l949 1128                          vfpfcnvrt@fmt 00A1  
                               _PORTD 000F83                                 _TRISB 000F93  
                               _TRISD 000F95                         i2___fladd@grs 0010  
                 _update_status_relay 3F4A                          ?_read_keypad 0001  
                               _flags 00FA                                 _fputc 3868  
                               _fputs 4312                       __end_of_isdigit 45FC  
             __size_of_delay_show_lcd 001C                                 pad@fp 0070  
                               _width 00F6                                 _putch 4840  
                               _toint 0811                                 _start 35A4  
                               dtoa@d 007D                                 dtoa@i 009D  
                               dtoa@n 0095                       _change_password 3060  
                               dtoa@p 008F                                 dtoa@s 0093  
                               dtoa@w 0091                      __end_ofi2___flge 35A4  
                               tablat 000FF5                                 plusw1 000FE3  
                               plusw2 000FDB                         ?_grant_access 0066  
                               ttemp5 0054                                 ttemp6 0057  
                               ttemp7 005B                                 status 000FD8  
                               wtemp8 0054                       __end_of_sprintf 4198  
                       i2___flmul@grs 001C                    __size_ofi2___fladd 04C0  
                  __size_ofi2___awdiv 00C4                    __size_ofi2___flneg 0038  
                  __size_ofi2___flmul 042A                    __size_ofi2___flsub 0046  
                  __size_ofi2___fltol 0106                          _access_level 00FE  
                    __end_ofi2_roundf 21E6                      ??i2_convert_temp 004E  
                ?_update_status_relay 0001                  __size_of_EEPROM_read 0012  
                     __initialization 40E8                          __end_of_main 3E66  
                      ??_convert_temp 00AD                          __end_of_dtoa 24CA  
                    __end_of_BusyXLCD 442E                     _flag_status_relay 00FC  
                  __size_of_DelayXLCD 0014                 __size_of_DelayPORXLCD 0014  
                      ??_SetDDRamAddr 0060                      __end_of_OpenXLCD 378C  
                              ??_main 00DB                                ??_dtoa 0085  
                       __activetblptr 000002                         _WriteDataXLCD 44B8  
                         ?i2___xxtofl 0001              EEPROM_write_user@address 0065  
                 EEPROM_write@address 0060                         get_password@i 0083  
             __end_of_update_password 3D60                                _ADCON0 000FC2  
                              _ADCON1 000FC1                                _ADCON2 000FC0  
                              ?_fputc 0060                                ?_fputs 0069  
                              _ADRESH 000FC4                                _ADRESL 000FC3  
                              _EEDATA 000FA8                                _EECON2 000FA7  
                    ___awdiv@dividend 0060                                ?_putch 0001  
                              ?_start 0001                      _has_status_relay 41E6  
                              i2l1012 1A76                                i2l1015 1908  
                              i2l1008 1712                                i2l1025 1A38  
                              i2l1017 1980                                i2l1018 196E  
                              i2l1052 2BC2                                i2l1063 2B5A  
                              i2l1056 2AFE                                i2l1049 2A66  
                              i2l1188 21E4                                i2l4201 0E54  
                              i2l4211 0E72                                i2l4203 0E62  
                              i2l4301 10AE                                i2l4221 0E86  
                              i2l4213 0E76                                i2l4205 0E66  
                              i2l4311 10D8                                i2l4303 10BC  
                              i2l4231 0E9A                                i2l4223 0E8A  
                              i2l4215 0E7A                                i2l4207 0E6A  
                              i2l5121 3AD6                                i2l5201 348E  
                              i2l4321 110A                                i2l4313 10E8  
                              i2l4305 10BE                                i2l4241 0EEC  
                              i2l4233 0E9E                                i2l4225 0E8E  
                              i2l4217 0E7E                                i2l4209 0E6E  
                              i2l4161 0D7C                                i2l5131 3AFC  
                              i2l5123 3ADE                                i2l5211 2A76  
                              i2l4331 1164                                i2l4323 1120  
                              i2l4307 10CC                                i2l4315 10EA  
                              i2l4251 0F30                                i2l4243 0EFC  
                              i2l4227 0E92                                i2l4219 0E82  
                              i2l4235 0EA2                                i2l4171 0DB0  
                              i2l4163 0D7E                                i2l5141 3B34  
                              i2l5133 3B04                                i2l5125 3AE2  
                              i2l5117 3AC4                                i2l5221 2AB4  
                              i2l5213 2A8C                                i2l5205 2A12  
                              i2l4341 11E0                                i2l4333 119E  
                              i2l4309 10D4                                i2l4317 10F8  
                              i2l4253 0F32                                i2l4245 0F12  
                              i2l4237 0EA6                                i2l4229 0E96  
                              i2l4181 0DE2                                i2l4165 0D8E  
                              i2l4173 0DB8                                i2l4157 0D62  
                              i2l5151 3B60                                i2l5143 3B3A  
                              i2l5135 3B16                                i2l5127 3AF0  
                              i2l5119 3AC8                                i2l5231 2B3C  
                              i2l5223 2AE6                                i2l5207 2A22  
                              i2l4351 1200                                i2l4343 11E4  
                              i2l4327 114A                                i2l4335 11A0  
                              i2l4319 10FC                                i2l4271 0FBA  
                              i2l4263 0F82                                i2l4255 0F3C  
                              i2l4247 0F1E                                i2l4239 0ED0  
                              i2l4191 0E18                                i2l4183 0DE8  
                              i2l4175 0DC8                                i2l4167 0D9E  
                              i2l4159 0D6E                                i2l5145 3B50  
                              i2l5137 3B1E                                i2l5153 3B66  
                              i2l5129 3AF8                                i2l5161 339A  
                              i2l5241 2B92                                i2l5233 2B4A  
                              i2l5225 2AE8                                i2l5217 2AA0  
                              i2l5209 2A30                                i2l4353 120E  
                              i2l4345 11F2                                i2l4337 11B0  
                              i2l4329 1156                                i2l4273 0FBE  
                              i2l4265 0F92                                i2l4257 0F5E  
                              i2l4281 0FDE                                i2l4249 0F22  
                              i2l4193 0E28                                i2l4185 0DF6  
                              i2l4177 0DCE                                i2l4169 0DAE  
                              i2l5155 3B76                                i2l5147 3B58  
                              i2l5139 3B26                                i2l5171 33F0  
                              i2l5163 33B0                                i2l5243 2BA2  
                              i2l5235 2B68                                i2l5227 2AF4  
                              i2l5219 2AA8                                i2l4355 1210  
                              i2l4347 11F8                                i2l4339 11C0  
                              i2l4283 1004                                i2l4291 105A  
                              i2l4275 0FCC                                i2l4267 0FA0  
                              i2l4259 0F6E                                i2l4195 0E2A  
                              i2l4187 0DF8                                i2l4179 0DE0  
                              i2l5251 1E38                                i2l5157 3B7E  
                              i2l5149 3B5A                                i2l5173 3400  
                              i2l5245 2BB0                                i2l5237 2B6A  
                              i2l5229 2B30                                i2l4349 11FA  
                              i2l4293 1080                                i2l4285 1038  
                              i2l4277 0FCE                                i2l4269 0FAE  
                              i2l4189 0E08                                i2l4197 0E32  
                              i2l5261 1F14                                i2l5253 1E58  
                              i2l5421 37FA                                i2l5183 342A  
                              i2l5175 3404                                i2l5167 33C4  
                              i2l5247 2BB2                                i2l5239 2B6E  
                              i2l4295 1090                                i2l4287 103A  
                              i2l4279 0FD8                                i2l4199 0E42  
                              i2l5271 20A2                                i2l5263 1F30  
                              i2l5255 1EA0                                i2l5407 46AA  
                              i2l5431 382E                                i2l5423 37FC  
                              i2l5193 3452                                i2l5185 3434  
                              i2l5177 3412                                i2l5169 33EE  
                              i2l4801 1752                                i2l4289 104A  
                              i2l5281 21D4                                i2l5273 20D4  
                              i2l5257 1EB4                                i2l5409 46BA  
                              i2l5441 3862                                i2l5433 3836  
                              i2l5425 380A                                i2l5417 378E  
                              i2l5195 345E                                i2l5187 343E  
                              i2l4731 351C                                i2l4723 34A0  
                              i2l4811 17A2                                i2l4803 175C  
                              i2l4299 10A4                                i2l5275 2140  
                              i2l5267 1F68                                i2l5259 1EF0  
                              i2l5435 3844                                i2l5427 3818  
                              i2l5419 379C                                i2l5197 346E  
                              i2l4741 35A0                                i2l4733 352A  
                              i2l4725 34CE                                i2l4821 17E4  
                              i2l4813 17AE                                i2l4805 1772  
                              i2l5277 2174                                i2l5269 2036  
                              i2l5437 384C                                i2l5429 3820  
                              i2l5199 347E                                i2l4735 353C  
                              i2l4727 34DE                                i2l4831 1846  
                              i2l4823 17F4                                i2l4815 17BC  
                              i2l4807 177E                                i2l5279 21B0  
                              i2l5439 385A                                i2l4737 354A  
                              i2l4729 350C                                i2l4841 18EE  
                              i2l4833 1862                                i2l4825 180E  
                              i2l4817 17C8                                i2l4809 1796  
                              i2l4761 165A                                i2l4745 46E2  
                              i2l4753 442E                        ??_grant_access 0068  
                              i2l4739 359A                                i2l4851 192A  
                              i2l4843 18F8                                i2l4835 188C  
                              i2l4827 181E                                i2l4819 17D8  
                              i2l4771 169A                                i2l4763 1668  
                              i2l4747 46F8                                i2l4755 443E  
                              i2l4861 199C                                i2l4853 1938  
                              i2l4845 1906                                i2l4837 18C2  
                              i2l4829 183A                                i2l4781 16CA  
                              i2l4773 16A0                                i2l4765 166A  
                              i2l4749 4708                                i2l4871 1A06  
                              i2l4863 19AA                                i2l4855 1966  
                              i2l4847 1918                                i2l4839 18D0  
                              i2l4791 1702                                i2l4783 16CC  
                              i2l4775 16B0                                i2l4767 167A  
                              i2l4759 164E                                i2l4881 1A5C  
                              i2l4873 1A20                                i2l4865 19D4  
                              i2l4849 1926                                i2l4793 1722  
                              i2l4785 16DC                                i2l4777 16B6  
                              i2l4769 168A                                i2l4875 1A3C  
                              i2l4883 1A62                                i2l4859 1990  
                              i2l4867 19D8                                i2l4795 1732  
                              i2l4787 16EC                                i2l4779 16BC  
                              i2l4885 1A66                                i2l4877 1A4C  
                              i2l4869 19F2                                i2l4789 16FC  
                              i2l4879 1A5A                                i2l4799 1746  
                    __end_of___xxtofl 2A10                  get_password@password 0079  
            _assign_default_passwords 3D60                      __end_of_delay_ms 44B8  
                      i2___fladd@aexp 000E                        i2___fladd@bexp 000F  
                        _DelayPORXLCD 47FC                 ??_update_status_relay 0062  
                        vfprintf@cfmt 00B5                      __end_of_high_isr 3868  
                              ___flge 3294                             ??___aodiv 0070  
                           ??___fladd 0068                             ??___aomod 0070  
                           ??___awdiv 0064                             ??___flneg 0064  
                           ??___flmul 0076                             ??___flsub 0078  
                           ??___fltol 00A5            __size_of_show_status_relay 01AC  
                              _config 477E                                clear_0 4126  
                              clear_1 4132                      ___awdiv@quotient 0066  
                              isa$std 000001                                pad@buf 0072  
                              _roundf 1A78                        ?_WriteDataXLCD 0001  
                              dtoa@fp 007B                                _strcmp 3EDA  
                              _strcpy 4582                                _strlen 45FC  
                      i2___awdiv@sign 0006                                fputc@c 0060  
                              fputs@c 006D                                fputs@i 006E  
                        __pdataCOMRAM 0051                                fputs@s 0069  
                   __end_ofi2___fladd 1222                             ??_isdigit 0062  
             __end_of_change_password 318C                     __end_ofi2___awdiv 3B88  
                   __end_ofi2___flneg 471A                     __end_ofi2___flmul 1A78  
                   __end_ofi2___flsub 4474                     __end_ofi2___fltol 34A0  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                              putch@c 0001                      __end_of_putsXLCD 3EDA  
                    __end_of_vfprintf 4086                  __end_of_get_password 3C48  
                           ??_sprintf 00BD                        i2___flmul@aexp 0020  
                      i2___flmul@bexp 0021                        i2___flmul@sign 001B  
                      i2___flmul@temp 0026                        i2___flmul@prod 0022  
                   __end_of_DelayXLCD 47FC                            ___flge@ff1 0060  
                   _EEPROM_write_user 4198                            ___flge@ff2 0064  
                        ___xxtofl@arg 006A                          ___xxtofl@exp 0069  
                        ___xxtofl@val 0060                            __accesstop 0060  
             __end_of__initialization 4138                        i2___fltol@exp1 004B  
                          ___flneg@f1 0060                    ?_EEPROM_write_user 0062  
                       ___rparam_used 000001                            ___fltol@f1 00A1  
                  toggle_relay@status 0068                   __size_ofi2___xxtofl 01B4  
                      __pcstackCOMRAM 0001                   ??_EEPROM_write_user 0065  
               __size_of_EEPROM_write 0034                          __pidataBANK0 4810  
               _show_status_relay$776 007D                         __end_of_fputc 3934  
                       __end_of_fputs 435A                         __end_of_putch 4842  
                       __end_of_start 369A                         __end_of_toint 0815  
                  __size_of_clean_lcd 0020            grant_access@input_password 0066  
                           ?i2___flge 0001              __end_of_EEPROM_read_user 4312  
                           ?i2_roundf 0028                      ?_update_password 0068  
           __end_of_EEPROM_write_user 41E6                        _delay_show_lcd 47CC  
                             ??_fputc 0064                               ??_fputs 006D  
                __end_of_convert_temp 4670                __size_of_DelayFor18TCY 000A  
                             ??_putch 0060                               ??_start 0085  
                __size_of_read_keypad 01D6                            __pbssBANK0 00F0  
                          __pbssBANK1 0100                             ?_BusyXLCD 0001  
                     WriteCmdXLCD@cmd 0060                  __end_of_SetDDRamAddr 43E8  
                        _EEPROM_write 471A           update_password@new_password 006A  
                 grant_access@address 0068   __end_of_assign_default_status_relay 477E  
         _assign_default_status_relay 474E                             ?_OpenXLCD 0001  
                             ?___flge 0060                     WriteDataXLCD@data 0060  
                             ?_config 0001                       ??_WriteDataXLCD 0060  
                __end_of_grant_access 40E8                               ?_roundf 0087  
                          ??i2___flge 0009                               ?_strcmp 0060  
                             ?_strcpy 0060                               ?_strlen 0060  
                           ?___xxtofl 0060                      ?_change_password 0001  
              __end_of_delay_show_lcd 47E8                    __size_of_show_temp 006C  
                           ?_delay_ms 0060                    __size_of_vfpfcnvrt 01B8  
                          ??i2_roundf 002C                             ?_high_isr 0001  
                          ??_BusyXLCD 0060                     __end_of_clean_lcd 47CC  
                          ??_OpenXLCD 0061                 __end_of_has_passwords 427E  
                     i2___fladd@signs 000D                      EEPROM_write@data 0061  
                             __Hparam 0000                               __Lparam 0000  
                     __size_of___flge 0106                               ___aodiv 2D70  
                             ___fladd 08A0                               ___aomod 2EFA  
                             ___awdiv 39FE                         _DelayFor18TCY 4834  
                             ___flneg 4670                               ___flmul 1222  
                             ___flsub 435A                               ___fltol 318C  
                           ?_putsXLCD 0061                             ?_vfprintf 00AF  
                        __psmallconst 0800              __end_of_has_status_relay 4232  
                     __size_of_config 002E              option_relay@relay_number 006A  
                             __pcinit 40E8        EEPROM_write_user@start_address 0064  
                             __ramtop 0800                               __ptext0 3DE4  
                             __ptext1 35A4                               __ptext2 2BC4  
                             __ptext3 3F4A                               __ptext4 3C48  
                             __ptext5 427E                               __ptext6 45C2  
                             __ptext7 3FB8                               __ptext8 4146  
                             __ptext9 4024                       __size_of_roundf 03C0  
                     __size_of_strcmp 0070                       __size_of_strcpy 0040  
                     __size_of_strlen 003A                 __size_of_get_password 00C0  
                        __size_of_abs 0042                          __size_of_pad 00CA  
                             _isdigit 45C2                          ??i2___xxtofl 0005  
                          ??___xxtofl 0064                       ?_delay_show_lcd 0001  
                          ??_delay_ms 0062            ??_assign_default_passwords 0067  
                EEPROM_read_user@user 0061            __size_of_EEPROM_write_user 004E  
                             _sprintf 4146                               main@key 00DD  
                          ??_high_isr 0050       change_password@current_password 008E  
                      __pintcode_body 378C                            delay_ms@ms 0060  
                end_of_initialization 4138         assign_default_passwords@F4301 00EA  
       assign_default_passwords@F4303 00E4         assign_default_passwords@F4305 00DE  
                             fputc@fp 0062                         __Lmediumconst 0000  
                             int_func 378C                               fputs@fp 006B  
                       ??_EEPROM_read 0060                        i2___xxtofl@arg 000B  
                      i2___xxtofl@exp 000A                        i2___xxtofl@val 0001  
             EEPROM_read_user@address 0064                     __end_of_show_temp 4024  
                   __end_of_vfpfcnvrt 2858                        ?_DelayFor18TCY 0001  
                  __end_ofi2___xxtofl 2BC4                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                        _get_password 3B88                               roundf@e 0093  
                             roundf@u 0099                               roundf@x 0087  
                             roundf@y 009D                            ??_putsXLCD 0063  
              update_password@address 006C         assign_default_passwords@user1 0067  
       assign_default_passwords@user2 006D         assign_default_passwords@user3 0073  
                          ??_vfprintf 00B5                               strcmp@l 0060  
                             strcmp@r 0062                               strcpy@d 0066  
                             strlen@a 0062                               strcpy@s 0064  
                             strlen@s 0060                             _PORTBbits 000F81  
                           _PORTCbits 000F82                 start@current_password 0087  
                         ___fladd@grs 006F                 __size_of_convert_temp 003A  
                       ___xxtofl@sign 0068                             _TRISAbits 000F92  
                           _TRISCbits 000F94                             _TRISEbits 000F96  
                       ?_option_relay 006A                       i2___fltol@sign1 004A  
               __size_of_SetDDRamAddr 0046                             i2___fladd 0D62  
                           i2___awdiv 3AC4                             i2___flneg 46E2  
                           i2___flmul 164E                             i2___flsub 442E  
                           i2___fltol 339A           __end_of_update_status_relay 3FB8  
                         ___flmul@grs 007B                         ?_toggle_relay 0062  
                  i2___awdiv@dividend 0001                             _DelayXLCD 47E8  
               __size_of_grant_access 0062                   __end_of_EEPROM_read 4834  
                      __end_of___flge 339A                          _convert_temp 4636  
                         vfpfcnvrt@ap 00A3                           vfpfcnvrt@fp 009F  
                         vfpfcnvrt@ll 00A7                         __pidataCOMRAM 483E  
                      __end_of_config 47AC                     EEPROM_read_user@i 0065  
                        _SetDDRamAddr 43A2               __size_ofi2_convert_temp 0038  
                      __end_of_roundf 1E38                    SetDDRamAddr@DDaddr 0060  
                      __end_of_strcmp 3F4A                        __end_of_strcpy 45C2  
                      __end_of_strlen 4636                     ?_EEPROM_read_user 0061  
                   __size_ofi2___flge 0104                   start_initialization 40E8  
                  i2___awdiv@quotient 0007                        ??_option_relay 006C  
                         __end_of_abs 4582                           __end_of_pad 39FE  
                  ??_EEPROM_read_user 0064                            ?i2___fladd 0001  
                          ?i2___awdiv 0001                            ?i2___flneg 0001  
                          ?i2___flmul 000F                            ?i2___flsub 0011  
                          ?i2___fltol 0042                             i2roundf@e 0034  
                           i2roundf@u 003A                             i2roundf@x 0028  
                           i2roundf@y 003E                     __size_ofi2_roundf 03AE  
                      ??_toggle_relay 0064                          _grant_access 4086  
                   __size_of_BusyXLCD 0046                            ?_DelayXLCD 0001  
                     ??_DelayFor18TCY 0060                           vfprintf@fmt 00B1  
                   __size_of_OpenXLCD 00F2                         i2_roundf$1960 0036  
                       i2_roundf$1961 0030                              ??___flge 0068  
                       ?_WriteCmdXLCD 0001                              ??_config 0062  
                         __pdataBANK0 00DE                              ??_roundf 008B  
                            ??_strcmp 0064                              ??_strcpy 0064  
                            ??_strlen 0062                  has_passwords@address 0063  
                           ___fladd@a 0064                             ___fladd@b 0060  
                  EEPROM_write_user@i 0066                             ___flmul@a 0072  
                           ___flmul@b 006E                             ___flsub@a 0074  
                           ___flsub@b 0070                         __pcstackBANK0 0060  
    __end_of_assign_default_passwords 3DE4                      ___aodiv@dividend 0060  
                       ??_read_keypad 0065                     __size_of___xxtofl 01B8  
                   __size_of_delay_ms 0044                     __size_of_high_isr 3860  
            __size_of_update_password 0084                           _EEPROM_read 4822  
                     get_password@key 0082                        putsXLCD@buffer 0061  
                           _clean_lcd 47AC                             _dtoa$1559 008D  
                    read_keypad@F4312 0801                             __pintcode 0008  
                      ??_WriteCmdXLCD 0060                              ?___aodiv 0060  
                            ?___fladd 0060                              ?___aomod 0060  
                            ?___awdiv 0060                      ___aodiv@quotient 0072  
                            ?___flneg 0060                              ?___flmul 006E  
                            ?___flsub 0070                              ?___fltol 00A1  
                   ?_has_status_relay 0061                      ??_delay_show_lcd 0060  
                   __size_of_putsXLCD 0074                 __end_of_WriteDataXLCD 44FC  
                   __size_of_vfprintf 0062                    ??_has_status_relay 0063  
                         __smallconst 0800                              ?_isdigit 0060  
                         ??i2___fladd 0009                           ??i2___awdiv 0005  
                         ??i2___flneg 0005                              ?_sprintf 00B7  
                         ??i2___flmul 0017                           ??i2___flsub 0019  
                         ??i2___fltol 0046                        __size_of_fputc 00CC  
                      __size_of_fputs 0048       update_password@current_password 0068  
                      __size_of_putch 0002                        __size_of_start 00F6  
            __size_of_change_password 012C                   __end_of_read_keypad 26A0  
                            _LATEbits 000F8D                             delay_ms@i 0063  
                         ??_DelayXLCD 0060                              _IPR1bits 000F9F  
                            _PIE1bits 000F9D                         ?_DelayPORXLCD 0001  
                          ?_clean_lcd 0001                              i2u430_40 0DE0  
                            i2u430_41 0DDC                              i2u431_40 0DF6  
                            i2u431_41 0DF2                              i2u520_40 350C  
                            i2u440_40 0F30                              i2u432_40 0E08  
                            i2u600_40 1F30                              i2u520_41 3508  
                            i2u440_41 0F2C                              i2u432_41 0E04  
                            i2u600_41 1F2C                              i2u521_40 352A  
                            i2u441_40 0F50                              i2u433_40 0E18  
                            i2u601_40 2036                              i2u521_41 3526  
                            i2u441_41 0F4C                              i2u433_41 0E14  
                            i2u601_41 2032                              _PIR1bits 000F9E  
                     OpenXLCD@lcdtype 0061                              i2u522_40 354A  
                            i2u530_40 16EC                              i2u450_40 1090  
                            i2u442_40 0F5E                              i2u434_40 0E54  
                            i2u602_40 20D4                              i2u522_41 3546  
                            i2u530_41 16E8                              i2u450_41 108C  
                            i2u442_41 0F5A                              i2u434_41 0E50  
                            i2u602_41 20D0                              i2u523_40 359A  
                            i2u531_40 1722                              i2u451_40 10BC  
                            i2u443_40 0F6E                              i2u435_40 0E62  
                            i2u427_40 0D7C                              i2u603_40 2194  
                            i2u523_41 3596                              i2u531_41 171E  
                            i2u451_41 10B8                              i2u443_41 0F6A  
                            i2u435_41 0E5E                              i2u427_41 0D78  
                            _PIR2bits 000FA1                              i2u603_45 218A  
                            i2u540_40 19AA                              i2u532_40 1732  
                            i2u524_40 46F8                              i2u460_40 119E  
                            i2u452_40 10CC                              i2u444_40 0FA0  
                            i2u436_40 0ED0                              i2u428_40 0D8E  
                            i2u604_40 21B0                              i2u612_40 46BA  
                            i2u620_40 382E                              i2u540_41 19A6  
                            i2u532_41 172E                              i2u524_41 46F4  
                            i2u460_41 119A                              i2u452_41 10C8  
                            i2u444_41 0F9C                              i2u436_41 0ECC  
                            i2u428_41 0D8A                              i2u604_41 21AC  
                            i2u612_41 46B6                              i2u620_41 382A  
                            i2u541_40 19F2                              i2u533_40 18AC  
                            i2u525_40 1668                              i2u461_40 11B0  
                            i2u453_40 10E8                              i2u445_40 0FAE  
                            i2u437_40 0EE8                              i2u429_40 0D9E  
                            i2u621_40 3844                              i2u613_40 379C  
                            i2u541_41 19EE                              i2u525_41 1664  
                            i2u461_41 11AC                              i2u453_41 10E4  
                            i2u445_41 0FAA                              i2u437_41 0EE2  
                            i2u429_41 0D9A                              i2u621_41 3840  
                            i2u613_41 3798                              i2u533_45 18A2  
                            i2u542_40 1A20                              i2u534_40 1906  
                            i2u526_40 167A                              i2u462_40 11C0  
                            i2u454_40 10F8                              i2u446_40 0FCC  
                            i2u438_40 0EEA                              i2u622_40 385A  
                            i2u614_40 37BE                              i2u542_41 1A1C  
                            i2u534_41 1902                              i2u526_41 1676  
                            i2u462_41 11BC                              i2u454_41 10F4  
                            i2u446_41 0FC8                              i2u622_41 3856  
                            i2u614_41 37B8                              i2u519_40 34CE  
                            i2u543_40 1A5A                              i2u535_40 1926  
                            i2u527_40 168A                              i2u463_40 11E0  
                            i2u455_40 110A                              i2u447_40 1004  
                            i2u439_40 0F12                              i2u615_40 37C0  
                            i2u519_41 34CA                              i2u543_41 1A56  
                            i2u535_41 1922                              i2u527_41 1686  
                            i2u463_41 11DC                              i2u455_41 1106  
                            i2u447_41 1000                              i2u439_41 0F0E  
                            i2u536_40 1938                              i2u528_40 16CA  
                            i2u464_40 11F2                              i2u456_40 1120  
                            i2u448_40 104A                              i2u616_40 37EA  
                            i2u536_41 1934                              i2u528_41 16C6  
                            i2u464_41 11EE                              i2u456_41 111C  
                            i2u448_41 1046                              i2u616_41 37E2  
        get_password@entered_password 007D                              i2u537_40 1966  
                            i2u529_40 16DC                              i2u465_40 120E  
                            i2u457_40 1136                              i2u449_40 1080  
                            i2u537_41 1962                              i2u529_41 16D8  
                            i2u465_41 120A                              i2u457_41 1132  
                            i2u449_41 107C                              i2u538_40 197C  
                            i2u458_40 114A                              i2u618_40 380A  
                            i2u617_48 37EC                              i2u538_41 1978  
                            i2u458_41 1146                              i2u618_41 3806  
                            i2u539_40 1990                              i2u459_40 1164  
                            i2u619_40 3818                              i2u539_41 198C  
                            i2u459_41 1160                              i2u619_41 3814  
                            i2u580_40 33E4                              i2u580_45 33DA  
                            i2u573_40 3AD6                              i2u581_40 3412  
                            i2u573_41 3AD2                              i2u581_41 340E  
                            i2u574_40 3AF0                              i2u582_40 3426  
                            i2u590_40 2B2C                              i2u574_41 3AEC  
                            i2u582_41 3422                              i2u590_41 2B28  
                            i2u575_40 3B16                              i2u583_40 344E  
                            i2u591_40 2B4A                              i2u575_41 3B12  
                            i2u583_41 344A                              i2u591_41 2B46  
                            i2u576_40 3B34                              i2u584_40 346E  
                            i2u592_40 2B5A                              i2u576_41 3B30  
                            i2u584_41 346A                              i2u592_41 2B56  
                            i2u577_40 3B50                              i2u585_40 347E  
                            i2u593_40 2B68                              i2u577_41 3B4C  
                            i2u585_41 347A                              i2u593_41 2B64  
                            i2u578_40 3B76                              i2u594_40 2BA2  
                            i2u586_40 2A22                              i2u578_41 3B72  
                            i2u594_41 2B9E                              i2u586_41 2A1E  
                            i2u579_40 33B0                              i2u595_40 2BB0  
                            i2u587_40 2A30                              i2u579_41 33AC  
                            i2u595_41 2BAC                              i2u587_41 2A2C  
                            i2u588_40 2A8C                              i2u596_40 1E78  
                            i2u588_41 2A88                              i2u596_45 1E6E  
                            i2u589_40 2AE2                              i2u597_40 1EA0  
                            i2u589_41 2ADE                              i2u597_41 1E9C  
                            i2u598_40 1ED4                              i2u598_45 1ECA  
                            i2u599_40 1EF0                              i2u599_41 1EEC  
                __end_of_option_relay 3CDC                              _RCONbits 000FD0  
                           _show_temp 3FB8                             _vfpfcnvrt 26A0  
            toggle_relay@relay_number 0062                            _ADCON0bits 000FC2  
                      i2_convert_temp 46AA                              i2___flge 34A0  
                __end_of_toggle_relay 42C8                     i2___awdiv@divisor 0003  
              __size_of_has_passwords 004C                     i2___awdiv@counter 0005  
                            i2_roundf 1E38                             copy_data0 40FC  
                            _BusyXLCD 43E8                        ??_DelayPORXLCD 0060  
                          roundf@F528 00F0                            _EECON1bits 000FA6  
                            _OpenXLCD 369A                              __Hrparam 0000  
   __size_of_assign_default_passwords 0084                            vfprintf@ap 00B3  
                            __Lrparam 0000                            vfprintf@fp 00AF  
           ?_assign_default_passwords 0001                     ??_update_password 006C  
                    __size_of___aodiv 018A                      __size_of___fladd 04C2  
                    __size_of___aomod 0166                __end_ofi2_convert_temp 46E2  
                    __size_of___awdiv 00C6                      __size_of___flneg 003A  
                          ?_show_temp 0001                      __size_of___flmul 042C  
                    __size_of___flsub 0048                      __size_of___fltol 0108  
                          ?_vfpfcnvrt 009F                       ___aodiv@divisor 0068  
                     ___aodiv@counter 0070                            sprintf@fmt 00B9  
                            ___xxtofl 2858                      __size_of_isdigit 003A  
                            _delay_ms 4474                           _read_keypad 24CA  
                            __ptext10 26A0                              __ptext11 21E6  
                            __ptext20 4636                              __ptext12 3934  
                            __ptext21 1A78                              __ptext13 45FC  
                            __ptext30 477E                              __ptext22 435A  
                            __ptext14 4312                              __ptext31 369A  
                            __ptext23 08A0                              __ptext15 3868  
                            __ptext40 3EDA                              __ptext32 43A2  
                            __ptext24 4670                              __ptext16 4840  
                            __ptext41 42C8                              __ptext33 47E8  
                            __ptext25 1222                              __ptext17 4540  
                            __ptext50 4834                              __ptext42 3B88  
                            __ptext34 47FC                              __ptext26 3294  
                            __ptext18 2EFA                              __ptext51 474E  
                            __ptext43 4582                              __ptext35 3060  
                            __ptext27 2858                              __ptext19 2D70  
                            __ptext60 1E38                              __ptext52 41E6  
                            __ptext44 24CA                              __ptext36 3CDC  
                            __ptext28 318C                              __ptext61 442E  
                            __ptext53 3D60                              __ptext45 4474  
                            __ptext37 3E66                              __ptext29 39FE  
                            __ptext62 0D62                              __ptext54 4232  
                            __ptext46 44B8                              __ptext38 43E8  
                            __ptext63 46E2                              __ptext55 4822  
                            __ptext47 47CC                              __ptext39 4086  
                            __ptext64 164E                              __ptext56 4198  
                            __ptext48 47AC                              __ptext65 34A0  
                            __ptext57 471A                              __ptext49 44FC  
                            __ptext66 2A10                              __ptext67 339A  
                            __ptext59 46AA                              __ptext68 3AC4  
                            _high_isr 0008                  __end_of_WriteCmdXLCD 4540  
                    __size_of_sprintf 0052                       read_keypad@keys 0067  
                          strcpy@dest 0060                         ?_EEPROM_write 0060  
                       __size_of_main 0082                         __size_of_dtoa 02E4  
                show_status_relay@rl1 007F                  show_status_relay@rl2 0081  
                show_status_relay@key 0083             __size_of_EEPROM_read_user 004A  
        ?_assign_default_status_relay 0001                         _has_passwords 4232  
                         ??_clean_lcd 0061          __size_of_update_status_relay 006E  
                   ??_change_password 0085                              isa$xinst 000000  
                            int$flags 0053                              _putsXLCD 3E66  
                            _vfprintf 4024                       ?i2_convert_temp 004C  
                    ___aomod@dividend 0060                            _INTCONbits 000FF2  
         change_password@new_password 0089              __end_ofread_keypad@F4312 0811  
                            isdigit@c 0060                              intlevel2 0000  
                           sprintf@ap 00BD                        ??_EEPROM_write 0061  
                     i2___xxtofl@sign 0009                      grant_access@user 0069  
               __size_of_option_relay 0094                        read_keypad@col 0077  
                        ?_EEPROM_read 0001                             strcpy@src 0062  
                      ?_has_passwords 0061                      show_temp@int_str 00C5  
       ??_assign_default_status_relay 0064                 __end_of_DelayFor18TCY 483E  
                 update_password@user 006D                 __size_of_toggle_relay 004A  
                         ??_show_temp 00C5                       ___aomod@divisor 0068  
                         ??_vfpfcnvrt 00A5                       ___aomod@counter 0070  
       EEPROM_read_user@start_address 0063                              sprintf@f 00BF  
                            sprintf@s 00B7                  __end_of_DelayPORXLCD 4810  
                        _option_relay 3C48                         ___fladd@signs 006C  
                        ___aodiv@sign 0071             __size_of_has_status_relay 004C  
                        ___fladd@aexp 006D                          ___fladd@bexp 006E  
                        _toggle_relay 427E                          ___aomod@sign 0071  
                         _roundf$1848 0095                           _roundf$1849 008F  
